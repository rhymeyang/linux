import{_ as n,c as i,a as l,b as e,d as t,o as s}from"./app-D-CuBheB.js";const a={};function r(u,o){return s(),i("div",null,o[0]||(o[0]=[l('<p>As you study this section, answer the following questions:</p><ul><li> Why is it important to completely identify the source of a problem before beginning to fix it? </li><li> What are good sources to research when creating a hypothesis and determining a resolution? </li><li>After you fix a problem, what actions should you still complete?</li><li>How can you verify the connectivity of hosts within a network?</li><li> Which utilities send name resolution requests? Which utility will provide the most information about the hostname or IP address? </li></ul><p>In this section, you will learn to:</p><ul><li>Find path information</li><li>Troubleshoot IP configurations</li></ul><p>Key terms for this section include the following:</p><table class="terms"><thead><tr><th>Term</th><th>Definition</th></tr></thead><tbody><tr><td>Latency</td><td> The amount of time it takes data to travel from one point of the network to another. </td></tr><tr><td>Bandwidth</td><td>The size of the communication channel.</td></tr><tr><td>Throughput</td><td>The ability of the system to send and receive data.</td></tr><tr><td>Saturation</td><td> Indicates that the maximum capacity of the bandwidth has been achieved. </td></tr></tbody></table><p>This section helps you prepare for the following certification exam objectives:</p><table class="objectives"><thead><tr><th>Exam</th><th>Objective</th></tr></thead><tbody><tr><td>TestOut Linux Pro</td><td> 3.1 Configure networking <ul><li>Find the IP address or DNS of a host</li><li>Troubleshoot an IP configuration <br></li></ul></td></tr><tr><td>CompTIA Linux+ XK0-005</td><td> 1.5 Given a scenario, use the appropriate networking tools or configuration files. <ul><li> Interface management <ul><li>ss</li><li>nmcli</li><li>ifcfg</li><li>route</li><li>/etc/sysconfig/network-scripts/</li></ul></li><li> Name resolution <ul><li>dig</li><li>nslookup</li></ul></li><li> Network monitoring <ul><li>tcpdump</li><li>wireshark/tshark</li><li>netstat</li><li>traceroute</li><li>ping</li><li>mtr</li></ul></li><li> Remote networking tools <ul><li>nc</li></ul></li></ul><p> 4.2 Given a scenario, analyze and troubleshoot network resource issues. </p><ul><li> Network configuration issues <ul><li>Subnet</li><li>Routing</li></ul></li><li>Firewall issues</li><li> Interface errors <ul><li>Dropped packets</li><li>Collisions</li><li>Link status</li></ul></li><li> Bandwidth limitations <ul><li>High latency</li></ul></li></ul></td></tr></tbody></table><h2 id="_12-8-1-troubleshooting-methodology" tabindex="-1"><a class="header-anchor" href="#_12-8-1-troubleshooting-methodology"><span>12.8.1 Troubleshooting Methodology</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>Troubleshooting Methodology 00:00-00:36 In this lesson, we&#39;re going to discuss troubleshooting methodology.</p><p>Good troubleshooting skills are essential for every Linux system administrator. Some issues will be fast and easy to troubleshoot, whereas others can be time-consuming and somewhat frustrating.</p><p>So, how can you become good at troubleshooting? Well, first, you need a solid troubleshooting procedure or methodology. Second, you need to have a working knowledge of the various troubleshooting tools at your disposal. Third, the more experience you have troubleshooting issues, the better you&#39;ll get at it.</p><p>Troubleshooting Model 00:36-01:21 Network problems can be caused by a wide array of issuesâ€”we can&#39;t even begin to cover all of them here. However, what we can do is focus on using a standardized troubleshooting process. By using a standardized process, you can adapt and resolve a wide range of network problems.</p><p>What happens if you don&#39;t use a model? Well, administrators often try one fix after the other, hoping that one will magically repair the problem. While this may seem reasonable, it can be risky, especially when working on a live system. If you accidentally try the wrong fix, you could cause an even bigger problem.</p><p>Let&#39;s look at an example of a standard troubleshooting model. The goal of this model is to identify the source of the problem before you start trying to fix things.</p><p>Gather Information 01:21-01:45 You do this by first gathering information. This step is critical. To effectively identify the problem, you&#39;ll want to gather information to help determine the symptoms.</p><p>What were the error messages that were displayed?</p><p>How extensive is the problem? Is it isolated to just one system, or are there many systems on the network experiencing the same problem?</p><p>How many users are impacted? And so on.</p><p>Next, you need to identify what has changed in the system or network.</p><p>Identify What Has Changed 01:45-01:57 Has new software or hardware been installed? Have you performed an upgrade? Did a user change something? Or did you change something?</p><p>Create a Hypothesis 01:57-02:31 Now, using the information you&#39;ve gathered and considering what has changed, you can start to create a hypothesis. For this step, you may need to do some research. You could check your documentation for previous incidents and fixes.</p><p>The internet is also a great resource. Frequently asked questions, vendor documentation, knowledge bases, forums, and so on are abundant on the internet.</p><p>You may also want to consult with coworkers. This can be helpful, especially if you want to run your hypothesis by them before moving on. Ideally, you want to narrow your results to one or two likely causes.</p><p>The next step is to determine an appropriate fix.</p><p>Determine the Appropriate Fix 02:31-03:14 Keep in mind that this step isn&#39;t fixing! We&#39;re just deciding what the problem is and how we&#39;re going to fix it. Similar to the previous step, you may need to consult various sources on the internet, talk to your peers, review documentation, and maybe even draw on your own experience to identify what steps you need to take to fix the problem.</p><p>As you do this, be sure to identify the possible ramifications of implementing the fix. Will it impact active systems? Users? Critical applications or infrastructure? Sometimes a fix can cause just as much if not more damage than the original problem, so it&#39;s important to consider all ramifications.</p><p>Implement the Fix 03:14-03:34 Step five is to implement the fix. At this point, you&#39;re ready to use your previously gathered information to start making changes. Once you finish implementing the fix, be sure to take the time to go back through to verify that the fix really did repair the problem, that each symptom has been resolved, and that the issue doesn&#39;t reappear again.</p><p>Ensure User Satisfaction 03:34-03:55 Part of ensuring that the issue has been resolved is to touch base with the user to ensure they&#39;re satisfied with the outcome. If a problem affects users, you need to make sure to communicate the nature of the problem to them. Make sure they know that it has been fixed. If applicable, you can also take the opportunity to give them tips on how to keep the problem from occurring in the future.</p><p>Document the Solution 03:55-04:30 Last but definitely not least is to document the problem and the solution. There&#39;s a good chance something similar will happen again, so you want to have quick access to the resolution. This way, you don&#39;t have to go as far to research if it happens again! Be sure to explain the problem in detail, making sure to include information about the cause of the problem and the fix that was implemented.</p><p>This troubleshooting model is not all-inclusive. You&#39;re going to have to add, remove, or reorganize the various steps to match your particular situation. However, the model does provide a good starting point.</p><p>That&#39;s it for this lesson.</p><p>Summary 04:30-04:43 In this lesson, we talked about troubleshooting. We reviewed the seven steps included in a standard troubleshooting model.</p><h2 id="_12-8-2-troubleshooting-methodology-facts" tabindex="-1"><a class="header-anchor" href="#_12-8-2-troubleshooting-methodology-facts"><span>12.8.2 Troubleshooting Methodology Facts</span></a></h2><p>Good troubleshooting is a process that combines knowledge, experience, and intuition.</p><p>This lesson presents an effective troubleshooting process.</p><h3 id="troubleshooting-process" tabindex="-1"><a class="header-anchor" href="#troubleshooting-process"><span>Troubleshooting Process</span></a></h3><p>The following process has proven effective in a variety of situations:</p><table><thead><tr><th>Step</th><th>Explanation</th></tr></thead><tbody><tr><td>1. Identify the symptoms and potential causes</td><td> When identifying the problem and potential causes, do the following: <ul><li>Ask the user to describe the problem.</li><li>Check for error messages.</li><li>Recreate the problem.</li><li>Identify the affected area.</li><li>Determine how large the problem is.</li></ul><p> For example, fixes for one client workstation would likely be very different from fixes for an entire network segment. </p></td></tr><tr><td>2. Establish what has changed</td><td> Ask questions to discover what might have changed that could have caused the problem. Problems are frequently caused by a change to the system, such as: <ul><li>Adding new hardware</li><li>Installing new software</li><li>Making configuration changes</li></ul></td></tr><tr><td>3. Create a hypothesis</td><td> Create a hypothesis by reviewing the list of potential causes and selecting the most probable cause. Look for common errors or solutions that can be tried quickly. </td></tr><tr><td>4. Create an action plan</td><td> Create an action plan and account for side effects of the proposed plan. The plan might require purchases that need approval before proceeding. In addition, the plan might involve taking services offline for a period of time. Identifying the effects ahead of time helps put measures into place to eliminate or reduce any potential negative consequences. </td></tr><tr><td>5. Implement the fix</td><td> Implement the fix and then make sure that the solution has fully fixed the issue and has not caused any other problems. If necessary, implement additional steps to correct the problem if the first solution did not work. </td></tr><tr><td>6. Ensure user satisfaction</td><td> Ensuring user satisfaction may include educating the user, such as explaining what the problem was, the solution, and how to avoid the problem in the future. </td></tr><tr><td>7. Document the solution</td><td> Document the solution to the problem. If problems occur in the future, check the documentation first to see what has changed or to recall the solution to common problems. </td></tr></tbody></table><p>Remember, troubleshooting is a process of both deduction and induction. Field experience is critical to developing troubleshooting skills.</p><h2 id="_12-8-3-using-network-troubleshooting-tools" tabindex="-1"><a class="header-anchor" href="#_12-8-3-using-network-troubleshooting-tools"><span>12.8.3 Using Network Troubleshooting Tools</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>Use Network Troubleshooting Tools 00:00-00:08 We&#39;re going to introduce you to several tools that you can use to troubleshoot network problems.</p><p>Use ping 00:08-02:25 Let&#39;s look at the ping utility. The ping utility is a very useful troubleshooting tool.</p><p>The ping command works by sending an Internet Control Message Protocol, or ICMP, echo request to the target system. If the target system receives these ICMP packets, it responds by sending an echo reply packet.</p><p>To see how this works, let&#39;s ping a different system by typing ping 172.27.237.183 and then pressing Enter.</p><p>On a Linux system, the ping command will, by default, continue to send these ping commands until you press Ctrl + C.</p><p>The result of each ping request is displayed on a single line.</p><p>The first field specifies the size of the echo response packet that it received from the target system.</p><p>This field displays the IP address of the system responding to the ping. It&#39;s the same IP address we used in our ping command.</p><p>We also have a ttl, or time-to-live, parameter shown here. The ttl parameter specifies the number of routers that the echo response packet is allowed to cross before it&#39;s discarded. Every time that packet crosses a router, this value is decremented by one. In this example, it wasn&#39;t decremented at all because we didn&#39;t cross any routers. This is because the target system is on the same network segment as my computer.</p><p>The main purpose of ttl is to drop unnecessary traffic from the network segment. If you have a packet that has crossed so many routers that the ttl value reaches zero, then the next router that receives it refuses to forward it any further.</p><p>The last field shows us the round-trip time. This tells us how long it took to send the ICMP echo request and receive the ICMP echo response. This parameter can help you identify situations where you might have some latency in the network.</p><p>The source computer will continue to send ping requests until you manually stop it. If you want to send a few pings to see if a system is reachable, you can tell ping to only send a specified number of ping requests. This is done by adding -c, which stands for count, followed by the number of ping packets we want to send. Let&#39;s run the ping command and insert -c4. This time, the ping only ran four times and then automatically ended.</p><p>Ping Using Hostnames 02:25-03:05 It&#39;s a best practice to ping IP addresses when troubleshooting network communication problems. This eliminates the dependency that ping would have on a name resolution service when using a hostname.</p><p>If a name server isn&#39;t available, and you ping using a hostname, it may lead to a false conclusion that there&#39;s a problem in your network infrastructure or the computer itself, when in fact, it could be a misconfigured DNS server address.</p><p>However, you can run the ping command using the hostname. For example, when I run ping -c4 fs2, we see that this hostname was resolved to its associated IP address, and then that IP address is used to complete the ping.</p><p>Use traceroute 03:05-04:12 Next, we&#39;re going to review the traceroute utility. The purpose of traceroute is to identify the network route that packets take to get from one system to another. It&#39;s an excellent troubleshooting tool because it can help identify any routers causing problems along the way.</p><p>The syntax for using traceroute is just to type traceroute, followed by the IP address or DNS name of the host that you want to trace the route to.</p><p>Let&#39;s run traceroute google.com and press Enter. As the command runs, every single router in the path from my system through the internet to google.com is listed. When running this command, you might see a few routes where an asterisk is shown. It doesn&#39;t mean that a router didn&#39;t respond or isn&#39;t functioning properly. Instead, it means that the router at that hop didn&#39;t respond to the type of packet you were using for the traceroute before a timeout occurred.</p><p>The traceroute command used the IPv4 protocol to trace the route from this host to google.com. If your network supports IPv6, you can use traceroute6 and specify the hostname you&#39;re trying to connect to.</p><p>Use mtr 04:12-06:51 Another useful troubleshooting utility is the mtr utility. &#39;mtr&#39; stands for My Traceroute. This utility combines the functionality of the traceroute and ping utilities into a single network diagnostic tool. When run, it not only shows the route to the destination host but also continues to send purposely low time-to-live, or TTL, packets, which allow mtr to collect data on how the different routes are functioning.</p><p>Let&#39;s run mtr google.com. As you can see, you&#39;re shown the same basic route to our target host that we saw when we ran traceroute. To get the best use of this tool, it&#39;s best to let it run for at least 10 to 15 minutes.</p><p>Under the Loss% column, we see the percentage of packets that failed to reach their destination while running the utility. Most routes have a very low percentage of packets that&#39;ve been lost. However, notice that on host 10, there&#39;s a more significant loss of packets. A sudden increase in packet loss or response time like this could be an indication that the host has an overloaded or bad link, or it could be caused by an ISP setting rate limits.</p><p>As long as the host with the spike in lost packets isn&#39;t at the end of the route, you probably don&#39;t need to worry. If the spike comes at the end, then it&#39;s probably an indication that there&#39;s a connection problem.</p><p>Another important area to monitor is the Last column. This column tracks the latency. The lower the latency, the better. Generally speaking, anything under 100 milliseconds is ideal. If it spikes higher than 100 milliseconds, there may be a problem with the connection. Possible causes of high latency are many, but common causes include congestion and misconfigured routers.</p><p>If you find an issue that seems out of your control, you can run mtr using the -rw options. The -r tells mtr to run for a specified number of cycles and then prints the statistics collected and exits. If you need more than the default number of cycles, you can use the -c option to specify the desired number. The -w option tells mtr to use the long version of the hostname so you or a technician can see the full hostname of each hop.</p><p>Let&#39;s run mtr -rw google.com and output the results to a file named myreport. Since the output is going to a file, you&#39;ll not see anything until the report has been created.</p><p>Let&#39;s run cat myreport to view the results. This file could then be sent to a manager or a technician for further analysis.</p><p>Summary 06:51-07:08 In this demonstration, we looked at several useful network tools that can be used to troubleshoot network problems. We first looked at the ping command, then looked at traceroute. And we ended this demonstration by examining the mtr utility.</p><h2 id="_12-8-4-troubleshooting-tool-facts" tabindex="-1"><a class="header-anchor" href="#_12-8-4-troubleshooting-tool-facts"><span>12.8.4 Troubleshooting Tool Facts</span></a></h2><p>When troubleshooting network communications, there are a number of considerations you have to take into account. There are also a number of tools specifically designed to help you troubleshoot your network.</p><p>This lesson covers the following topics:</p><ul><li>Network communication troubleshooting</li><li>Network communications troubleshooting tools</li></ul><h3 id="network-communication-troubleshooting" tabindex="-1"><a class="header-anchor" href="#network-communication-troubleshooting"><span>Network Communication Troubleshooting</span></a></h3><p>When experiencing problems with network communications, consider the following:</p><table><thead><tr><th>Problem</th><th>Considerations</th></tr></thead><tbody><tr><td>Physical issues</td><td> The best way to verify if a connection is valid is to check the link light on both the workstation and the switch. If the link light is unlit, try the following: <ul><li> Swap the cables. This helps determine whether the cable is the problem. </li><li>Try using a different switch port for the connection.</li><li>Make sure that the card is properly seated.</li><li> Use loopback plugs to test network cards and cable testing devices to test network cables. </li></ul></td></tr><tr><td>Interference</td><td> Interference is caused by electromagnetic fields or radio frequency interference. Check the following: <ul><li> For wired cables, make sure wires are not routed next to motors or fluorescent lights that can cause interference. </li><li> For wireless devices, make sure that there are no other devices in the area transmitting on the same frequency and channel (e.g., microwaves or cordless phones). </li><li> Check to make sure that the cable is not kinked or worn. Cables should be routed through walls or ceilings, not strung across the floor. If a cable must run across the floor, encase the cable to prevent wear, and secure the cable in place to prevent tripping accidents. Worn cables might introduce some interference, or simply prevent signals from being sent properly. </li><li> Check for dropped packets or detected collisions, as well as link status. </li></ul></td></tr><tr><td>Network issues</td><td> If the device and its connection appear to be working correctly, check the following: <ul><li> Check firewalls on both end devices to see if communications are being blocked by a host-based firewall. </li><li> Check the service on the target device to make sure that it is running and is properly configured. </li><li>Verify subnet and routing configurations.</li><li> Confirm bandwidth isn&#39;t overwhelmed, causing high latency. </li></ul></td></tr><tr><td>Network performance</td><td> Network performance is comprised of many factors. A significant factor is latency, which is the amount of time it takes data to travel from one point of the network to another. To improve latency, look at: <ul><li> Increasing or improving bandwidth, which is the size of the communication channel. </li><li> Increasing or improving throughput, which is the ability of the system to send and receive data. </li><li> Eliminating saturation of bandwidth or throughput. Saturation indicates that maximum capacity has been achieved. Exceeding that point may result in a bottleneck. </li></ul> Technologies that may improve latency are: <ul><li> Remote direct memory access (RDMA) drivers. They provide high-throughput, low-latency communication that minimizes CPU usage. The drivers quickly transfer the contents of a memory buffer to a buffer on a remote system. RDMA drivers use one of the following communication standards: <ul><li>Infiniband (IB)</li><li>Internet Wide Area RDMA Protocol (iWARP)</li><li>RDMA over Converged Ethernet (RoCE)</li></ul></li><li> Unix sockets instead of localhost. You can improve latency by using a Unix domain socket for exchanging data between processes executing on the same host operating system. Unix socket communication occurs in the operating system kernel. The file system is used as the address namespace, and the two processes can communicate by opening the same socket. </li></ul></td></tr></tbody></table><h3 id="network-communications-troubleshooting-tools" tabindex="-1"><a class="header-anchor" href="#network-communications-troubleshooting-tools"><span>Network Communications Troubleshooting Tools</span></a></h3><p>The following table compares some of the tools for troubleshooting network communication problems:</p>',80),e("table",null,[e("thead",null,[e("tr",null,[e("th",null,"Tool"),e("th",null,"Function")])]),e("tbody",null,[e("tr",null,[e("td",null,[e("b",null,"ping")]),e("td",null,[t(" Verifies connectivity between hosts within the network. "),e("ul",null,[e("li",null,[t(" Ping a host using its IP address. If there is no response, try to ping another host. "),e("ul",null,[e("li",null," If your computer cannot communicate with any other computer, check the network cable, the network interface card, or the IP address configuration on your computer. "),e("li",null," If your computer can communicate with computers on the local network, but can't communicate with remote computers (such as the internet), verify the default gateway configuration on your computer. "),e("li",null," If all computers on the local network cannot communicate with any remote computer, troubleshoot the router's connection to the remote network. ")])]),e("li",null," Ping a host using its DNS name. If a ping by IP address works, but a ping by DNS name fails, there is probably a name resolution problem. "),e("li",null,[t(" Use the "),e("b",null,"-c"),t(" option to specify how many ICMP echo requests to send to the destination. ")])]),e("div",null,[e("div",null,[e("div",null,[e("div",{class:"to-icon large","aria-hidden":"true",style:{width:"20px"}},[e("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"fal","data-icon":"circle-info",class:"svg-inline--fa fa-circle-info",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"},[e("path",{fill:"currentColor",d:"M256 32a224 224 0 1 1 0 448 224 224 0 1 1 0-448zm0 480A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM208 352c-8.8 0-16 7.2-16 16s7.2 16 16 16l96 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0-112c0-8.8-7.2-16-16-16l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l24 0 0 96-32 0zm48-168a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"})])]),e("div",{class:"to-info-box-body-content"},[e("span",null,[t(" IPv6 communications can be tested using ping, but the "),e("b",null,"ping6"),t(" command must be used.")])])])])])])]),e("tr",null,[e("td",null,[e("b",null,"netstat")]),e("td",null,[t(" Displays a list of network connections (e.g., sockets), the routing table, and information about the network interface. A socket is an endpoint of a bidirectional communication flow across a computer network. Use the following options for additional information: "),e("ul",null,[e("li",null,[e("b",null,"-a"),t(" lists both listening and non-listening ports.")]),e("li",null,[e("b",null,"-i"),t(" displays a table of all network interfaces.")]),e("li",null,[e("b",null,"-l"),t(" lists listening sockets.")]),e("li",null,[e("b",null,"-s"),t(" displays statistics for each protocol.")]),e("li",null,[e("b",null,"-r"),t(" displays the routing table, which includes the IP address of the default gateway. ")])]),e("div",null,[e("div",null,[e("div",null,[e("div",{class:"to-icon large","aria-hidden":"true",style:{width:"20px"}},[e("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"fal","data-icon":"circle-info",class:"svg-inline--fa fa-circle-info",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"},[e("path",{fill:"currentColor",d:"M256 32a224 224 0 1 1 0 448 224 224 0 1 1 0-448zm0 480A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM208 352c-8.8 0-16 7.2-16 16s7.2 16 16 16l96 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0-112c0-8.8-7.2-16-16-16l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l24 0 0 96-32 0zm48-168a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"})])]),e("div",{class:"to-info-box-body-content"},[e("span",null,[t(" The "),e("b",null,"netstat"),t(" command is being replaced by "),e("b",null,"ss"),t(" , "),e("b",null,"ip route"),t(" (for "),e("b",null,"netstat -r"),t(" ), "),e("b",null,"ip -s link"),t(" (for "),e("b",null,"netstat -i"),t(" ), and "),e("b",null,"ip maddr"),t(" (for "),e("b",null,"netstat -g"),t(" )")])])])])])])]),e("tr",null,[e("td",null,[e("b",null,[t("nc "),e("br"),t("ncat")])]),e("td",null,[t(" Tests communications between network hosts. The netcat ( "),e("b",null,"nc"),t(" or "),e("b",null,"ncat"),t(" ) command establishes a TCP or UDP connection between two computers. The procedure for using "),e("b",null,"nc"),t(" is to: "),e("ul",null,[e("li",null,[t(" Open a listening TCP or UDP socket on one host. The syntax is "),e("b",null,[t("nc -l "),e("i",{class:"fs-italicize"},"port_number")]),t(" . The "),e("b",null,"-l"),t(" option tells netcat to wait and listen for incoming connections. If no protocol is specified, TCP is used by default. To use UDP instead of TCP, include the "),e("b",null,"-u"),t(" option in the command. ")]),e("li",null,[t(" Connect to the listening socket on the first host from another host. The syntax is "),e("b",null,[t("nc "),e("i",{class:"fs-italicize"},"ip_address"),e("i",{class:"fs-italicize"},"port_number")]),t(" . ")])]),e("p",null," After the connection is established, text entered at the prompt of the second computer should appear on the screen of the first computer. "),e("div",null,[e("div",null,[e("div",null,[e("div",{class:"to-icon large","aria-hidden":"true",style:{width:"20px"}},[e("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"fal","data-icon":"circle-info",class:"svg-inline--fa fa-circle-info",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"},[e("path",{fill:"currentColor",d:"M256 32a224 224 0 1 1 0 448 224 224 0 1 1 0-448zm0 480A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM208 352c-8.8 0-16 7.2-16 16s7.2 16 16 16l96 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0-112c0-8.8-7.2-16-16-16l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l24 0 0 96-32 0zm48-168a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"})])]),e("div",{class:"to-info-box-body-content"},[e("span",null," You must open the appropriate ports in the host firewalls of both systems.")])])])])])]),e("tr",null,[e("td",null,[e("b",null,[t("traceroute "),e("br"),t("tracepath")])]),e("td",null,[t(" Tests connectivity between devices and shows the path between them. The "),e("b",null,"traceroute"),t(" command: "),e("ul",null,[e("li",null," Can help track down which router (known as a hop) in the route is not working correctly. "),e("li",null,[t(" Displays the round trip time (RTT) for each hop. The RTT is the time difference between when the probe was sent from "),e("b",null,"traceroute"),t(" and the time the response arrived for each packet. ")])]),e("h2",null,"tracepath"),e("div",null,[e("div",null,[e("div",null,[e("div",{class:"to-icon large","aria-hidden":"true",style:{width:"20px"}},[e("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"fal","data-icon":"circle-info",class:"svg-inline--fa fa-circle-info",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"},[e("path",{fill:"currentColor",d:"M256 32a224 224 0 1 1 0 448 224 224 0 1 1 0-448zm0 480A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM208 352c-8.8 0-16 7.2-16 16s7.2 16 16 16l96 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0-112c0-8.8-7.2-16-16-16l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l24 0 0 96-32 0zm48-168a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"})])]),e("div",{class:"to-info-box-body-content"},[e("span",null,[t(" To test IPv6 routing, use the "),e("b",null,"traceroute6"),t(" or "),e("b",null,"tracepath6"),t(" commands instead of "),e("b",null,"traceroute"),t(" .")])])])])])])]),e("tr",null,[e("td",null,[e("b",null,"nslookup")]),e("td",null,[t(" Sends a name resolution request. To use "),e("b",null,"nslookup"),t(": "),e("ol",null,[e("li",null,[t("Enter "),e("b",null,"nslookup"),t(" at the shell prompt.")]),e("li",null,"Enter the hostname or IP address (such as 192.168.1.1)."),e("li",null,"The DNS server should respond with the requested mapping."),e("li",null,[t("Enter "),e("b",null,"exit"),t(" when finished.")])]),e("div",null,[e("div",null,[e("div",null,[e("div",{class:"to-icon large","aria-hidden":"true",style:{width:"20px"}},[e("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"fal","data-icon":"circle-info",class:"svg-inline--fa fa-circle-info",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"},[e("path",{fill:"currentColor",d:"M256 32a224 224 0 1 1 0 448 224 224 0 1 1 0-448zm0 480A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM208 352c-8.8 0-16 7.2-16 16s7.2 16 16 16l96 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0-112c0-8.8-7.2-16-16-16l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l24 0 0 96-32 0zm48-168a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"})])]),e("div",{class:"to-info-box-body-content"},[e("span",null,[t(" The "),e("b",null,"nslookup"),t(" command is being replaced by the "),e("b",null,"host"),t(" and "),e("b",null,"dig"),t(" commands.")])])])])])])]),e("tr",null,[e("td",null,[e("b",null,"dig")]),e("td",null,[t(" Sends a name resolution request and receives extensive information about the hostname or IP address. Consider the following options: "),e("ul",null,[e("li",null,[e("b",null,"a"),t(" resolves a record information.")]),e("li",null,[e("b",null,"ptr"),t(" resolves a PTR record.")]),e("li",null,[e("b",null,"cname"),t(" resolves CNAME record information.")]),e("li",null,[e("b",null,"p"),t(" queries a specific port on the host.")]),e("li",null,[e("b",null,"in"),t(" resolves internet record information.")]),e("li",null,[e("b",null,"mx"),t(" resolves MX record information.")]),e("li",null,[e("b",null,"soa"),t(" resolves start of authority information.")])])])]),e("tr",null,[e("td",null,[e("b",null,"ss")]),e("td",null,[t(" Dumps socket statistics and provides detailed information about communication with other hosts, networks, services, network connections, networking protocol statistics, and Linux socket connections. Consider the following options: "),e("ul",null,[e("li",null,[e("b",null,"-a"),t(" displays all sockets.")]),e("li",null,[e("b",null,"-t"),t(" displays only TCP sockets.")]),e("li",null,[e("b",null,"-u"),t(" displays only UDP sockets.")]),e("li",null,[e("b",null,"-l"),t(" displays listening sockets.")]),e("li",null,[e("b",null,"-m"),t(" shows socket memory usage.")]),e("li",null,[e("b",null,"-p"),t(" shows process using socket.")]),e("li",null,[e("b",null,[t("ss > "),e("i",{class:"fs-italicize"},"ss_output")]),t(" sends the output to a file. ")])])])]),e("tr",null,[e("td",null,[e("b",null,"nmcli")]),e("td",null,[t(" Controls NetworkManager and get its status from the command line. Use "),e("b",null,"nmcli"),t(" as a complementary utility to "),e("b",null,"nm-applet"),t(" or other similar clients. Its main usage is on servers, headless machines, or for power users. Consider the following options: "),e("ul",null,[e("li",null,[e("b",null,"-t"),t(" displays terse output. The output is suitable for scripts. ")]),e("li",null,[e("b",null,"-p"),t(" displays pretty output that is easily readable by humans. ")]),e("li",null,[e("b",null,"-m"),t(" specifies mode (tabular or multiline).")]),e("li",null,[e("b",null,"-f"),t(" specifies column names.")])])])]),e("tr",null,[e("td",null,[e("b",null,"nmtui")]),e("td",null,[t(" Provides a text-base interface for controlling NetworkManager. Consider the following options: "),e("ul",null,[e("li",null,[e("b",null,"-edit"),t(" displays a connection editor that supports adding, modifying, viewing, and deleting connections. ")]),e("li",null,[e("b",null,"-connect"),t(" displays a list of available connections with options to activate or deactivate them. ")]),e("li",null,[e("b",null,"-hostname"),t(" sets the system hostname.")])])])]),e("tr",null,[e("td",null,[e("b",null,"iftop")]),e("td",null,[t(" Listens to network traffic on a named interface. If no interface is named, it listens on the first interface that looks like an external interface. Be aware that "),e("b",null,"iftop"),t(": "),e("ul",null,[e("li",null," Displays a table of current bandwidth usage by pairs of hosts. "),e("li",null," Must be run with sufficient permissions to monitor all network traffic on the interface. "),e("li",null,[t(" Looks up the hostnames associated with addresses it finds in packets. This can cause substantial traffic. You can suppress the display of DNS traffic by using filter codes or switch it off with the "),e("b",null,"-n"),t(" option. ")]),e("li",null,[t(" Includes some of the following options: "),e("ul",null,[e("li",null,[t(" - "),e("b",null,"r"),t(" suppresses display of DNS traffic when the program is running. ")]),e("li",null,[e("b",null,"-h"),t(" prints a summary of usage.")]),e("li",null,[e("b",null,"-N"),t(" suppresses resolving port number to service names. ")]),e("li",null,[e("b",null,"-p"),t(" runs in promiscuous mode. It counts traffic that does not pass directly through the specified interface. ")]),e("li",null,[e("b",null,"-f"),t(" allows you to specify filters.")])])])])])]),e("tr",null,[e("td",null,[e("b",null,"iperf")]),e("td",null,[t(" Performs network throughput measurements. To perform an "),e("b",null,"iperf"),t(" test, the user must establish both a server (to discard traffic) and a client (to generate traffic). With "),e("b",null,"iperf"),t(": "),e("ul",null,[e("li",null,[e("b",null,"-f"),t(" specifies report format: [kmKM] Kbits, Mbits, KBytes, MBytes. ")]),e("li",null,[e("b",null,"-i"),t(" pauses "),e("i",{class:"fs-italicize"},"n"),t(" seconds between periodic bandwidth reports. ")]),e("li",null,[e("b",null,"-l"),t(" sets length read/write buffer (default 8 KB).")]),e("li",null,[e("b",null,"-o"),t(" specifies output filename for the report or error message. ")]),e("li",null,[e("b",null,"-p"),t(" sets server port to listen on/connect to (default 5001). ")]),e("li",null,[e("b",null,"-u"),t(" uses UDP rather than TCP.")])])])]),e("tr",null,[e("td",null,[e("b",null,"tcpdump")]),e("td",null,[t(" Dumps traffic on a network. Options include: "),e("ul",null,[e("li",null,[e("b",null,"-A"),t(" prints each packet without the link level header in ASCII. ")]),e("li",null,[e("b",null,"-B"),t(" sets the operating system capture buffer size.")]),e("li",null,[e("b",null,"-c"),t(" exits after receiving count packets.")]),e("li",null,[e("b",null,"-d"),t(" dumps the compiled packet-matching code in a human readable form to standard output and stops. ")]),e("li",null,[e("b",null,"-dd"),t(" dumps packet-matching code as a C program fragment. ")]),e("li",null,[e("b",null,"-D"),t(" prints the list of the network interfaces available on which "),e("b",null,"tcpdump"),t(" can capture packets. ")])])])]),e("tr",null,[e("td",null,[e("b",null,"ipset")]),e("td",null,[t(" Sets up, maintains, and inspects IP sets in the Linux kernel. Consider the following options: "),e("ul",null,[e("li",null,[e("b",null,"-n"),t(" creates a set identified with setname and specified type. ")]),e("li",null,[e("b",null,"add"),t(" adds a given entry to the set.")]),e("li",null,[e("b",null,"del"),t(" deletes the specified entry from a set.")]),e("li",null,[e("b",null,"test"),t(" tests whether an entry is set or not.")]),e("li",null,[e("b",null,"-x"),t(" destroys specified set or all sets if no set is specified. ")]),e("li",null,[e("b",null,"-t"),t(" lists the set names and header; suppresses listing set members.. ")])])])]),e("tr",null,[e("td",null,[e("b",null,"mtr")]),e("td",null,[t(" Combines the functionality of the "),e("b",null,"traceroute"),t(" and "),e("b",null,"ping"),t(" commands in a single network diagnostic tool. Consider the following options: "),e("ul",null,[e("li",null,[e("b",null,"-r"),t(" puts "),e("b",null,"mtr"),t(" into report mode, causing it to run for the number of cycles specified by the "),e("b",null,"-c"),t(" option, print statistics, and exit. ")]),e("li",null,[e("b",null,"-t"),t(" forces "),e("b",null,"mtr"),t(" to use the curses based terminal interface if it is available. ")]),e("li",null,[e("b",null,"-n"),t(" forces "),e("b",null,"mtr"),t(" to display numeric IP numbers and not try to resolve the host names. ")]),e("li",null,[e("b",null,"-u"),t(" uses UDP datagrams instead of ICMP ECHO.")]),e("li",null,[e("b",null,"-4"),t(" uses IPv4 only.")]),e("li",null,[e("b",null,"-6"),t(" uses IPv6 only.")])])])]),e("tr",null,[e("td",null,[e("b",null,"arp")]),e("td",null,[t(" Displays and modifies the internet-to-Ethernet address translation tables used by the Address Resolution Protocol, or ARP. Consider the following options: "),e("ul",null,[e("li",null,[e("b",null,"-a"),t(" displays all of the current ARP entries.")]),e("li",null,[e("b",null,"-d"),t(" deletes the entry for the specified hostname. When combined with "),e("b",null,"-a"),t(" , this option deletes all entries and automatically disables hostname lookups. ")]),e("li",null,[e("b",null,"-f"),t(" processes entries in the specified file to be set in the ARP tables. ")]),e("li",null,[e("b",null,"-F"),t(" overwrites entries for a given host when used with "),e("b",null,"-f"),t(" . ")]),e("li",null,[e("b",null,"-s"),t(" creates an ARP entry for the specified host and Ethernet address. This option is used with the "),e("b",null,"-f"),t(" option. ")])]),e("div",null,[e("div",null,[e("div",null,[e("div",{class:"to-icon large","aria-hidden":"true",style:{width:"20px"}},[e("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"fal","data-icon":"circle-info",class:"svg-inline--fa fa-circle-info",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"},[e("path",{fill:"currentColor",d:"M256 32a224 224 0 1 1 0 448 224 224 0 1 1 0-448zm0 480A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM208 352c-8.8 0-16 7.2-16 16s7.2 16 16 16l96 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0-112c0-8.8-7.2-16-16-16l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l24 0 0 96-32 0zm48-168a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"})])]),e("div",{class:"to-info-box-body-content"},[e("span",null,[t(" The "),e("b",null,"arp"),t(" command is being replaced by "),e("b",null,"ip n"),t(".")])])])])])])]),e("tr",null,[e("td",null,[e("b",null,"whois")]),e("td",null,[t(" Looks up records in the databases maintained by several network information centers (NICs) Consider the following options: "),e("ul",null,[e("li",null,[e("b",null,"-a"),t(" uses the American Registry for Internet Numbers (ARIN) database. ")]),e("li",null,[e("b",null,"-d"),t(" uses the US Department of Defense database.")]),e("li",null,[e("b",null,"-g"),t(" uses the US non-military federal government database, which contains points of contact for subdomains of .GOV. ")]),e("li",null,[e("b",null,"-h"),t(" uses the specified host instead of the default NIC. Either a hostname or an IP address may be specified. ")])])])]),e("tr",null,[e("td",null,[t("Wireshark "),e("br"),e("strong",null,"tshark")]),e("td",null,[t(" Tracks, intercepts, and logs network traffic. It can also generate a customized report from captured data. Use a CLI version of the Wireshark packet analyzer. Consider the following options: "),e("ul",null,[e("li",null,[e("b",null,"-i"),t(" specifies the name or index number of the interface, a file to read from, and a file to output to. ")]),e("li",null,[e("b",null,"-s"),t(" specifies the packet snapshot length.")]),e("li",null,[e("b",null,"-y"),t(" specifies the link type.")]),e("li",null,[e("b",null,"-c"),t(" stops capture after a specified number of packets. ")]),e("li",null,[e("b",null,"-2"),t(" performs two-pass analysis.")])])])])])],-1)]))}const c=n(a,[["render",r],["__file","08.html.vue"]]),d=JSON.parse('{"path":"/12/08.html","title":"Section 12.8 Network Troubleshooting","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Section 12.8 Network Troubleshooting","description":"some description"},"headers":[{"level":2,"title":"12.8.1 Troubleshooting Methodology","slug":"_12-8-1-troubleshooting-methodology","link":"#_12-8-1-troubleshooting-methodology","children":[]},{"level":2,"title":"12.8.2 Troubleshooting Methodology Facts","slug":"_12-8-2-troubleshooting-methodology-facts","link":"#_12-8-2-troubleshooting-methodology-facts","children":[{"level":3,"title":"Troubleshooting Process","slug":"troubleshooting-process","link":"#troubleshooting-process","children":[]}]},{"level":2,"title":"12.8.3 Using Network Troubleshooting Tools","slug":"_12-8-3-using-network-troubleshooting-tools","link":"#_12-8-3-using-network-troubleshooting-tools","children":[]},{"level":2,"title":"12.8.4 Troubleshooting Tool Facts","slug":"_12-8-4-troubleshooting-tool-facts","link":"#_12-8-4-troubleshooting-tool-facts","children":[{"level":3,"title":"Network Communication Troubleshooting","slug":"network-communication-troubleshooting","link":"#network-communication-troubleshooting","children":[]},{"level":3,"title":"Network Communications Troubleshooting Tools","slug":"network-communications-troubleshooting-tools","link":"#network-communications-troubleshooting-tools","children":[]}]}],"git":{"updatedTime":1736828265000},"filePathRelative":"12/08.md"}');export{c as comp,d as data};
