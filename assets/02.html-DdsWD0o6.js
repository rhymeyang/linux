import{_ as o,c as s,a as i,b as e,d as t,o as a}from"./app-DQZVun5U.js";const r={};function l(u,n){return a(),s("div",null,n[0]||(n[0]=[i('<p>As you study this section, answer the following questions:</p><ul><li>What is the path to the GRUB2 configuration file?</li><li>How do you change the default operating system when using GRUB2?</li><li>Which setting displays the available operating systems during system boot up?</li><li>What is the syntax used to identify operating systems in the GRUB2 menu?</li></ul><p>In this section, you will learn to:</p><ul><li>Use GRUB2</li><li>Set the GRUB timeout</li><li>Configure dual boot</li></ul><p>Key terms for this section include the following:</p><table class="terms"><thead><tr><th>Term</th><th>Definition</th></tr></thead><tbody><tr><td> Grand Unified Boot Loader <br> (GRUB) </td><td> A legacy utility that boots a Linux kernel or any other operating system. </td></tr><tr><td> Grand Unified Boot Loader 2 <br> (GRUB 2) </td><td> The updated version of the Grand Unified Bootloader (GRUB) utility. It is any version of GRUB 1.98 or later. </td></tr></tbody></table><p>This section helps you prepare for the following certification exam objectives:</p><table class="objectives"><thead><tr><th>Exam</th><th>Objective</th></tr></thead><tbody><tr><td>TestOut Linux Pro</td><td> 1.3 Manage system startup and shutdown <ul><li>Manage bootloader configurations</li></ul><p>1.4 Manage system processes</p><ul><li>Manage kernel modules</li></ul></td></tr><tr><td>CompTIA Linux+ XK0-005</td><td> 1.1 Summarize Linux fundamentals <br><ul><li>Basic boot process</li><ul><li>Basic input/output system (BIOS)</li><li> Commands <ul><li>grub2-install</li><li>grub2-mkconfig</li><li>grub2-update</li></ul></li><li>Grand Unified Bootloader</li></ul></ul></td></tr></tbody></table><h2 id="_4-2-1-grub2-bootloader" tabindex="-1"><a class="header-anchor" href="#_4-2-1-grub2-bootloader"><span>4.2.1 GRUB2 Bootloader</span></a></h2><h3 id="what-is-grub-00-00-00-29" tabindex="-1"><a class="header-anchor" href="#what-is-grub-00-00-00-29"><span>What is GRUB? 00:00-00:29</span></a></h3><p>In this video, we&#39;re going to discuss the Linux boot process. For most Linux systems, the first program that runs when the system is booted is the Grand Unified Bootloader or GRUB. GRUB is responsible for choosing which operating system and kernel to load when the system boots. GRUB can also be set up to provide a menu so the user can select between multiple operating systems. GRUB is installed during the installation of the Linux Operating System. The modern version of GRUB is GRUB2.</p><h3 id="how-grub-works-00-29-01-26" tabindex="-1"><a class="header-anchor" href="#how-grub-works-00-29-01-26"><span>How GRUB Works 00:29-01:26</span></a></h3><p>The GRUB bootloader is divided into two separate pieces. We call these pieces stages. We have Stage 1 and Stage 2.</p><p>Stage 1 of the GRUB bootloader is usually stored in the boot device&#39;s Master Boot Record for BIOS-based devices. Newer UEFI devices will store the GRUB bootloader in the /boot/efi partition stored at the beginning of the disk. Stage 1 has a very limited role in the boot process. Its only job is to point to Stage 2&#39;s location.</p><p>When Stage 1 loads it, Stage 2 presents the user with a graphical menu so they can select which kernel image to load or even which operating system to load because GRUB can load Linux or Windows.</p><p>One of the nice features of a GRUB menu is that you can configure it to boot from a default kernel image after a default timeout value has expired. This means that if the user doesn&#39;t manually select an operating system (or kernel image), the system will automatically load the default kernel image.</p><h3 id="grub2-configuration-files-01-26-02-20" tabindex="-1"><a class="header-anchor" href="#grub2-configuration-files-01-26-02-20"><span>GRUB2 Configuration Files 01:26-02:20</span></a></h3><p>GRUB2 places its configuration files in three locations. First is /boot/grub/grub.cfg. Second is /etc/grub.d. And third is /etc/default/grub.</p><p>The grub.cfg configuration file in /boot/grub is built using scripts and the update-grub command.</p><p>/etc/grub.d contains GRUB scripts used to build the grub.cfg configuration file.</p><p>/etc/default/grub is a file that contains the GRUB menu settings. This file is also read by GRUB scripts and written into the grub.cfg command.</p><p>Here we see an example of the grub.cfg file. As you can see, it&#39;s a shell script. This script is built when we run the grub2-mkconfig command or the update-grub command.</p><h3 id="etc-grub-d-script-files-02-20-03-38" tabindex="-1"><a class="header-anchor" href="#etc-grub-d-script-files-02-20-03-38"><span>/etc/grub.d Script Files 02:20-03:38</span></a></h3><p>Our /etc/grub.d directory contains the scripts that GRUB2 uses to build the boot menu when starting a system. These files begin with a number. Lower-numbered scripts are executed first, and higher number scripts are executed last.</p><p>Let&#39;s review the different script files and their purpose.</p><p>00_header is a script used to load the GRUB settings from /etc/default/grub file. We&#39;ll review this in a moment.</p><p>05_debian_theme defines the background, colors, and themes for Debian-based distributions. It&#39;s not usually present in other distributions.</p><p>10_linux is used to load kernel menu entries for the system. If you have multiple Linux kernels installed on your system, this script will search for them and list them as options to boot your system into.</p><p>20_memtest86+ loads the memtest utility. If your system is having issues while running, this test can help identify if the RAM sticks are operating correctly or failing.</p><p>30_os-prober is a script that scans the hard disk for other operating systems. It will add them to the boot menu once they are found.</p><p>40_custom is a template that can be used to create additional entries. This takes special knowledge and shouldn&#39;t be done on live production systems.</p><h3 id="grub-file-03-38-03-51" tabindex="-1"><a class="header-anchor" href="#grub-file-03-38-03-51"><span>grub File 03:38-03:51</span></a></h3><p>Our /etc/default/grub file is parsed by the 00_header script in our /etc/grub.d directory. This is where we can make simple changes to the GRUB menu such as default selection and timeout.</p><h3 id="updating-grub2-03-51-04-11" tabindex="-1"><a class="header-anchor" href="#updating-grub2-03-51-04-11"><span>Updating GRUB2 03:51-04:11</span></a></h3><p>You must run a command to update the GRUB loader anytime changes are made. The command may be update-grub, update-grub2, grub-mkconfig, or grub2-mkconfig. All four are basically the same command. Both update-grub commands and the grub2-mkconfig are aliases of grub-mkconfig.</p><h3 id="altering-grub2-04-11-05-09" tabindex="-1"><a class="header-anchor" href="#altering-grub2-04-11-05-09"><span>Altering GRUB2 04:11-05:09</span></a></h3><p>In some situations, we may want to dual-boot our machines with Windows and Linux. Or some software packages may not be compatible with newer kernels that are released and need to use older kernels. Either way, these two options would require edits to GRUB2.</p><p>Our /etc/default/grub file contains simple customizations, such as using an older kernel for booting the system. We&#39;d edit this file to default to the older kernel so we could use our software.</p><p>If we&#39;re looking to dual boot the system with Windows and Linux, we&#39;d need to add a script /etc/grub.d/ directory. The scripts in this directory are used for GRUB menu information and operating system boot scripts. This is a more advanced task and shouldn&#39;t be taken on lightly.</p><p>Lastly, once our edits are made, we need to update the grub.cfg shell script. This script is autogenerated by running the grub2-mkconfig command. The grub.cfg script is run at boot time to load the GRUB menu, load kernels, and operating systems.</p><h3 id="summary-05-09-05-24" tabindex="-1"><a class="header-anchor" href="#summary-05-09-05-24"><span>Summary 05:09-05:24</span></a></h3><p>In this lesson, we learned about the GRUB2 boot process on Linux systems, looked at the different configuration files and directories used for GRUB, and reviewed the process for updating and altering GRUB2.</p><h2 id="_4-2-2-use-grub2" tabindex="-1"><a class="header-anchor" href="#_4-2-2-use-grub2"><span>4.2.2 Use GRUB2</span></a></h2><h3 id="introduction-to-grub-00-00-00-29" tabindex="-1"><a class="header-anchor" href="#introduction-to-grub-00-00-00-29"><span>Introduction to GRUB 00:00-00:29</span></a></h3><p>On a typical Linux system, the very first program that runs when the system is booted is the Grand Unified Bootloader or GRUB for short. GRUB is responsible for choosing which operating system and kernel to load when the system boots, and GRUB can be set up to provide a menu so the user can select between multiple operating systems. The modern version of GRUB is GRUB2.</p><p>In this demonstration we will look at how to configure GRUB and what configuration options can be used.</p><h3 id="simple-grub-configuration-00-29-03-17" tabindex="-1"><a class="header-anchor" href="#simple-grub-configuration-00-29-03-17"><span>Simple GRUB Configuration 00:29-03:17</span></a></h3><p>If we reboot this system, we are brought to the GRUB menu. This is also shown when the system is powered on. The default option, and the current selection, is to boot Ubuntu normally. If other operating systems were installed on this machine, they would be shown here. The other options we see are for advanced troubleshooting. For example, alternative Ubuntu kernels and recovery modes, and a utility for testing RAM are options.</p><p>Having selected Ubuntu and allowing it to boot, we can now look at the simple GRUB configuration file, with sudo nano /etc/default/grub.</p><p>The syntax of this file is similar to a Bash script. Configuration options can be chosen by assigning variables, like for example GRUB_DEFAULT=0. And, like a Bash script, any line beginning with # is not interpreted.</p><p>The first variable is GRUB_DEFAULT. This controls which entry in the GRUB menu is selected by default. This can be a number, where 0 refers to the first entry, 1 is the next entry after that, and so on. It can also be the title of the entry or an id code specified in that entry&#39;s configuration. And, if GRUB_DEFAULT is set to saved, and we also add GRUB_SAVEDEFAULT=true, then GRUB will remember which entry the user selects and use that by default on the next boot.</p><p>Another variable we see is GRUB_TIMEOUT. Currently, it is set to -1, which means that the timeout mechanism is disabled, and GRUB will wait indefinitely for the user to select a menu option before booting. If we set this to 0, no menu would be displayed at all, and the default menu option would be booted immediately. And if we set it to a positive number (for example 5) then GRUB displays the menu and waits that number of seconds. If the user does not make any input before the time runs out, then GRUB proceeds to boot the default menu option automatically.</p><p>We can also use GRUB_TIMEOUT_STYLE to tweak the behavior of the timeout mechanism. If GRUB_TIMEOUT_STYLE is set to countdown, for example, then instead of displaying the menu, GRUB shows only the countdown timer. If the user presses F4, then the menu is shown, and they can select an option. Otherwise, the time runs out, and the default option is booted automatically. If we set GRUB_TIMEOUT_STYLE to hidden, then the screen is blank during the countdown. For this demo, we&#39;ll set it to countdown.</p><p>Other variables can control advanced options such as passing custom parameters to the kernel or disabling certain menu options. It&#39;s also possible to use the basic GRUB configuration to add custom graphics and visual theming to the GRUB menu. As noted here, a full list of configuration options can be accessed using the info command.</p><h3 id="using-update-grub-03-17-04-19" tabindex="-1"><a class="header-anchor" href="#using-update-grub-03-17-04-19"><span>Using update-grub 03:17-04:19</span></a></h3><p>At this point, we&#39;ve made some small tweaks to our simple GRUB configuration file, so now let&#39;s save our changes and exit nano. In order for the new configuration to take effect, we need to run sudo update-grub. This command takes the options we specified and combines them with other configuration files provided by the system into the actual configuration file used by GRUB. update-grub is, itself, a convenience script that calls another command with the appropriate arguments. update-grub is not standard to all Linux distributions, so it may be necessary to run the underlying command sudo grub-mkconfig -o /boot/grub/grub.cfg. As you can see, it produces the same output.</p><p>Now, the simple configuration has been applied to GRUB, and we can see the new behavior by rebooting the system. Here, we see the new GRUB_TIMEOUT_STYLE in action, which we can interrupt with F4 to get the GRUB menu as before.</p><h3 id="summary-04-19-04-32" tabindex="-1"><a class="header-anchor" href="#summary-04-19-04-32"><span>Summary 04:19-04:32</span></a></h3><p>That&#39;s it for this demonstration. This demo covered using the GRUB bootloader on Linux and customizing its behavior with the simple GRUB configuration file.</p><h2 id="_4-2-3-grub2-bootloader-facts" tabindex="-1"><a class="header-anchor" href="#_4-2-3-grub2-bootloader-facts"><span>4.2.3 GRUB2 Bootloader Facts</span></a></h2><p>GRUB2, the updated version of the Grand Unified Bootloader (GRUB) utility, is any version of GRUB 1.98 or later.</p><p>This lesson covers the following topics:</p><ul><li>Determining GRUB versions</li><li>Configuring GRUB2</li><li>GRUB menu display</li><li>Boot Security</li></ul><h3 id="determining-grub-versions" tabindex="-1"><a class="header-anchor" href="#determining-grub-versions"><span>Determining GRUB Versions</span></a></h3><p>The following commands can be used to view the version of GRUB used by the Linux distribution you have installed. The actual command used will vary between distributions:</p><ul><li><b>grub-install -V</b> or <b>grub-install --version</b></li><li><b>grub2-install -V</b> or <b>grub2-install --version</b></li></ul><blockquote><p>Earlier versions of GRUB are sometimes called GRUB Legacy.</p></blockquote><h3 id="configuring-grub2" tabindex="-1"><a class="header-anchor" href="#configuring-grub2"><span>Configuring GRUB2</span></a></h3><p>Be aware of the following details about GRUB2 configurations:</p><ul><li>The configuration files for GRUB2 are /boot/grub/grub.cfg or /boot/grub2/grub.cfg (depending upon the distribution). These files are similar to the GRUB Legacy&#39;s /boot/grub/menu.lst or /boot/grub/grub.conf files.</li><li>Depending on the distribution, the <b>update-grub</b> or <b>grub2-mkconfig</b> commands generate the /boot/grub2/grub.cfg or /boot/grub/grub.cfg files. Specifically, these commands use the /etc/default/grub file and the scripts in the /etc/grub.d/ directory to generate the /boot/grub2/grub.cfg or /boot/grub/grub.cfg configuration files.</li><li>Some distributions, such as Fedora and Centos, create an /etc/grub2/grub.cfg file. This file is a symbolic link to the /boot/grub2/grub.cfg file. Other distributions, such as Ubuntu and Debian, typically store the file as /boot/grub/grub.cfg.</li><li>The /etc/grub.d/ directory holds script files that are read when the <b>update-grub</b> or the <b>grub2-mkconfig</b> commands are used.</li></ul>',70),e("div",null,[e("div",{class:"to-icon large","aria-hidden":"true",style:{width:"20px"}},[e("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"fal","data-icon":"circle-info",class:"svg-inline--fa fa-circle-info",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"},[e("path",{fill:"currentColor",d:"M256 32a224 224 0 1 1 0 448 224 224 0 1 1 0-448zm0 480A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM208 352c-8.8 0-16 7.2-16 16s7.2 16 16 16l96 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0-112c0-8.8-7.2-16-16-16l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l24 0 0 96-32 0zm48-168a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"})])]),e("div",null,[e("span",null,[t("The "),e("b",null,"grub.cfg"),t(" file should not be edited directly. Instead, the appropriate configuration file below should be edited when a change needs to be made. Then run either the "),e("b",null,"update-grub"),t(" or "),e("b",null,"grub2-mkconfig"),t(" command.")])])],-1),i('<h3 id="grub-menu-display" tabindex="-1"><a class="header-anchor" href="#grub-menu-display"><span>GRUB Menu Display</span></a></h3><p>Common script files in the /etc/grub.d/ directory that control the GRUB2 menu include the following:</p><table><thead><tr><th>Script File</th><th>Description</th></tr></thead><tbody><tr><td>00_header</td><td> Sets initial appearance items, such as the graphics mode, default selection, timeout, etc. These settings are typically imported from the /etc/default/grub file. </td></tr><tr><td>10_linux</td><td> Identifies all Linux kernels installed on the root device and creates corresponding GRUB2 menu entries for each one. This allows you to select which Linux kernel you want to load when you initially boot the system. </td></tr><tr><td>30_os-prober</td><td> Executes <b>os-prober</b> to search for other operating systems (such as Microsoft Windows) and automatically creates GRUB2 menu items for them. </td></tr><tr><td>40_custom</td><td> Allows for custom menu entries, which are imported directly into /boot/grub/grub.cfg without any changes. </td></tr></tbody></table><h3 id="etc-default-grub" tabindex="-1"><a class="header-anchor" href="#etc-default-grub"><span><code>/etc/default/grub</code></span></a></h3>',4),e("table",null,[e("thead",null,[e("tr",null,[e("th",null,"Option"),e("th",null,"Description"),e("th",null,"Examples")])]),e("tbody",null,[e("tr",null,[e("td",null,[e("b",null,"GRUB_DEFAULT")]),e("td",null,[t(" Sets the default menu entry. Typical entries include: "),e("ul",null,[e("li",null,"Numeric (such as 0, 1, 2)"),e("li",null,' Complete menu entry quotation (such as "Ubuntu, Linux 20.4.2") ')])]),e("td",null,[e("b",null,"GRUB_DEFAULT=0"),t(" sets the first menu entry as the default. "),e("br"),e("br"),e("b",null,'GRUB_DEFAULT="Ubuntu, Linux 20.4.2"'),t(" sets this menu entry as the default. ")])]),e("tr",null,[e("td",null,[e("b",null,"GRUB_SAVEDEFAULT")]),e("td",null,[t(" Sets the last selected OS from the menu as the default OS on the next boot. "),e("b",null,"GRUB_DEFAULT=saved"),t(" is also required for this option to work correctly. ")]),e("td",null,[e("b",null,"GRUB_SAVEDEFAULT=true"),t(" sets the last selected OS from the menu as the default OS on the next boot. ")])]),e("tr",null,[e("td",null,[e("b",null,"GRUB_HIDDEN_TIMEOUT")]),e("td",null,[t(" Determines how long a blank screen will be displayed. While the screen is blank, the user can press the Shift key to display the GRUB2 menu. Options include, "),e("b",null,"0"),t(" , "),e("i",null,[e("b",null,"X")]),t(" , and (null): "),e("ul",null,[e("li",null,[e("b",null,"0"),t(" disables this functionality.")]),e("li",null,[e("b",null,[e("i",null,"X")]),t(" (an integer value) pauses and shows a blank screen for "),e("i",null,"X"),t(" seconds. ")]),e("li",null," (null) uses the value specified in the GRUB_TIMEOUT entry. ")])]),e("td",null,[e("b",null,"GRUB_HIDDEN_TIMEOUT=0"),t(" disables this functionality. "),e("br"),e("br"),e("b",null,"GRUB_HIDDEN_TIMEOUT=3"),t(" displays a blank screen for 3 seconds and then boots to the default OS if there is no user interaction. ")])]),e("tr",null,[e("td",null,[e("b",null,"GRUB_HIDDEN_TIMEOUT_QUIET")]),e("td",null,[t(" Works in conjunction with the GRUB_HIDDEN_TIMEOUT parameter. It displays a counter (countdown) while the screen is blank. Options include "),e("b",null,"true"),t(" and "),e("b",null,"false"),t(" : "),e("ul",null,[e("li",null,[e("b",null,"true"),t(" does not display a counter.")]),e("li",null,[e("b",null,"false"),t(" displays the counter for the duration specified in the GRUB_HIDDEN_TIMEOUT entry. ")])])]),e("td",null,[e("b",null,"GRUB_HIDDEN_TIMEOUT_QUIET=true"),t(" does not display a counter. ")])]),e("tr",null,[e("td",null,[e("b",null,"GRUB_TIMEOUT")]),e("td",null,[t(" Determines how long to wait for user interaction before booting the default operating system. Options include "),e("i",null,[e("b",null,"X")]),t(" and - "),e("b",null,"1"),t(" : "),e("ul",null,[e("li",null,[e("b",null,[e("i",null,"X")]),t(" (an integer value of 1 or higher) sets the display duration in seconds. ")]),e("li",null,[e("b",null,"-1"),t(" causes the menu to display until the user makes a selection. ")])]),e("div",null,[e("div",null,[e("div",null,[e("div",{class:"to-icon large","aria-hidden":"true",style:{width:"20px"}},[e("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"fal","data-icon":"circle-info",class:"svg-inline--fa fa-circle-info",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"},[e("path",{fill:"currentColor",d:"M256 32a224 224 0 1 1 0 448 224 224 0 1 1 0-448zm0 480A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM208 352c-8.8 0-16 7.2-16 16s7.2 16 16 16l96 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0-112c0-8.8-7.2-16-16-16l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l24 0 0 96-32 0zm48-168a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"})])]),e("div",null,[e("span",null," The GRUB2 menu is hidden by default unless another OS is detected by the system.")])])])])]),e("td",null,[e("b",null,"GRUB_TIMEOUT=4"),t(" causes the menu to display for four seconds and then boots into the default operating system. "),e("br"),e("br"),e("b",null,"GRUB_TIMEOUT=-1"),t(" causes the menu to display until the user makes a selection. ")])]),e("tr",null,[e("td",null,[e("b",null,"GRUB_CMDLINE_LINUX")]),e("td",null," Passes options to the kernel. With the GRUB Legacy bootloader, this was done by adding options to the end of the kernel line. In GRUB2, this is done using the GRUB_CMDLINE_LINUX parameter. "),e("td",null,[e("br")])]),e("tr",null,[e("td",null,[e("b",null,"GRUB_GFXMODE")]),e("td",null," Sets the resolution of the graphical GRUB2 menu. Multiple resolutions may be specified if they are separated by commas. "),e("td",null,[e("b",null,"GRUB_GFXMODE=1440x900x24"),t(" sets the screen resolution to 1440 x 900 with a color depth of 24 bits. ")])]),e("tr",null,[e("td",null,[e("b",null,"GRUB_BACKGROUND")]),e("td",null," Sets the background image during the GRUB2 menu display. The full path should be used. It must be in the PNG, TGA, or JPG/JPEG file formats. "),e("td",null,[e("b",null,"GRUB_BACKGROUND=/usr/share/images/back.png"),t(" displays back.png as the background image. ")])]),e("tr",null,[e("td",null,[e("b",null,"GRUB_DISABLE_OS_PROBER")]),e("td",null,[t(" Enables and disables the os-prober check of other partitions for operating systems, including Windows and Linux, during the execution of the "),e("b",null,"update-grub"),t(" command. If the os-prober is enabled, operating systems are placed in the GRUB2 menu. ")]),e("td",null,[e("b",null,"GRUB_DISABLE_OS_PROBER=true"),t(" disables the os-prober. "),e("br"),e("br"),e("b",null,"GRUB_DISABLE_OS_PROBER=false"),t(" enables the os-prober and adds found operating systems to the GRUB2 menu. ")])])])],-1),i('<h3 id="boot-security" tabindex="-1"><a class="header-anchor" href="#boot-security"><span>Boot Security</span></a></h3><p>With all computer systems, maintaining security of your data should be of utmost concern. Most operating systems provide login security, but this just prevents people from logging into your operating system. To further protect your Linux computers, you should consider including UEFI/BIOS and bootloader passwords.</p><table><thead><tr><th>Security type</th><th>Description</th></tr></thead><tbody><tr><td>Bootloader password</td><td>These passwords prevent a person from accessing the bootloader menu without knowing the password. Bootloader passwords can be implemented on one or all of the available boot menu options. For example, this can prevent a user from loading a Linux kernel.</td></tr><tr><td>UEFI/BIOS</td><td>These passwords allow you to set low-level passwords to restrict people from booting the computer, booting from removable devices, and changing BIOS or UEFI settings without knowing the password.</td></tr></tbody></table>',3)]))}const h=o(r,[["render",l],["__file","02.html.vue"]]),c=JSON.parse('{"path":"/04/02.html","title":"Section 4.2 Bootloaders","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Section 4.2 Bootloaders","description":"some description"},"headers":[{"level":2,"title":"4.2.1 GRUB2 Bootloader","slug":"_4-2-1-grub2-bootloader","link":"#_4-2-1-grub2-bootloader","children":[{"level":3,"title":"What is GRUB? 00:00-00:29","slug":"what-is-grub-00-00-00-29","link":"#what-is-grub-00-00-00-29","children":[]},{"level":3,"title":"How GRUB Works 00:29-01:26","slug":"how-grub-works-00-29-01-26","link":"#how-grub-works-00-29-01-26","children":[]},{"level":3,"title":"GRUB2 Configuration Files 01:26-02:20","slug":"grub2-configuration-files-01-26-02-20","link":"#grub2-configuration-files-01-26-02-20","children":[]},{"level":3,"title":"/etc/grub.d Script Files 02:20-03:38","slug":"etc-grub-d-script-files-02-20-03-38","link":"#etc-grub-d-script-files-02-20-03-38","children":[]},{"level":3,"title":"grub File 03:38-03:51","slug":"grub-file-03-38-03-51","link":"#grub-file-03-38-03-51","children":[]},{"level":3,"title":"Updating GRUB2 03:51-04:11","slug":"updating-grub2-03-51-04-11","link":"#updating-grub2-03-51-04-11","children":[]},{"level":3,"title":"Altering GRUB2 04:11-05:09","slug":"altering-grub2-04-11-05-09","link":"#altering-grub2-04-11-05-09","children":[]},{"level":3,"title":"Summary 05:09-05:24","slug":"summary-05-09-05-24","link":"#summary-05-09-05-24","children":[]}]},{"level":2,"title":"4.2.2 Use GRUB2","slug":"_4-2-2-use-grub2","link":"#_4-2-2-use-grub2","children":[{"level":3,"title":"Introduction to GRUB 00:00-00:29","slug":"introduction-to-grub-00-00-00-29","link":"#introduction-to-grub-00-00-00-29","children":[]},{"level":3,"title":"Simple GRUB Configuration 00:29-03:17","slug":"simple-grub-configuration-00-29-03-17","link":"#simple-grub-configuration-00-29-03-17","children":[]},{"level":3,"title":"Using update-grub 03:17-04:19","slug":"using-update-grub-03-17-04-19","link":"#using-update-grub-03-17-04-19","children":[]},{"level":3,"title":"Summary 04:19-04:32","slug":"summary-04-19-04-32","link":"#summary-04-19-04-32","children":[]}]},{"level":2,"title":"4.2.3 GRUB2 Bootloader Facts","slug":"_4-2-3-grub2-bootloader-facts","link":"#_4-2-3-grub2-bootloader-facts","children":[{"level":3,"title":"Determining GRUB Versions","slug":"determining-grub-versions","link":"#determining-grub-versions","children":[]},{"level":3,"title":"Configuring GRUB2","slug":"configuring-grub2","link":"#configuring-grub2","children":[]},{"level":3,"title":"GRUB Menu Display","slug":"grub-menu-display","link":"#grub-menu-display","children":[]},{"level":3,"title":"/etc/default/grub","slug":"etc-default-grub","link":"#etc-default-grub","children":[]},{"level":3,"title":"Boot Security","slug":"boot-security","link":"#boot-security","children":[]}]}],"git":{"updatedTime":1736486703000},"filePathRelative":"04/02.md"}');export{h as comp,c as data};
