import{_ as t,c as o,a as i,o as n}from"./app-CCsZbG-M.js";const s={};function h(r,e){return n(),o("div",null,e[0]||(e[0]=[i('<p>As you study this section, answer the following questions:</p><ul><li>Which user accounts can change file ownership?</li><li>Which utility will display ownership information for files and directories?</li><li>What are the two different methods you can use to change group ownership of a file?</li></ul><p>In this section, you will learn to:</p><ul><li>View ownership information</li><li>Change file ownership</li><li>Change group ownership for a file</li><li>Change directory ownership</li></ul><p>Key terms for this section include the following:</p><table class="terms"><thead><tr><th>Term</th><th>Definition</th></tr></thead><tbody><tr><td>Ownership</td><td> Every file is owned by a specific user (or UID) and a specific group (or GID). </td></tr></tbody></table><p>This section helps you prepare for the following certification exam objectives:</p><table class="objectives"><thead><tr><th>Exam</th><th>Objective</th></tr></thead><tbody><tr><td>TestOut Linux Pro</td><td> 2.2 Manage the file system <ul><li> View information about directories and files in the file system </li></ul><p>4.2 Manage user and group access</p><ul><li> Manage directory and file ownership for users and groups </li></ul></td></tr><tr><td>CompTIA Linux+ XK0-005</td><td> 1.2 Given a scenario, manage files and directories <br><ul><li>File and directory operations</li><li style="list-style:none;display:inline;"><ul><li>ls</li></ul></li></ul> 2.5 Given a scenario, apply the appropriate access controls <br><ul><li>Command-line utilities</li><li style="list-style:none;display:inline;"><ul><li>chown</li><li>ls</li><li>chgrp</li></ul></li></ul></td></tr></tbody></table><h2 id="_8-9-1-ownership" tabindex="-1"><a class="header-anchor" href="#_8-9-1-ownership"><span>8.9.1 Ownership</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>Ownership 00:00-00:17 In this lesson, we&#39;re going to discuss file and directory ownership within the Linux file system. Ownership determines who can control the files and directories. Let&#39;s begin with looking at how ownership works.</p><p>How Ownership Works 00:17-01:35 By default, the user that creates a new file or directory is assigned to be its owner. This ownership automatically gives the user read, write, and execute permissions for the file or directory.</p><p>For example, suppose a user logs into his Linux system, opens the LibreOffice word processing application, and creates a file named schedule.odt in the home directory.</p><p>It shows here that the owner of this file is rtracy. This is because the rtracy user account created this file and was assigned ownership by default.</p><p>For this screen, we right-clicked on this file in the graphical user interface of the Fedora system, and then we selected Properties. Then, we selected the Permissions tab, and now we can see who the file&#39;s owner is.</p><p>Notice there are two owners listed here. The first is the name of the user who owns the file, rtracy in this case. The second is a group that owns the file, and by default, it&#39;s the primary group to which the file owner belongs. In this example, it&#39;s the rtracy group because that&#39;s the primary group the rtracy user belongs to. So, the file owner&#39;s the rtracy user, and the file&#39;s group owner is the rtracy group.</p><p>Ownership List 01:35-02:17 You can also view file and directory ownership from the command line using the ls -l command. In this example, the command was run in the user&#39;s home directory. Notice that the third column in the output displays the name of the file or directory&#39;s owner. Here, they&#39;re all owned by rtracy. The fourth column displays the name of the group that owns the file. All are owned by the rtracy group, except for this runme file.</p><p>Even though ownership is automatically assigned, the ownership can be modified to change the user, group, or both. To change ownership, you must be logged in as root or as the user who owns the file.</p><p>The chown Command 02:17-04:16 You can make this change with two different utilities. The first is the chown utility which stands for change owner. It can be used to change the user or the group for a file or directory. The syntax is shown here. Enter chown followed by the name or the user of the group you want to change ownership to, followed by the file or directory whose ownership you want to change.</p><p>For example, we&#39;ve got a file named resources.txt that&#39;s in the /tmp directory with the root user as owner. To change this from root to the rtracy user, enter chown and the name of the user you want to have ownership and the file name. Here we entered an ls -l command to see that rtracy is now the user that owns the resources.txt file. But notice that the name of the group that owns the file wasn&#39;t changed. The group named root.</p><p>To change the group that owns the file, which is the root user&#39;s primary group, to the rtracy primary group, enter chown, then .rtracy, then the name of the file you want to modify. The leading dot is important because it tells the chown command that the entity that follows is the group name. When we run the command, we can see the owning group is now changed to rtracy.</p><p>You can do both tasks with one command by specifying the name of the user first and then the period with the group name that you want to change membership to, and then the name of the file. That&#39;ll do it all at once.</p><p>You can also use the -R option with the chown command. So far, we&#39;ve just modified a single file at a time. But, if you want to modify several, maybe even some subdirectories, the -R can save time by changing ownership recursively. It applies ownership changes through all the subdirectories on the path you specify.</p><p>The chgrp Command 04:16-04:32 The other ownership management command option is the chgrp command. It&#39;s used only to change the name of the group that owns the file or directory, and its syntax is simple. You enter chgrp, the name of the group you want to change ownership to, then the name of the file.</p><p>Summary 04:32-04:56 Well, that&#39;s it for this lesson. In this lesson, we discussed file and directory ownership. First, we discussed how ownership works. Then we discussed how to change the owning user and the owning group using chown. We ended this lesson talking about how to use chgrp to change just the owning group.</p><h2 id="_8-9-2-managing-ownership" tabindex="-1"><a class="header-anchor" href="#_8-9-2-managing-ownership"><span>8.9.2 Managing Ownership</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>Manage Ownership 00:00-00:25 In this demonstration, we&#39;re going to talk about managing ownership of files and directories in a Linux file system. By default, whenever a user creates a new file or folder, that user automatically becomes its owner. In addition, the default group that&#39;s been assigned to that user automatically becomes the owning group of that file or folder. Let&#39;s see how this works in more detail.</p><p>Default File and Group Ownership 00:25-01:30 As we start, notice that I&#39;m currently logged in as the user named zoey, and I&#39;m in her home directory. Now let&#39;s create a new file by typing touch newfile and then pressing Enter. This command creates an empty file in the file system.</p><p>To see this new file, I&#39;ll run the ls -l command, and here you can see that the file was created and is currently 0 bytes in size. As you look at this output, it&#39;s important to understand how to tell who owns the file and which groups will have access to it.</p><p>This is determined by looking at these two fields. The first field is the name of the user who owns the file. In this case, it&#39;s the user named zoey. The second field specifies the name of the group that owns the file, which in this example is also zoey.</p><p>The fact that the default group is the same as the user is sometimes a point of confusion for many new Linux administrators. The reason for this is that on most distributions of Linux, when you create a new user account, it automatically creates a group with the same name as the user and assigns that group to be that user&#39;s primary group.</p><p>Change the File Owner 01:30-03:20 Even though the default user and group ownership are assigned when the file is created, both can be changed as needed. However, to do that, there are a few caveats that you should be aware of.</p><p>First, only the root user can change which user owns a particular file or directory in the file system. No one else can make that change. Second, if you want to change the owning group, it can be changed by either the root user or, if you&#39;re logged in as the owning user, you can change it as well.</p><p>Let&#39;s go ahead and change the ownership of newfile here. To do this, I first need to switch to my root user account, so I&#39;ll type su and then enter the password for the root account.</p><p>Before changing the ownership, I first want to copy this file from zoey&#39;s home directory to the home directory of jsmith. To do that, I type cp newfile /home/jsmith new file space slash home slash J smith] and press Enter.</p><p>Now let&#39;s switch to that directory. And then when I run the ls -l command, we see the file that was copied. However, notice that since I copied the file as the root user, the file and group owners are both root. If I were to leave it this way, the jsmith user would have very limited access to this file even though it exists in his home directory.</p><p>To fix that, let&#39;s change ownership of this copy of the file to the jsmith user so that they can access it in their home directory. To do this, I run chown, or the change owner command, followed by the name of the user that I want to give ownership to, which is jsmith. Then I need to specify the name of the file that I&#39;m modifying. In this case, it&#39;s newfile.</p><p>Now when I run the ls -l command again, we see that the user jsmith is now the owner of our file. We also see that the group that owns the file wasn&#39;t changed.</p><p>Change the Owning Group 03:20-04:35 Since root is still the owning group for this file, I also want to change that, too. This can be done using the chown command as well.</p><p>To do that, you enter chown and then a period followed by the name of the group that we want to change the ownership for. In this case, the period tells the command that you&#39;re working with the group instead of the user. Then you need to specify the file being changed.</p><p>By running ls -l again, we see that jsmith is now the user who owns this file, and the jsmith group also owns that file. Just for demonstration purposes, I&#39;m going to change the group ownership back to the root user. With that done, I can now show you a second command you can use to change the group ownership of a file.</p><p>It&#39;s called chgrp, which stands for change group, and its syntax is the same as chown. To use this command, I type chgrp and then the name of the group that I want to change ownership to. Now I just need the name of the file, newfile.</p><p>Notice here that when using the chgrp command, you don&#39;t have to put the period before the group name. That&#39;s because chgrp can only change group ownership. Therefore, there&#39;s no need to differentiate it from a user account. And as you can see, jsmith is once again the owing group for this file.</p><p>Change User and Group Simultaneously 04:35-05:03 Next, I want to show you how you can use the chown command to change both user and group ownership of a file at the same time. To do this, we follow the same basic syntax by typing chown, followed by the user, and then a period, followed by the group. Then we end the command with the name of the file that we&#39;re modifying.</p><p>Now when we do another listing of our files, we see that zoey is again the owner of the file, and the group zoey is the owning group.</p><p>Directory Ownership 05:03-05:23 I also want to point out that everything we did for a file can also be done for a directory. For example, to change the ownership of our directory named Pictures, we use the same syntax we used earlier: chown zoey Pictures. And again, after listing the contents of this directory, we see that the ownership of the Pictures directory is now set to zoey.</p><p>Summary 05:23-05:38 Okay, great! In this demonstration, we talked about how to manage ownership. We first talked about how to change the person who owns a file, and then we talked about how to change the owning group.</p><h2 id="_8-9-3-file-ownership-facts" tabindex="-1"><a class="header-anchor" href="#_8-9-3-file-ownership-facts"><span>8.9.3 File Ownership Facts</span></a></h2><p>This lesson covers how to change file and directory ownership.</p><h3 id="change-file-and-directory-ownership" tabindex="-1"><a class="header-anchor" href="#change-file-and-directory-ownership"><span>Change File and Directory Ownership</span></a></h3><p>By default, when a user creates a file or directory, the user and the user&#39;s primary group receive ownership for that file or directory. To change the user that owns a file, you must be logged in as root. To change the group that owns a file, you must be logged in as root or as the user who currently owns the file.</p><p>The table below lists the most common commands for managing file ownership:</p><table><thead><tr><th>Command</th><th>Function</th><th>Example</th></tr></thead><tbody><tr><td><b>ls -l</b></td><td> View a long listing of files and directories. The long listing shows the mode of each file and directory along with ownership information. <p>The output listed is (from left to right):</p><ul><li>Permissions</li><li>Number of links</li><li>Owner name</li><li>Group name</li><li>Number of bytes in the file</li><li>Last modified time</li><li>File name</li></ul></td><td><span><b>drwxr-xr-x 22 root sales 4096 Jun 19 15:01 sales</b></span><br><br> In this example, root is the file owner and sales is the group owner. </td></tr><tr><td><b>chown</b></td><td> Change the ownership of a file or directory. Be aware of the following options: <ul><li><b>-R</b> changes the ownership of the file recursively throughout the directory tree. </li><li><b><i> user</i></b> changes the file ownership only. </li><li><b><i>user</i> :<i>group</i></b> or <b><i>user</i> .<i>group</i></b> change the user and group ownership of the file. </li><li><b>: <i>group</i></b> or <b class="c4 fw-bold"> .group</b> changes the group ownership only. </li></ul></td><td><b>chown pmorril /sales/report</b> makes pmorril the user owner of the /sales/report file. <br><b>chown -R pmorril /sales</b> makes pmorril the owner of all files in the /sales directory (and below). <br><b>chown pmaxwell:sales /sales/report</b> makes pmaxwell the user owner and sales the group owner of the file. <br><b>chown :sales -R /sales</b> makes the sales group the owner of all files in the /sales directory. </td></tr><tr><td><b>chgrp</b></td><td>Change the group owner of a file or directory.</td><td><b>chgrp sales /sales/report</b> makes the sales group the group owner of the file. </td></tr></tbody></table>',54)]))}const l=t(s,[["render",h],["__file","09.html.vue"]]),c=JSON.parse('{"path":"/08/09.html","title":"Section 8.9 Ownership","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Section 8.9 Ownership","description":"some description"},"headers":[{"level":2,"title":"8.9.1 Ownership","slug":"_8-9-1-ownership","link":"#_8-9-1-ownership","children":[]},{"level":2,"title":"8.9.2 Managing Ownership","slug":"_8-9-2-managing-ownership","link":"#_8-9-2-managing-ownership","children":[]},{"level":2,"title":"8.9.3 File Ownership Facts","slug":"_8-9-3-file-ownership-facts","link":"#_8-9-3-file-ownership-facts","children":[{"level":3,"title":"Change File and Directory Ownership","slug":"change-file-and-directory-ownership","link":"#change-file-and-directory-ownership","children":[]}]}],"git":{"updatedTime":1736669805000},"filePathRelative":"08/09.md"}');export{l as comp,c as data};
