import{_ as t,c as o,a as s,o as a}from"./app-DD5NhL2N.js";const i={};function r(n,e){return a(),o("div",null,e[0]||(e[0]=[s('<p>As you study this section, answer the following questions:</p><ul><li>What are common storage-related issues?</li><li>Which tools should you use to troubleshoot storage issues?</li></ul><p>In this section, you will learn to:</p><ul><li>Troubleshoot storage problems</li></ul><p>The key terms for this section include:</p><table class="terms"><thead><tr><th>Term</th><th>Definition</th></tr></thead><tbody><tr><td>IOPS</td><td> Input/output operations per second. This is a performance metric that&#39;s useful in troubleshooting storage issues. </td></tr><tr><td>inode</td><td> The index node that references file storage locations. One inode is needed for each file on certain Linux file systems. </td></tr></tbody></table><p>This section helps you prepare for the following certification exam objectives:</p><table class="objectives"><thead><tr><th>Exam</th><th>Objective</th></tr></thead><tbody><tr><td>TestOut Linux Pro</td><td> 2.1 Manage storage devices <ul><li>Mount and unmount devices in the file system</li></ul></td></tr><tr><td>CompTIA Linux+ XK0-005</td><td> 1.3 Given a scenario, configure and manage storage using the appropriate tools <ul><li> Storage hardware <ul><li>lsblk</li></ul></li><li> Mount local and remote devices <ul><li>/etc/fstab</li></ul></li><li> Monitor storage space and disk usage <ul><li>df</li></ul></li></ul><p> 4.1 Given a scenario, analyze and troubleshoot storage issues </p><ul><li> High latency <ul><li>Input/output (l/O) wait</li></ul></li><li>Low throughput</li><li> Input/output operations per second scenarios <ul><li>IOPS</li></ul></li><li> Capacity issues <ul><li>Low disk space</li><li>inode exhaustion</li></ul></li><li> File system issues <ul><li>Corruption</li><li>Mismatch</li></ul></li><li>I/O scheduler</li><li> Device issues <ul><li>Non-volatile memory express (NVMe)</li><li>Solid-state drive (SSD)</li><li>SSD trim</li><li>RAID</li><li>l/O errors</li></ul></li><li>Mount option issues</li></ul></td></tr></tbody></table><h2 id="_8-15-1-common-storage-issues" tabindex="-1"><a class="header-anchor" href="#_8-15-1-common-storage-issues"><span>8.15.1 Common Storage Issues</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>Common Storage Issues 00:00-01:02 Computer systems are always on the move, with faster components and less moving parts. Storage is one of the most important components, providing both running software to control your system and to provide a user interface. Storage is available in many forms as well: physical disks, which could be magnetic, optical, and solid-state and there&#39;s also virtual cloud storage. In this lesson, we&#39;ll look at some of the common storage issues users and system administrators face on their personal and network systems.</p><p>There are several issues to go over. The first is high latency. There is a common issue where users wait for resources. Low throughput also causes delays since the system seems to work harder to access data. When a system runs low on storage capacity, it may slow down or cause system failure and data corruption. File systems all have limits. When these limits are reached, the whole system is in danger of being damaged. Local hardware and mounting are also issues to look at.</p><p>High Latency 01:02-02:11 But let&#39;s get back to latency. Latency is the decrease in communications bandwidth and can be a temporary or permanent cause of slowness. This all depends on the services and the source of the delay.</p><p>Suppose that you&#39;re driving on a road. You can go full speed down the road with no delay—so with very low latency. As more cars are on the road, traffic might slow or even stop—that&#39;s high latency. There&#39;s nowhere for you to go, so you&#39;re stuck and have to work through the delay. There are many causes for this delay including, I/O wait.</p><p>Remember, the CPU runs at several billions of cycles per second. It handles many different things, including storage input and output. Magnetic storage is very slow and is measured in milliseconds, or thousandths of a second. Solid-state is often measured in millionths of a second. So, while they&#39;re pretty fast themselves, they&#39;re not as fast as the CPU. The CPU may have to wait for storage I/O. This causes a slowdown since the CPU has to wait for the storage processes to complete before moving on to other things.</p><p>Low Throughput 02:11-02:39 A system&#39;s performance is often measured in throughput. When a system isn&#39;t performing well, the cause could be low throughput. Latency and throughput have a cause and effect relationship. When a system is performing well, there&#39;s normally low latency, which provides a high level of throughput. When a system&#39;s latency increases, its throughput often slows. Again, it&#39;s like traffic on a highway. When there&#39;s minimal traffic on the road, you&#39;ll reach your destination quicker than when there&#39;s a lot of traffic.</p><p>Input/Output Operations 02:39-03:31 Another measure of system performance is input/output operations per second, or IOPS. IOPS measures throughput and has a similar relationship to latency. It also measures storage. The high the IOPS value, the better the performance. When IOPS falls low, system latency can cause delays measured in seconds or tens of seconds.</p><p>It&#39;s not unusual for IOPS to change frequently. When a system is idle, IOPS is high since there&#39;s nothing that can get in the way of performance. When the system is calculating a complex spreadsheet or rendering a 3D object, though, performance may suffer. One example is when comparing storage formats. Hard disk drives or magnetic drives have a fairly low IOPS rating of about 100 or so. Solid-state devices have a much high IOPS rating that varies from a few thousand to tens of thousands.</p><p>Capacity Issues 03:31-05:34 Okay, let&#39;s move on to capacity issues. Choosing the right storage for your device may not be as simple as choosing the largest capacity device you can afford. Also, the type of storage makes a difference. The first consideration is how much space you need. If you simply use your system for email and web browsing, you really don&#39;t require a lot of storage. If you&#39;re a power user and have a number of programs to work with, you probably require a bit more. Another factor is whether you utilize cloud storage. The type of data matters, too. If you store word processing documents, small spreadsheets, and a few graphic files, you probably don&#39;t require very much storage capacity. If you&#39;re a photographer and store high-resolution digital images, you&#39;ll probably need something with a much higher storage capacity. Lastly, are you storing high-performance data or archival data? This can make the difference between a more expensive solid-state device or a high-capacity magnetic hard drive. Often, users store a mix of both, so two or more drives are used for storage sometimes: an SSD for programs and high-performance data and an HDD for archival data.</p><p>When systems run low on disk space, they can experience performance issues since the available space on the storage device is often fragmented. This increases latency since the device has to &quot;find&quot; open space for new storage. Furthermore, if the exhausted device is storing the operating system, file corruption could occur. Another issue is the availability of inodes. Remember, an inode stores metadata about the file. When a storage device is formatted, the number of inodes is defined and fixed. This works fine for most systems. However, if your system is used to store many small files, you may need to increase the number of available inodes. Should your system run out of inodes, you won&#39;t be able to store any more data on your device, even if space is available. Then you&#39;d have to reformat the volume and lose all of its data to increase the inode count.</p><p>File System Issues 05:34-09:29 Let&#39;s get into the file system itself. Linux systems can comprise several different file systems. Unlike other operating systems that primarily support a single one, Linux comes with support for different filesystems that are designed for different purposes. For instance, one file system might be great at supporting a large number of small files with high I/O, like an email server. Another may be designed to handle very large, multi-gigabyte files like movies and high-resolution graphics. Whichever you use, there are potential issues that range from minor inconveniences to complete failure.</p><p>The most common issue is file corruption. Most, if not all, Linux systems do support some type of file system recovery program. The fsck program is a Linux utility for checking consistency. It&#39;s similar in function to Windows chkdsk. There are also third-party utilities that will attempt to fix a damaged file system.</p><p>In addition to corruption, you could experience a file system mismatch. This relates to volume size. The size reported and the actual size may be different. One major cause is the difference between a kilobyte and a kibibyte. A kilobyte is 1000 bytes and is usually represented by a lowercase k followed by an uppercase B. A kibibyte is generally represented by an uppercase KB or an uppercase K followed by a lowercase i and an uppercase B.</p><p>So, the file system mismatch may simply be an error in how the size is displayed. This can happen after you resize a partition. You can use a program like Parted to shrink or grow a partition. You may need to run fsck after the resize is complete. Also, you could have sparse files in your file system. A sparse file contains empty space to make room for future data. These are generally in the form of data blocks that are reserved but not allocated. This can also show less space than is actually available. Use the dd utility to commit the reserved blocks on sparse files. In this example here, dd uses the same input and output file to disable trunking and to set a block size of 1 megabyte.</p><p>We already know that Linux is a modular operating system. What we mean by that is we only utilize the parts we need. But it has another meaning as well. We can replace needed parts with those that are better suited for specific needs. One of these parts is the I/O scheduler. The I/O scheduler attempts to improve system throughput by reordering requests into groups that provide the most efficient use of resources. While the scheduler tries to improve performance, it can cause latency issues. It does its best to balance between high throughput and fair access to I/O resources.</p><p>There are many available I/O schedulers, and different Linux distributions use different schedulers by default. First, there are non-multiqueue schedulers. Here are some examples: Deadline fixes starvation issues seen in other schedulers. cfq, or Completely Fair Queuing, uses sorted queues and fewer of them for asynchronous I/O requests. noop is best for random access devices such as flash storage and is also good for advanced storage controllers.</p><p>Multiqueue schedulers make more efficient use of processes that support multi-threaded operations. Budget Fair Queuing, or bfq, is a complex scheduler that has high overhead and isn&#39;t recommended for slower CPUs. kyber is a straightforward schedular with few moving parts, making it ideal for high-priority loads. None is one that doesn&#39;t reorder requests. It&#39;s first come, first served—ideal for NVME. Choosing the correct I/O scheduler for your system can be a hit or miss process. To determine the best one for your machine, you may have to do some load tests to get a baseline first.</p><p>Device Issues 09:29-11:48 Next, we have some major device issues to go over. Storage devices come in many sizes and formats. Each has their own sets of pros and cons. Some are better suited for high throughput, and others are better at long-term storage. As technology continues to evolve, the topics presented here will, in all likelihood, change. What will always remain the same is your need to store data somewhere and on some storage device, whether that be on a local system or half-way around the world.</p><p>Let&#39;s start with solid-state drives. These are magnetic replacements with a much faster I/O. They&#39;re typically sized a bit smaller than a magnetic hard disk, but use the same SATA connectors. Next are non-volatile memory express modules that are the newer augmentation of SSDs. NVMe modules are small, single-board devices that connect in to a specialized slot on the motherboard. They come in many size configurations and may have different slot formats.</p><p>Linux also provides additional formats and tunings for these storage devices. SSD trim helps the SSD device purge blocks of data that are no longer in use and can be erased. This was necessary on early SSDs, but has been virtually eliminated in modern devices that utilize garbage collection. Combining drives to provide a larger storage area while adding protection is called RAID, or Redundant Array of Inexpensive Disks. Suppose that you have three 4-terabyte disks. Combining them together would give you a total of 12 terabytes. RAID is comprised of different levels. One of those levels is RAID 5, or striping with parity. This level provides not only higher throughput, but will continue to function even if a single drive fails. RAID and other configurations can be managed using the Linux volume manager or enabled on the disk or RAID controller.</p><p>The truth is that when working with storage devices, you always run the risk of failure. Components on the disk may fail or get hot—or a myriad of other anomalies. It&#39;s important to back up your data often to avoid potential data loss. Data can become corrupt or inaccessible. It may even become unrecoverable. Make sure to keep your devices updated with embedded software patches and ensure that the computer case is well ventilated.</p><p>Mount Option Issues 11:48-12:57 Now, let&#39;s talk about mounting. Whether you&#39;re using a local or foreign file system on Linux, it has to be mounted. Doing this is straightforward: define the system to be mounted, select a mount point on the local Linux system, and mount it. But here&#39;s some guidelines to troubleshoot any issues that might pop up along the way. First, you must have the file system defined in Linux. If you don&#39;t have NFS or CIFS loaded, you may get an unknown file system message. If you&#39;re mounting a foreign file system from another Linux machine or NAT, make sure that you have the foreign access credentials. You also need to have the foreign system&#39;s IP address or URL. Before mounting, make sure the destination directory exists on the local system, or you may get an error stating that the mount point doesn&#39;t exist.</p><p>Assuming everything is in place, there are several mount options to further customize the mounted volume. The volume can be mounted using the RO, or read-only option. This will prevent write operations and prevent adding, modifying, or deleting data from the volume. You may want to remount a volume after making configuration changes so the new changes will take effect.</p><p>Summary 12:57-13:21 That&#39;s all there is for this lesson, where you learned about common storage issues. You learned about storage I/O, latency, and throughput. You saw how running out of space can cause data corruption or catastrophic failure. You also learned about file systems and device issues. Lastly, you saw how to handle some of the more common mounting problems.</p><h2 id="_8-15-2-troubleshoot-storage-problems" tabindex="-1"><a class="header-anchor" href="#_8-15-2-troubleshoot-storage-problems"><span>8.15.2 Troubleshoot Storage Problems</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>Troubleshoot Storage Problems 00:00-00:25 As with other operating systems, Linux can experience performance issues or failures with storage devices. Many of the same ideas from Windows or MacOS apply to Linux as well, from throughput problems to capacity limitations, or hardware failures. In this demonstration we&#39;ll look at some of the tools available to diagnose storage-related issues on Linux.</p><p>Using lsblk 00:25-00:59 Let&#39;s start by listing available storage devices on Linux. These are referred to as the type of devices the Linux kernel &quot;sees&quot; when they are connected, block devices. Using the lsblk tool, I can see what block devices are currently connected to this system. As you can see, I have two block devices, vda and vdb, in addition to the loop back virtual devices. We&#39;ll ignore the loop devices. If I were troubleshooting storage issues on this system, I might first use lsblk to identify if the correct number of storage devices is connected and &quot;seen&quot; by the operating system.</p><p>The fstab File 00:59-01:39 In addition to seeing which devices are visible to the operating system, I might also want to see which devices are mounted by the system at boot time by looking in the /etc/fstab file. This system has several devices, one of which is used for booting and the boot loader configuration, found here with /boot/efi as its mount point. There are two other lines with UUID at the beginning that are mounted at /, the root directory, and /mnt/extra. These two are listed as using the ext4 file system. Let&#39;s now compare that information with the output of the mount command. I&#39;ll use grep to limit the output to the information we&#39;re looking for. The system currently has the devices mounted where we expect them.</p><p>The df Command and inodes 01:39-02:43 We can check the storage capacities and amount of used space using the df -h command. As you can see, I have plenty of space left on my devices, but if we suspected we were out of storage space on this system, the df -h command would be an excellent choice to diagnose it.</p><p>The df command can also be used to diagnose problems with inode usage. On the Linux file system ext4, for example, we have an allocated number of inodes when the file system is created. An inode is an &quot;index node&quot;, which describes where data is stored on a file system. Each file has an inode number assigned to it when the file is created. If we run out of unused inodes — for example, when we copy a large number of small files onto a Linux disk — we&#39;ll lose the ability to put additional items on the device. It&#39;s possible to run out of inodes while still having storage space on a device. Both cases, lack of inodes or lack of storage space, prevent data from being added to a device. Using the df -hi command, I can see that I&#39;m not in danger of running out of inodes on my storage devices.</p><p>Performance and the iostat Utility 02:43-03:17 Another storage problem that can arise on any operating system relates to performance, specifically how fast the system is reading and writing data to and from a device. Depending on the hardware and the configuration, there are many possible causes. The iostat utility, which comes from the sysstat package, is very useful in diagnosing exactly how much data is passing into or out of a storage device. Not only does it list the amount of data per second that&#39;s being passed to devices, but it also lists how much CPU usage is being consumed by storage.</p><p>Summary 03:17-03:33 There are many more possible storage-related problems, as well as many more tools that can be used for diagnosing them. In this demonstration, we discussed several tools that can be used to track down storage problems on a Linux system.</p><h2 id="_8-15-3-troubleshooting-storage-facts" tabindex="-1"><a class="header-anchor" href="#_8-15-3-troubleshooting-storage-facts"><span>8.15.3 Troubleshooting Storage Facts</span></a></h2><p>This lesson covers the following topics:</p><ul><li>Resource troubleshooting</li><li>Storage drive types</li><li>Common storage issues</li><li>Redundant array of independent disks (RAID) troubleshooting</li></ul><h3 id="resource-troubleshooting" tabindex="-1"><a class="header-anchor" href="#resource-troubleshooting"><span>Resource Troubleshooting</span></a></h3><p>Several commonly observed issues with storage devices are discussed in this lesson. Be aware that this lesson cannot cover every storage issue and its cause. Instead, more common issues and their causes are addressed. For more complex issues, use all the resources available in order to identify the problem. This includes the following:</p><ul><li>System docs</li><li>Knowledge bases</li><li>Service manuals</li><li>User forums</li></ul><h3 id="storage-drive-types" tabindex="-1"><a class="header-anchor" href="#storage-drive-types"><span>Storage Drive Types</span></a></h3><p>When troubleshooting storage drives, it is important to know the type of drive you are working with. There are two main types of storage drives that are used in computers: mechanical hard disk drives (HDDs) and solid-state hard drives (SSDs).</p><ul><li>Mechanical hard disks have moving parts that wear out over time. It&#39;s not a matter of if an HDD will fail, it&#39;s a matter of when it will fail.</li><li>SSDs don&#39;t have any moving parts, but the storage medium they use has finite read/write counts. The more use an SSD gets, the faster it will wear out.</li></ul><p>All storage devices have a mean time between failure (MTBF) rating that is an estimated lifespan for the device. Because storage devices are sealed, there&#39;s no physical maintenance you can perform on them. Instead, you need to decide when it is time to replace the disk. Accordingly, you should implement a data backup plan to protect the data on for hard disks in the event of a failure.</p><p>Additionally, knowing what storage devices are visible to the kernel can help in you troubleshooting. Tools like lsscsi, which lists SCSI devices, and lsblk, which lists all block devices on a system, can be used to confirm that a system views the devices that an administrator expects to be attached to the system.</p><h3 id="common-storage-issues" tabindex="-1"><a class="header-anchor" href="#common-storage-issues"><span>Common Storage Issues</span></a></h3><p>Some common storage device issues and associated resolutions are listed in the following table.</p><table><thead><tr><th>Issue</th><th>Device Type</th><th>Resolution</th></tr></thead><tbody><tr><td rowspan="2">Slow performance</td><td>HDD</td><td> To help increase the performance of a slow HDD: <ul><li> Maintain a healthy amount of free disk space on the drive. A mostly empty disk runs faster than a mostly full disk. If a disk is getting full, migrate to a newer, bigger disk. </li><li> Keep the disk defragmented. A heavily fragmented disk can run quite slowly. You need ample free space to fully defragment the drive. </li><li> Check the disk rotational speed. A disk that spins faster will perform better. </li><li> Check the speed of the disk interface. If the system uses an older disk interface, upgrade to a faster interface (if possible). </li></ul></td></tr><tr><td>SSD</td><td> The more an SSD is used, the slower the read/write speed will be. <ul><li> Make sure the file system is optimized for an SSD. Because SSDs store data differently than HDDs, they require special techniques (such as wear leveling support) to extend the life of the drive. </li><li> Update the SSD&#39;s firmware. Newer firmware versions fix bugs and optimize how the SSD stores data. </li><li> Run a manufacturer-specific SSD software utility. Most SSD manufacturers have specialized utilities that can check for errors and optimize an SSD&#39;s performance. </li><li> Check the speed of the SATA connection. Older SATA versions have slower transfer speeds than newer SATA versions. If performance is too slow, consider upgrading components to the latest SATA version. </li><li> When the SSD is too full, performance decreases significantly. If this happens, try enabling features such as TRIM support in the operating system (OS). </li></ul> While features such as TRIM help to an extent, the best way to maintain high performance is keeping an SSD below 90% capacity. </td></tr><tr><td> Failure to boot <br> (OS not found) </td><td>HDD/ SSD</td><td> A failure to boot with an error message that reads OS Not Found (or something to that effect) could be trivial or serious. Common causes include the following: <ul><li> The disk you&#39;re booting doesn&#39;t have an operating system installed. This is a very common issue. <ul><li> The error frequently occurs when a CD or DVD is in the optical drive at system boot and the BIOS/UEFI is configured to boot from the optical drive first. The error message displays when an operating system can&#39;t be found on the optical disc. </li><li> To fix this issue, remove the optical disc from the drive and reboot. </li><li> There are multiple hard disks in the system, but only one has an operating system installed. </li><li> If the boot device setting is inadvertently changed in the BIOS/UEFI, the device will try to boot the system from the wrong hard disk. </li></ul></li><li> The master boot record (MBR) has been overwritten or is corrupt. <ul><li> The MBR is the first sector of the hard drive that tells the BIOS where to look for the operating system on the disk. </li><li> If the MBR is damaged or corrupt, the operating system will fail to load. </li><li> To fix this problem in Windows, you have to boot from the installation disc to enter the recovery environment and select the Automatic repair option. </li><li> Alternatively, you can select the Command prompt option and run the bootrec command to rebuild the boot configuration data. You can also run the bootrec command with the following switches: <ul><li><b class="fw-bold">/fixmbr</b> —repairs the master boot record. </li><li><b class="fw-bold">/fixboot</b> —repairs the boot sector. </li><li><b class="fw-bold">/rebuildbcd</b> —rebuilds the boot configuration data. </li></ul></li></ul></li></ul></td></tr><tr><td>Drive not recognized by the BIOS/UEFI</td><td>HDD/SSD</td><td> A modern BIOS/UEFI automatically detects drives and their geometry during POST. In older systems, you had to manually enter the disk geometry, and it was very common for a wrong value to be entered. In modern systems, this rarely happens. If the BIOS can&#39;t detect the drive, it&#39;s usually caused by an unplugged power connector, an unplugged SATA cable, or malfunctioning drive. </td></tr><tr><td>Application crash</td><td>N/A</td><td> If an application you are using crashes, an error has occurred that gives you no choice except to exit the application. Be aware: <ul><li> Sometimes you can fix the problem by rebooting the computer. </li><li>You may need to debug the system.</li><li> You can check log files for errors that provide clues about what might have caused the crash. </li></ul></td></tr><tr><td>Crash screens</td><td>N/A</td><td> If you experience a black screen of death (BSOD) on a Windows machine or spinning pinwheel of death (SPOD) on a MAC, several events may have occurred. You could have a fatal system error that is preventing the system from operating safely, or just one application may have failed. <br><br> Often, rebooting the computer solves the problem. If that doesn&#39;t work, you can: <ul><li> Attempt to revert the system to a previous state to undo any software or hardware changes that are causing problems. </li><li>Scan the computer for viruses.</li><li> Roll back drivers, update drivers, update the operating system, update BIOS, or return suspect components to the factory settings. </li><li>Repair permissions.</li><li>Clear the dyld cache on a Mac.</li></ul></td></tr><tr><td>Drive noise</td><td>HDD</td><td> Excessive or unusual drive noise (such as a clicking or grinding) almost always indicates a failing hard disk. For example, a clicking noise coming from the drive usually indicates one or more failing heads. </td></tr><tr><td>Data loss or corruption</td><td>HDD/SSD</td><td> Corrupt or lost data on the storage device can indicate the disk or one of its components is failing. </td></tr><tr><td> Input/output operations per second <br> (IOPS) </td><td>HDD/SSD</td><td> IOPS is the measurement of how many input/output operation can be performed per second. <ul><li> A decreasing IOPS value (fewer input/output operations are occurring) can indicate that a disk or one of its components is failing. </li><li> In Windows, IOPS can be measured using the Performance Monitor app. </li></ul></td></tr></tbody></table><h3 id="raid-troubleshooting" tabindex="-1"><a class="header-anchor" href="#raid-troubleshooting"><span>RAID Troubleshooting</span></a></h3><p>When a workstation&#39;s hard disk storage is using RAID, you may be required to troubleshoot RAID issues. The following table gives possible causes and fixes for two common issues.</p><table><thead><tr><th>Issue/Symptom</th><th>Possible Causes and Fixes</th></tr></thead><tbody><tr><td>The OS cannot find the RAID array</td><td> For hardware RAID arrays, this can be caused by: <ul><li> A missing device driver for the RAID controller board. To fix, download and install the latest driver for the RAID board. </li><li> A failed RAID controller board. To fix, install a new RAID controller board, rebuild the array, and then restore the data from backup. </li></ul> For software RAID arrays, this issue can be caused by a serious issue with either the operating system files or with the storage devices included in the array. </td></tr><tr><td>RAID stops working, but has the appropriate driver loaded</td><td> If you have the appropriate driver and RAID stops working, possible issues are: <ul><li> The RAID controller board may have failed. To fix, install a new RAID controller board, rebuild the array, and then restore the data from backup. </li><li> One or more drives in the array have failed. <ul><li> In a RAID 0 configuration, the data is striped across all the drives in the array. <ul><li> The loss of a disk means all its data stripes are lost. </li><li> To fix, replace the failed disk, rebuild the array, and then restore data from backup. </li></ul></li><li> RAID levels that include redundancy (such RAID 1, RAID 5, RAID 1+0, and RAID 0+1) can tolerate disk failures better than other RAID levels. Usually, you can: <ul><li>Replace the failed disk.</li><li> Wait for the data to be automatically restored from the other disks in the array using mirroring or parity. </li></ul></li></ul></li></ul></td></tr></tbody></table>',60)]))}const h=t(i,[["render",r],["__file","15.html.vue"]]),d=JSON.parse('{"path":"/08/15.html","title":"Section 8.15 Troubleshooting Storage","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Section 8.15 Troubleshooting Storage","description":"some description"},"headers":[{"level":2,"title":"8.15.1 Common Storage Issues","slug":"_8-15-1-common-storage-issues","link":"#_8-15-1-common-storage-issues","children":[]},{"level":2,"title":"8.15.2 Troubleshoot Storage Problems","slug":"_8-15-2-troubleshoot-storage-problems","link":"#_8-15-2-troubleshoot-storage-problems","children":[]},{"level":2,"title":"8.15.3 Troubleshooting Storage Facts","slug":"_8-15-3-troubleshooting-storage-facts","link":"#_8-15-3-troubleshooting-storage-facts","children":[{"level":3,"title":"Resource Troubleshooting","slug":"resource-troubleshooting","link":"#resource-troubleshooting","children":[]},{"level":3,"title":"Storage Drive Types","slug":"storage-drive-types","link":"#storage-drive-types","children":[]},{"level":3,"title":"Common Storage Issues","slug":"common-storage-issues","link":"#common-storage-issues","children":[]},{"level":3,"title":"RAID Troubleshooting","slug":"raid-troubleshooting","link":"#raid-troubleshooting","children":[]}]}],"git":{"updatedTime":1736669805000},"filePathRelative":"08/15.md"}');export{h as comp,d as data};
