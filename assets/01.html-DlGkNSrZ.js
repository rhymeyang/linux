import{_ as n,c as r,a as s,b as e,d as t,o as a}from"./app-DQZVun5U.js";const i={};function l(d,o){return a(),r("div",null,o[0]||(o[0]=[s('<p>As you study this section, answer the following questions:</p><ul><li>What is the function of the IP protocol?</li><li>What is the difference between class and classless subnetting?</li><li>What is the main role of the ICMP protocol?</li><li>What is the difference between a private IP address and a public IP address?</li><li>How does the subnet mask identify the network address and network node?</li></ul><p>The key terms for this section include:</p><table class="terms"><thead><tr><th>Term</th><th>Definition</th></tr></thead><tbody><tr><td>IPv4</td><td> An IP addressing scheme used by the fourth version of the Internet Protocol (IP). It uses 32-bit addresses. </td></tr><tr><td>Network port</td><td>A communication endpoint used by a process or an application.</td></tr><tr><td>Protocol</td><td>A set of standards for communication between network hosts.</td></tr><tr><td>Subnet mask</td><td> A 32-bit number associated with each IPv4 address and identifies the network portion of the address. </td></tr><tr><td>Subnetting</td><td> The process of dividing a large network into smaller networks. </td></tr></tbody></table><p>This section helps you prepare for the following certification exam objectives:</p><table class="objectives"><thead><tr><th>Exam</th><th>Objective</th></tr></thead><tbody><tr><td>TestOut Linux Pro</td><td> 3.1 Configure networking <ul><li>Configure IP addresses</li><li>Troubleshoot an IP configuration</li></ul></td></tr></tbody></table><h2 id="_12-1-1-ip-protocols" tabindex="-1"><a class="header-anchor" href="#_12-1-1-ip-protocols"><span>12.1.1 IP Protocols</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>TCP/IP Protocol Suite 00:00-00:44 A protocol is a standard for how to act or communicate. Protocols define rules and regulations that everyone follows. A network protocol works in the same way. No matter where you are or what kind of computer you&#39;re using, you can communicate with other computers over a network if you use the same network protocols.</p><p>A group of protocols that are used together is called a protocol suite. The most commonly used network protocol suite today is the TCP/IP protocol suite. TCP/IP is used on the Internet and on most networks. TCP/IP stands for Transmission Control Protocol and Internet Protocol. That&#39;s because they control transmissions between computers on a network (including the internet).</p><p>TCP and UDP 00:44-02:17 The most important transport protocol is called Transmission Control Protocol (TCP). TCP is often called a connection-oriented protocol. When information is transmitted using TCP, the computer sending the message does its best to make sure the receiving computer receives the message with no errors. It does this by requiring the receiving computer to acknowledge each packet it receives from the sender. Services that require a high degree of fidelity use TCP, such as an email server or a file server. We need to know that an email we send will arrive intact. We need to know that a file we save on a file server will be saved correctly.</p><p>Another transport protocol is called User Datagram Protocol (UDP). Unlike the connection-oriented TCP, UDP is a connectionless protocol. It simply transmits messages regardless of whether transmission errors occur. It does not require the destination system to acknowledge delivery. This method could fail to deliver all of the packets in a transmission. However, it transfers data very quickly because the latency associated with acknowledging each packet is removed. Many audio and video streaming services use UDP because it&#39;s much faster than TCP. A few missing packets in a video or audio stream would probably go unnoticed by the end user.</p><p>TCP and UDP form the foundation of the TCP/IP suite. All of the other protocols in the suite work in conjunction with one of these two protocols. To illustrate this, protocols that use TCP will be written in blue and protocols that use UDP will be written in green.</p><p>HTTP 02:17-02:35 One common protocol that most Internet users are familiar with is HTTP, or Hypertext Transfer Protocol. HTTP is used by Internet browsers to request information from website servers. It&#39;s also used by websites to return information to the browser and display it on the screen.</p><p>HTTPS 02:35-02:56 A related protocol that you might see is HTTPS. HTTPS is functionally the same as HTTP, but with a security protocol added. The S stands for Secure. This is used to keep private information private. When you use your credit card to buy something online, the transaction is usually carried out by the HTTPS protocol.</p><p>SSL 02:56-03:21 Security for the HTTPS protocol is created by one of two security protocols. One is called SSL, for Secure Socket Layer, and the other is called TLS for Transport Layer Security. TLS can be thought of as a more advanced version of SSL. While they work differently, both of these protocols protect data from wiretapping and other attacks by encrypting data while it travels between the client and the server.</p><p>File Transfer Protocols 03:21-03:45 The next four protocols we&#39;re going to talk about are used to transfer files across a network. The File Transfer Protocol, or FTP, is often used to transfer a file between computers. A similar protocol is Trivial File Transfer Protocol, or TFTP. FTP uses TCP to transmit information, and TFTP uses UDP, which means it&#39;s much faster but less reliable.</p><p>Secure File Transfer Protocols 03:45-04:55 There are also two secure protocols for transferring files: Secure File Transfer Protocol (SFTP) and Secure Copy Protocol (SCP). These protocols securely transfer files across a network.</p><p>The next set of protocols that we&#39;ll talk about are email protocols. The first is the Simple Mail Transport Protocol, or SMTP. This is used to send mail between email servers. Using SMTP, I can send emails to addresses that aren&#39;t in my domain as long as both email services are using SMTP.</p><p>Other protocols are used to retrieve messages from the email server to the client workstation, notebook, or mobile device. The Post Office Protocol version 3, or POP3, downloads email messages from the email server and saves them on the client. The advantage of using POP3 is that after downloading you can access your email even when you&#39;re offline. Another common protocol is the Internet Message Access Protocol, or IMAP. With IMAP, mail can be stored on the email server. This allows a user to access their messages from multiple devices. It also means that if my computer hard drive fails, I won&#39;t lose my emails because they&#39;re saved on the server.</p><p>DHCP 04:55-05:23 Let&#39;s talk about protocols that provide network services. One is called the Dynamic Host Configuration Protocol, or DHCP. DHCP allows devices to receive configuration information from a central server. Without DHCP you would have to visit each computer on a network to manually configure an address. With DHCP you configure a central server, and as devices connect to the network they receive addressing and other configuration information from it.</p><p>DNS 05:23-05:59 Another service is the Domain Name System, or DNS. DNS allows you to use hostnames to identify computers. Instead of using an IP address, you can use a logical name. For instance, if you&#39;ve ever browsed the Internet, you&#39;ve probably visited a website by typing a URL, such as www.testout.com. This is a logical name that identifies a web server, and when you use this name you initiate the HTTP protocol to read the information that&#39;s on that server. DNS allows you to use logical names instead of remembering an IP address for the computer that you need to get to.</p><p>NTP 05:59-06:07 Another network service is the Network Time Protocol, or NTP. NTP allows devices to synchronize their clocks through a network.</p><p>LDAP 06:07-06:22 The last network service protocol we&#39;re going to discuss is called Lightweight Directory Access Protocol, or LDAP. LDAP allows users to access directory service information for users on their network, such as name, phone number, and email address.</p><p>SNMP 06:22-06:51 Let&#39;s review several network management protocols. The Simple Network Management Protocol, or SNMP, lets network administrators set up alerts to monitor the state of the network. For example, suppose your network has a shared storage drive with 8TB of space. You&#39;ll want to know when the drive is getting full before it actually runs out of space. Instead of checking the available space on the drive every day, you can use SNMP to alert you when the drive has 1TB of storage space left.</p><p>Telnet and SSH 06:51-07:15 The next two protocols allow users to access network devices remotely. They are called Telnet and SSH. Telnet was developed in the 1960s and was used for some time. However, most administrators don&#39;t use it anymore because it is not secure. Secure Shell, or SSH, is a secure alternative to Telnet. This protocol can be used to securely access and manage remote network devices.</p><p>ICMP 07:15-07:34 The last two protocols we&#39;re going to talk about are control protocols. The first one is the Internet Control Message Protocol, or ICMP. This protocol can be used to detect which other devices are on the network. It is commonly used to verify that a network host is up and running and that it is reachable over the network medium.</p><p>IGMP 07:34-07:48 The final protocol we&#39;re going to discuss is the Internet Group Management Protocol, or IGMP. IGMP establishes multicast group memberships, which allows a computer to send a single network packet to multiple hosts on the network at the same time.</p><p>Summary 07:48-07:58 In this lesson, we reviewed commonly used protocols in the TCP/IP protocol suite.</p><h2 id="_12-1-2-ip-protocol-facts" tabindex="-1"><a class="header-anchor" href="#_12-1-2-ip-protocol-facts"><span>12.1.2 IP Protocol Facts</span></a></h2><p>This lesson covers the following topics:</p><ul><li>Protocols</li><li>Protocols in the IP protocol suite</li></ul><h3 id="protocols" tabindex="-1"><a class="header-anchor" href="#protocols"><span>Protocols</span></a></h3><p>A protocol is a set of standards for communication between network hosts. Protocols often provide services, such as email or file transfer. Most protocols are not intended to be used alone. Instead, they rely on and interact with other dependent or complementary protocols, and a group of protocols intended to be used together is called a protocol suite.</p><h3 id="protocols-in-the-ip-protocol-suite" tabindex="-1"><a class="header-anchor" href="#protocols-in-the-ip-protocol-suite"><span>Protocols in the IP Protocol Suite</span></a></h3><p>The Internet Protocol (IP) protocol suite (commonly referred to as TCP/IP) is the most widely used protocol suite today. The following table describes several protocols in the IP protocol suite.</p>',36),e("table",null,[e("thead",null,[e("tr",null,[e("th",null,"Protocol"),e("th",null,"Description")])]),e("tbody",null,[e("tr",null,[e("td",null,[t(" Internet Protocol "),e("br"),t(" (IP) ")]),e("td",null," IP is the main protocol used on the internet. IP is a connectionless protocol that makes routing path decisions. It also handles logical addressing issues through the use of IP addresses. ")]),e("tr",null,[e("td",null,[t(" Transmission Control Protocol "),e("br"),t(" (TCP) ")]),e("td",null,[t(" TCP provides services that ensure accurate and timely delivery of network communications between two hosts. TCP is a connection-oriented protocol. It provides the following services to ensure message delivery: "),e("ul",null,[e("li",null,"Sequencing of data packets"),e("li",null,"Flow control"),e("li",null,"Error checking")])])]),e("tr",null,[e("td",null,[t(" User Datagram Protocol "),e("br"),t(" (UDP) ")]),e("td",null," UDP is a connectionless protocol. It is a host-to-host protocol like TCP. However, UDP does not include mechanisms for ensuring timely and accurate delivery. Because it has less overhead, it offers fast communications, but at the expense of possible errors or data loss. ")]),e("tr",null,[e("td",null,[t(" Internet Control Message Protocol "),e("br"),t(" (ICMP) ")]),e("td",null,[t(" ICMP works closely with IP to provide error and control information. This protocol allows hosts to exchange packet status information, which helps move the packets through the internetwork. Two common management utilities, "),e("b",null,"ping"),t(" and "),e("b",null,"traceroute"),t(" , use ICMP messages to check network connectivity. ICMP also works with IP to send notices when destinations are unreachable and when devices' buffers overflow. It works with IP to send notices of whether devices can communicate across the network as well. Additionally, ICMP relays information about the route and hops that packets take through the network. ")])]),e("tr",null,[e("td",null,[t(" Internet Group Membership Protocol "),e("br"),t(" (IGMP) ")]),e("td",null," IGMP is a protocol for defining host groups. All group members can receive broadcast messages intended for the group (called multicasts). Multicast groups can be composed of devices within the same network or across networks (connected with a router). ")]),e("tr",null,[e("td",null,[t(" HyperText Transfer Protocol "),e("br"),t(" (HTTP) ")]),e("td",null," HTTP is used by web browsers and web servers to exchange files (such as web pages) through the world wide web and intranets. HTTP can be described as an information requesting and responding protocol. It is typically used to request and send web documents but is also used as the protocol for communication between agents using different IP protocols. ")]),e("tr",null,[e("td",null,[t("HTTP over SSL"),e("br"),t("(HTTPS)")]),e("td",null," HTTPS is a secure form of HTTP that uses SSL to encrypt data before it is transmitted. ")]),e("tr",null,[e("td",null,[t("Secure Sockets Layer"),e("br"),t("(SSL)")]),e("td",null," SSL secures messages being transmitted on the internet. It uses RSA for authentication and encryption. Web browsers use SSL (Secure Sockets Layer) to ensure safe web transactions. URLs that begin with https:// trigger your web browser to use SSL. ")]),e("tr",null,[e("td",null,[t(" Transport Layer Security "),e("br"),t(" (TLS) ")]),e("td",null,[t(" TLS is an improved version of SSL. It ensures that messages being transmitted on the internet are private and tamper-proof. TLS is implemented through two protocols. "),e("ul",null,[e("li",null," TLS Record provides connection security with encryption (e.g., with DES). "),e("li",null," TLS Handshake provides mutual authentication and choice of encryption method. ")])])]),e("tr",null,[e("td",null,[t(" File Transfer Protocol "),e("br"),t(" (FTP) ")]),e("td",null,[t(" FTP provides a generic method of transferring files. It can include file security through usernames and passwords, and it allows file transfer between dissimilar computer systems. FTP can transfer both binary and text files, including HTML, to another host. FTP URLs are preceded by ftp://. To log in to an FTP server, use: "),e("b",null,"ftp://username@servername")])]),e("tr",null,[e("td",null,[t(" Trivial File Transfer Protocol "),e("br"),t(" (TFTP) ")]),e("td",null," TFTP is similar to FTP. It lets you transfer files between a host and an FTP server. However, this protocol provides no user authentication and no error detection. Because it doesn't perform error detection, TFTP is faster than FTP but might be subject to transmission errors. ")]),e("tr",null,[e("td",null,[t(" Secure File Transfer Protocol "),e("br"),t(" (SFTP) ")]),e("td",null,[e("p",null," SFTP is a secure version of FTP that uses Secure Shell (SSH) to encrypt data transfers. SSH ensures that SFTP transmissions use encrypted commands and data, which prevent data from being transmitted over the network in clear text. ")])]),e("tr",null,[e("td",null,[t(" Secure Copy Protocol "),e("br"),t(" (SCP) ")]),e("td",null," SCP allows you to copy files between systems. Like SFTP, SCP relies on SSH to ensure that data and passwords are not transmitted over the network in cleartext. ")]),e("tr",null,[e("td",null,[t(" Simple Mail Transfer Protocol "),e("br"),t(" (SMTP) ")]),e("td",null,[t(" SMTP is used to route electronic mail through the internetwork. SMTP is used in the following ways: "),e("ul",null,[e("li",null,"Between mail servers for sending and relaying mail"),e("li",null,"By all email clients to send mail")])])]),e("tr",null,[e("td",null,[t(" Internet Message Access Protocol "),e("br"),t(" (IMAP) ")]),e("td",null," IMAP is an email retrieval protocol designed to enable users to access their email from various locations without the need to transfer messages or files back and forth between computers. Messages remain on the remote mail server and are not automatically downloaded to a client system. An email client that uses IMAP for receiving mail uses SMTP for sending mail. ")]),e("tr",null,[e("td",null,[t(" Post Office Protocol 3 "),e("br"),t(" (POP3) ")]),e("td",null," POP3 retrieves email from a remote server to a local client over a TCP/IP connection. With POP3, email messages are downloaded to the client. An email client that uses POP3 for receiving mail uses SMTP for sending mail. ")]),e("tr",null,[e("td",null,[t(" Dynamic Host Configuration Protocol "),e("br"),t(" (DHCP) ")]),e("td",null," DHCP is a protocol that automatically assigns addresses and other configuration parameters to network hosts. Using a DHCP server, hosts receive configuration information at startup. This reduces the amount of manual configuration required on each host. ")]),e("tr",null,[e("td",null,[t(" Domain Name System "),e("br"),t(" (DNS) ")]),e("td",null," DNS is a system that is distributed throughout the internetwork to provide address and name resolution. For example, the name www.mydomain.com would be identified with a specific IP address. ")]),e("tr",null,[e("td",null,[t(" Network Time Protocol "),e("br"),t(" (NTP) ")]),e("td",null," NTP communicates time synchronization information between systems on a network. ")]),e("tr",null,[e("td",null,[t(" Lightweight Directory Access Protocol "),e("br"),t(" (LDAP) ")]),e("td",null," LDAP allows you to search and update a directory service. The LDAP directory service follows a client-server model. One or more LDAP servers contain the directory data. The LDAP client connects to an LDAP server to make a directory service request. ")]),e("tr",null,[e("td",null,[t(" Simple Network Management Protocol "),e("br"),t(" (SNMP) ")]),e("td",null," SNMP is a protocol designed for managing complex networks. SNMP lets network hosts exchange configuration and status information. This information can be gathered by management software and used to monitor and manage the network. ")]),e("tr",null,[e("td",null,[t(" Remote Terminal Emulation "),e("br"),t(" (Telnet) ")]),e("td",null,[t(" Telnet allows an attached computer to act as a dumb terminal with data processing taking place on the TCP/IP host computer. "),e("div",null,[e("div",null,[e("div",null,[e("div",{class:"to-icon large","aria-hidden":"true",style:{width:"20px"}},[e("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"fal","data-icon":"circle-info",class:"svg-inline--fa fa-circle-info",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"},[e("path",{fill:"currentColor",d:"M256 32a224 224 0 1 1 0 448 224 224 0 1 1 0-448zm0 480A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM208 352c-8.8 0-16 7.2-16 16s7.2 16 16 16l96 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0-112c0-8.8-7.2-16-16-16l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l24 0 0 96-32 0zm48-168a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"})])]),e("div",{class:"to-info-box-body-content"},[e("span",null,"Telnet uses unsecured data transmissions and should be avoided. SSH provides the same functionality but does so securely using encryption.")])])])])])]),e("tr",null,[e("td",null,[t(" Secure Shell "),e("br"),t(" (SSH) ")]),e("td",null," SSH allows secure interactive control of remote systems. SSH is a secure and acceptable alternative to Telnet. SSH uses public-key cryptography for both connection and authentication. ")])])],-1),s('<h2 id="_12-1-3-ipv4-addressing" tabindex="-1"><a class="header-anchor" href="#_12-1-3-ipv4-addressing"><span>12.1.3 IPv4 Addressing</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>IP Addresses 00:00-00:59 Let&#39;s learn about IPv4 addressing. IP addressing, subnetting, and summarization are some of the key concepts you should know. It&#39;s important to master the process of interpreting IP addresses so that you understand networks and subnets and the numbers of hosts you&#39;re working with.</p><p>IPv4 is an IP addressing standard, and going forward, I&#39;ll just refer to it as IP addressing. IPv4 addresses are 4 bytes in length. There are four octets separated by periods. In each of these segments is a numeric value. That value is within the range of a single byte of information. This means that each of these numbers can be anything between 0 and 255. With some exceptions, any combination of numbers can be used for each of the different bytes. For example, this would be a valid IP address. Each of those numbers falls within the range of 0 and 255. This would be another valid IP address.</p><p>Network and Host Numbers 00:59-03:05 IPv4 addresses are divided into two major parts. The first part is called the network portion, which may be these first two numbers. The second part is the host portion, which is everything that follows. In this example, I could read this as the host portion, and this as the network portion. This is the host 0.1 on network 172.16. The network portion is the area, region, or broadcast domain of the network the host is connected to. The host ID is the specific node within that region or broadcast domain that the host occupies.</p><p>The second IP address here has a network portion of the first three octets. The host portion is the last octet. In this case, that would be Host 200 on Network 192.168.0.</p><p>But how do I know that? Why is it 2 for the network portion up here, and 3 for network portion down here? The answer is determined by which network class you&#39;re using.</p><p>This number on top is a Class B network. The number on the bottom is a Class C network. The network class dictates how many octets or bytes are used as the network portion. For now, just know that there&#39;s a host portion and a network portion of your IP address.</p><p>Now let&#39;s look at an example. As you already know, a router defines broadcast domains. Let&#39;s say there are two connections coming out of a router a switch on each side with some connected nodes. Each of these connections form a different broadcast domain.</p><p>Broadcast domains equate to network IDs for IP, the Internet Protocol. Each of the different broadcast domains is serviced by a different network number. On the left side, we have 192.168.1.X. I&#39;m putting an X in the host portion because we&#39;re only focused on the network portion for now. On the right side, we have a different network number because we&#39;re in a different broadcast domain. So, let&#39;s say it&#39;s 2.X. In other words, 192.168.2 is the network number.</p><p>Network Numbers Separated by Routing Device 03:05-04:53 It&#39;s key to understand that different network numbers have to be separated by a routing device. I couldn&#39;t have nodes 192.168.2 and 192.168.1 in the same region of the network and expect them to communicate. Network numbers have to be routed separately to communicate.</p><p>In this case, I&#39;m going to assign some numbers to these nodes, on the left: 1, 2, 3. This first node is now 192.168.1.1. The host portion is just 1. This next node becomes 192.168.1.2. If Number 1 tries to communicate to this host on the right, it&#39;s going to generate a packet with its own source IP address. The destination will be the IP address 192.168.2.1. That request goes to the router. The router realizes, &quot;Oh, yes, I know how to get to this network. I&#39;m connected to it.&quot; So it&#39;ll take the packet and route it over to this second interface and then out that network.</p><p>Once again, different network numbers have to be separated by a routing device. In fact, that&#39;s the definition of routing: when you take data off one network number or ID and move it to a different one. Every node connected to an IP-based network such as servers, workstations, and printers needs to have a unique 4-byte IP address.</p><p>Certain devices, like routers, which connect to multiple broadcast domains, have at least a single IP address for each of those interfaces. Even Layer 2 switches, which don&#39;t route data, have an IP address that allows them to be remotely managed by that IP. This way, remote applications, like Telnet and Secure Shell, can gain access to that device when they need to configure or manage it.</p><p>Summary 04:53-05:07 That&#39;s it for our discussion of Ipv4 addressing. In this video, we looked at how to interpret IP addresses by understanding their network and host portions.</p><h2 id="_12-1-4-subnet-masks" tabindex="-1"><a class="header-anchor" href="#_12-1-4-subnet-masks"><span>12.1.4 Subnet Masks</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>Subnets 00:00-01:54 In this video, we&#39;re going to cover the concept of subnetting. Subnetting is taking a network number and dividing it into smaller regions with fewer hosts. It&#39;s used to control broadcast traffic and isolate networks for routing and management purposes.</p><p>Network 10 is a Class A network with a /8 mask by default. That means it can handle over 16.7 million hosts. Let&#39;s say we&#39;re building a network and decide to use the private address of 10. Every host within our network starts with 10, and we have three octets for the host portion.</p><p>We need to figure out which hosts need which IP addresses. Then we can statically configure them or set up DHCP to roll them out. Let&#39;s say we use the number 1 to represent the Sales Department. 10.1.0.1 would be the first salesperson, then 0.2, 0.3, and so on.</p><p>The Marketing Department is 10.2. We can look at the IP address and know what department it&#39;s assigned to by this octet. The problem is that when we use /8 addressing all the way down, it&#39;s still just that first octet octet 10 that&#39;s used for routing purposes. Routers don&#39;t use the second octet to make routing decisions, even though we used it internally to represent departments. The last three octets are still considered the host portion.</p><p>All hosts within our organization will be on the same singular network if we don&#39;t change the network mask from its default. In other words, we have one large broadcast domain. More nodes are affected the larger this domain gets. This means performance is degraded for everyone.</p><p>With a single broadcast domain, we can&#39;t manage individual departments by their network number. We also don&#39;t have options to secure different broadcast domains by adding access control filters between them. Again, performance suffers.</p><p>Extend the Default Mask 01:54-03:06 What&#39;s the solution? In this example, we&#39;re using the second octet to recognize departments. We need to extend the default mask from /8 to /16 and include it in routing decisions.</p><p>When we assign different hosts, we give them /16 masks. Now this sales host is 0.1 on Subnetwork 10.1. The subnet is that second octet, and the network number is still 10. But we call the 10 and the 1 together with the subnetwork. So the marketing host is now on Subnetwork 10.2.</p><p>Doing this lets us take advantage of routers that divide these different subnetworks or broadcast domains. We put sales on one side of the router and marketing on another side.</p><p>Different network numbers can&#39;t communicate unless they go through a routing device. The network on the left, 10.1.0.0/16, and the network on the right, 10.2.0.0/16, could each have over 65,000 hosts on them. That&#39;s because there&#39;s two octets for the hosts portion, or 16 bits. The formula is 2 to the N power, which is 2 to the 16th power minus 2. That equals 65,534.</p><p>Subdivide a Network 03:06-06:18 The point is, we wouldn&#39;t have this many hosts in a single broadcast domain. We can subdivide the network more the deeper we go.</p><p>Maybe the subnets have users broken down into /24 addresses. The salesperson would have something like this.</p><p>Let&#39;s look at a broader example. Imagine a campus environment where there are three or more buildings and several thousand users across the campus. Each building has its own internal switching. There might be thousands of switch ports within that building, and different departments to subdivide our IP addressing into. If we decide that no department should have more than 254 hosts, then we don&#39;t use anything greater than a /24 subnet.</p><p>In that case, we use 10.x.x.x/24 as the mask for individual departments. Let&#39;s say, within Building 1, there&#39;s sales, marketing, and finance departments. There&#39;s also sales and marketing department in Building 3, an engineering department, and so on. One way of handling this environment is to use the first available octet here. The second octet represents the building number. We start IP addresses with 10.1 for all hosts in Building 1. For all hosts in Building 2 we use 10.2. For Building 3, 10.3. The first two octets tell us it&#39;s Network 10. The second octet distinguishes what building the host is in.</p><p>We still have the third octet to do something with. We can use it to represent the department. If sales is 1, then any sales host will have 1 as the third octet. Then comes some number from 1 to 254 as the fourth octet. The mask is /24. It&#39;s the same for Building 3. The salesperson is 10.3.1.x/24. engineering is 10.3.4.x/24.</p><p>So, we have a Class A network 10 with a default mask of /8. But we aren&#39;t limited to that. We can steal as many octets as we need from the host portion to subdivide the network. We size each subnet appropriately for the number of hosts.</p><p>These connections between buildings have particular lengths. This might be a campus ring or some other topology. It doesn&#39;t make sense to allocate a /24 network to this connection if they&#39;re point-to-point links. There&#39;ll only ever be two hosts on it.</p><p>We can allocate a network number down to just two hosts of /30. For example, we can make this a 10 network between Buildings 1 and 3. Let&#39;s use the second octet of 0 for the building&#39;s interconnections. We&#39;ll call them 1 and 2. We&#39;re allocating a subnet that can only support two hosts with the /30 mask. So, we&#39;re wasting all those 252 hosts.</p><p>Subnetting design means knowing the number of hosts you need on a network segment and allocating a suitable mask.</p><p>It&#39;s key for you to understand that everything in this picture is still on the same private network number of 10. But we took that 10 network and broke it up into smaller pieces to provide smaller broadcast domains. This way, we get better performance and security options.</p><p>Summary 06:18-06:28 That&#39;s it for this lesson. This video provided you with an overview of subnetting.</p><h2 id="_12-1-5-variable-length-subnet-masking-vlsm" tabindex="-1"><a class="header-anchor" href="#_12-1-5-variable-length-subnet-masking-vlsm"><span>12.1.5 Variable Length Subnet Masking (VLSM)</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>Variable Length Subnet Masking (VLSM) 00:00-00:14 In this video, we&#39;re going to talk about Variable Length Subnet Masking, or VLSM. VLSM lets you subdivide a network using different subnet masks in different regions.</p><p>Class C Network Address 00:14-03:38 Let&#39;s look at an example. We have a router with four connected segments and switching on each end. Each of these segments leads to a different department. We want to allocate a certain number of hosts per each of these segments.</p><p>The top one is the sales department, with 20 users. On the right side, there&#39;s marketing with 10 users. Over here, we have engineering with 35 users. And down on the bottom, we have the administrative staff with four users.</p><p>Let&#39;s use class C addressing, 192.168.x.x, on each segment. The default mask is /24.</p><p>The top one is 192.168.1. Off to the right, we have 192.168.2.x. We&#39;ll do 192.168.3.x over here, and 192.168.4.x on the bottom.</p><p>For each of these segments, we&#39;ve allocated a block of 254 addresses. This is kind of a waste because we only have 20 systems up here. Even if we plan for expansion, we&#39;ll have up to 40 systems in sales, so we&#39;re wasting 234 usable addresses. It&#39;s even more of a waste with the administrative staff. The point is, there&#39;s a better method for using different masking on different segments to allocate just the number of hosts we need. For larger organizations, this is an ideal alternative.</p><p>192.168 indicates a private IP address; so, if we want to keep the class C private addressing throughout the organization, we only have this third octet to play with. That limits us to a total of 256.</p><p>If we want to allocate a large enough block of addresses to handle the department and allow room for expansion, we can&#39;t over-allocate and waste so many IP addresses.</p><p>If we want to allocate just enough to cover 20 IP addresses for the top, then we need to figure out what mask will produce that number of hosts. It comes down to the formula of 2 to the N minus 2 (N being the number of host bits we have once we&#39;ve masked the number). The value of N in this formula needs to equal or exceed 20. Let&#39;s put some of the binary numbers and their values back up here.</p><p>We&#39;re looking for at least 20 here. 16 is not enough. 32 minus 2 is 30. That&#39;s enough with five host bits.</p><p>Next, we have the 35-user segment. 32 isn&#39;t enough, so 64 minus 2 is 62. That gives us six host bits, which is enough.</p><p>Okay. We have 10 on the right. 8 is not enough. 16 certainly is. That gives us four hosts bits.</p><p>Finally, on the bottom, I need four hosts. I see a 4 here, but I have to subtract 2, which only gives us two valid hosts. That&#39;s not enough, so we have to go down to 8 and give it 3 host bits.</p><p>Go back to the top. Which mask will give us 5 host bits? There are 32 bits total. Subtract 5, and we get a mask of /27. This is the most efficient mask for the top segment.</p><p>For the segment on the left, 2 to the 6th power minus 2 equals 62. If we subtract 6 bits from 32, we get a mask of /26. On the bottom, 3 host bits equals /29, and on the right, 4 host bits equals /28. These are the most efficient masks for each of these segments.</p><p>Class A Network Address 03:38-06:51 Let&#39;s look at another example. This time, we&#39;ll use a class A network address, the 10 net. This is the address for every host within our network. This network is more complex. At the headquarters, we have a couple of point-to-point WAN connections to small, remote branch offices. The headquarters is in New York, and the remote offices are in Philadelphia and New Jersey. These connections between the locations only have two devices connected to them, the local router at HQ, and the far router at the branch office.</p><p>In those branch offices, there&#39;s local switching and a certain number of users. New Jersey is the smallest. Philadelphia has multiple switches. Headquarters has a central switch that feeds out to different locations, floors, buildings, and users.</p><p>Headquarters has more than 2,000 hosts. This top switched environment is one building with 500 users. The next one has 300 users, and the last one has 100 users. The remote offices are much smaller. The one on top has 50 users, and the one on the bottom has 160. I&#39;m doing this because when we start allocating IP addresses and designing our structure, we&#39;ll want to efficiently roll out these addresses and masks.</p><p>We also have the connections between the routers here, at the different locations. There are two hosts connected to this connection and two hosts connected to this point-to-point connection.</p><p>Now, we go through each of these locations and find the most efficient mask to yield that number of hosts.</p><p>Let&#39;s start with the small one. 50. 2 to the 5th power equals 32, so that&#39;s not going to be enough. 2 to the 6th equals 64. Subtract 2, and that equals 62 (so, 6 host bits there). Extending the powers of 2 to get 160, we get 8 host bits. On the left, to yield 500 hosts, we need 9 host bits because 2 to the 9th equals 512 minus 2, which is 510. We also need 9 here. For 100, we need 7.</p><p>Peeling off those numbers from the 32 bits in an IP address, the mask will be /26 here, /24 here, /23 for the 500 users and 300 users, and for the bottom 100, /25. These are the most efficient masks.</p><p>For the point-to point-connections between the routers, 2 host bits is enough. The /30 mask would be appropriate.</p><p>In all these examples, the subnetting is occurring in the third or fourth byte. In the case of /26, up here, that&#39;s 2 bits into the fourth octet of the IP address. /24 is the default mask of a class C address, so all 8 remaining bits are the host portion. Off to the left, /23 falls within the third octet, and /25 falls into the fourth octet. The /30s are also in the fourth octet.</p><p>Our subnetting is occurring in octets 3 and 4, so we still have the second octet if we want to use it to represent different locations. There are several ways of designing an IP network, but if you make use of octets to represent locations, the network IP addressing structure becomes more manageable.</p><p>500 Hosts 06:51-08:53 Let&#39;s say headquarters is Site 1, and let&#39;s give numbers to these other sites, too.</p><p>Every host at headquarters starts with 10.1. But we need to determine the network number. Let&#39;s look at that 500-user segment in the headquarters location. We determined that the /23 mask was the most efficient for it.</p><p>We need to figure out what to do with the third and fourth octets. 23 bits are allocated to the network number. The first two octets, 10 and 1, occupy 16 of those bits. We need 7 more. The third octet looks like this from a masked perspective. We&#39;ll have seven additional 1s and then a 0. Eight 1s plus eight 1s plus 7 more equals your 23 consecutive 1s in the mask. This is the decimal format.</p><p>The last masked bit in binary is 2. That means the subnets we choose from when using a /23 mask are counted in multiples of two. Subnet 0 is legal, but the increment is defined by where that last mask bit is.</p><p>Let&#39;s say that we want to use the first option, 0. It means that our first subnet allocated for this network with 500 hosts is 10.1.0.0 /23. The next choices are 10.1.2.0 /23 and 10.1.4.0 /23. Each of these networks could have 500+ hosts connected to them. This is the network we could choose for that first 500 hosts subnet. The IP addresses of those hosts are between 10.1.0.1 and 10.1.1.254.</p><p>To find the first host in any subnet&#39;s range, take the last octet (0) and add 1 to it. To find the last host number within a certain range, look to the next subnet, which is 2 in this case, and subtract 1 from it. We do this because we can&#39;t use 255 as a host address in the last octet, so we subtract 1 to get 254.</p><p>300 Hosts 08:53-10:04 Now let&#39;s move on to the second subnet at HQ. There are 300 hosts. We also need the /23 mask for it. The IP addresses begin with 10.1. We have the last two octets to deal with.</p><p>So far, this example is the same as the last example. Our possible subnets are going to be 10.1.0.0 /23 (which we&#39;ve already used for that first segment) and 10.1.2, so we&#39;re incrementing by 2.0 /23 and 1.4.0 /23. We&#39;ve already used this one, so let&#39;s pick the second option. We don&#39;t have to go in order. We could&#39;ve chosen anything; but just for this example, we&#39;ll go in order.</p><p>To find the host range for that subnet, we&#39;ll take the value of the last octet, 0, and add 1. That&#39;s the lowest host number on that subnet range. To find the highest host address, we&#39;ll start with 10.1, look to the next subnet, 4, and subtract 1. This equals 3.</p><p>For the fourth octet, we put the highest allowed number in that octet to complete the IP address. 255 is reserved for the broadcast address, so 254 is the last host address on that subnet.</p><p>100 Hosts 10:04-11:38 The third building at HQ has 100 hosts and a /25 mask. The IP addresses start with 10.1, and the mask is 1 bit into the fourth octet. There&#39;s 24 and then one more, 25.</p><p>The last masked bit in binary is 128. That&#39;s the increment of the subnets. The first subnet we&#39;re using for this network is 10.1, which represents the building. Because we&#39;re not masking the third octet, it could be anything. Let&#39;s leave it at 0 for now. Next, we have the fourth octet, which is important. The increment is 128, but subnet 0 is always allowed. If we had another floor using a /25 mask, we&#39;d use the increment of 128 here. For this range, the host addressing is 10.1.0.1 /25.</p><p>What&#39;s the highest host address we can put in that last octet? Since the subnet is 0, the value of this first bit in the last octet is also 0. If we then 1-fill the rest of the bits in that fourth octet, leaving the last, this yields 126. This is the last host IP in the range. Similarly, if we use 10.1.0.128 as the subnet, we have a 1 as the first bit in the last octet. If we then 1-fill the remaining seven bits, that yields 254. The IP range for this network is 10.1.0.1 (or 129) through 10.1.0.254, or 126 hosts.</p><p>Summary 11:38-12:03 All right, let&#39;s review what we&#39;ve discussed in this video. Remember, you don&#39;t have to use the most efficient masking possible. If you&#39;re using the 10 net, you can subdivide your network into a very large number of subnets without exhausting your address space. But you need to know how VLSM operates and how to find the most efficient masks given a required number of hosts.</p><h2 id="_12-1-6-ipv4-addressing-facts" tabindex="-1"><a class="header-anchor" href="#_12-1-6-ipv4-addressing-facts"><span>12.1.6 IPv4 Addressing Facts</span></a></h2><p>This lesson covers the following topics:</p><ul><li>IPv4 rules and concepts</li><li>IPv4 address structure</li><li>Subnet masks</li><li>Classless Inter-Domain Routing (CIDR)</li><li>Address assignment</li><li>Network Address Translation (NAT) routers</li></ul><h3 id="ipv4-rules-and-concepts" tabindex="-1"><a class="header-anchor" href="#ipv4-rules-and-concepts"><span>IPv4 Rules and Concepts</span></a></h3><p>IP addresses and routers are responsible for sorting and delivering packets to and from clients on a network. Each packet contains the IP address of both the sender and the recipient. Routers use the IP address to send the packets to the specified destination. IPv4 addresses allow hosts to participate on IPv4-based networks.</p><p>The three most important IPv4 address rules are:</p><ul><li>Each host must have a unique IPv4 address.</li><li>Each host on the same logical network must have the same network address.</li><li>Hosts can only communicate directly with other hosts on the same logical network.</li></ul><p>The table below describes IPv4 concepts that you should be aware of.</p><table><thead><tr><th>Concept</th><th>Description</th></tr></thead><tbody><tr><td>Host</td><td> A host (also known as a network host) is a computer or device (such as a router) on a network. </td></tr><tr><td>IP address</td><td> The IP address is a number assigned to identify hosts and other devices on a network. </td></tr><tr><td>Network address</td><td> The network address (also referred to as the network ID) is the portion of the IP address that identifies a specific network. </td></tr><tr><td>Host address</td><td> The host address (also referred to as a host ID) is the remaining portion of the IP address that identifies the specific host or other device on the network. </td></tr><tr><td>Subnet mask</td><td> A subnet mask identifies the portion of the IP address that defines the network address and the portion of the IP address that defines the specific host. </td></tr><tr><td>Address class</td><td> IPv4 addresses are divided into classes. The address class identifies the range of IPv4 addresses and a default subnet mask used for the range. </td></tr><tr><td>Default subnet mask</td><td> A default subnet mask is assigned to Classes A - C as follows: <ul><li> 255.0.0.0 is the default subnet mask for Class A networks. </li><li> 255.255.0.0 is the default subnet mask for Class B networks. </li><li> 255.255.255.0 is the default subnet mask for Class C networks. </li></ul></td></tr><tr><td>Broadcast address</td><td> The broadcast address is the last address in the IP address range and is used to send messages to all hosts on the network. </td></tr><tr><td>Default gateway</td><td> The default gateway is a device that performs routing and enables a host to communicate with hosts on other networks through the routing process. <ul><li> A default gateway address must be configured on each host to allow internetwork communication. Without the default gateway, hosts can only communicate with devices within the same subnet. </li><li> The default gateway address must be on the same subnet as the host computer. <ul><li> Routers have multiple network interface cards attached to multiple networks. </li><li> When configuring the default gateway, choose the address on the local subnet. </li></ul></li></ul></td></tr></tbody></table><h3 id="ip-address-structure" tabindex="-1"><a class="header-anchor" href="#ip-address-structure"><span>IP Address Structure</span></a></h3><p>An IPv4 network address is a grouping of four numbers. Each number in the group is separated by a period (referred to as a dot). IPv4 addresses can be represented in the following ways:</p><ul><li> Decimal notation: <br> In decimal notation, each of the four numbers must be between 0 and 255. <br><br> Example: 131.107.2.200 (spoken as 137 dot 107 dot 2 dot 200). <br></li><li> Binary notation: <br> In binary notation, each of the four numbers is an octet (consisting of 8 bits). Each bit is either a 1 or a 0. <br><br> Example: 10000011.01101011.00000010.11001000 </li></ul><p>On occasion, such as when working with subnet masks, you may need to convert an IP address from a binary value to decimal (or vice versa). Therefore, it is important to understand that each bit position in a binary octet is assigned a decimal value, as shown in the following table:</p><blockquote><table><thead><tr><th>8-Bit Octet</th></tr></thead><tbody><tr><td align="center">Bit position</td><td align="center">7</td><td align="center">6</td><td align="center">5</td><td align="center">4</td><td align="center">3</td><td align="center">2</td><td align="center">1</td><td align="center">0</td></tr><tr><td align="center">Decimal value</td><td align="center">128</td><td align="center">64</td><td align="center">32</td><td align="center">16</td><td align="center">8</td><td align="center">4</td><td align="center">2</td><td align="center">1</td></tr></tbody></table></blockquote><p>To convert from binary to decimal, add the decimal equivalent for each bit position containing the binary value of 1. For example, the decimal equivalent of 10010101 is 128 + 16 + 4 + 1 = 149. This concept is sometimes easier to see in a table:</p><blockquote><table><tbody><tr><td bgcolor="#EFEFEF" style="color:#f96302;border-right-color:#cccccc;border-right-width:1px;"><b class="fw-bold">Decimal value for each bit</b></td><td style="border-left-color:#cccccc;border-left-width:1px;"> 128 </td><td>64</td><td>32</td><td>16</td><td>8</td><td>4</td><td>2</td><td>1</td></tr><tr><td bgcolor="#EFEFEF" style="color:#f96302;border-right-color:#cccccc;border-right-width:1px;"><b class="fw-bold">Binary value for each bit</b></td><td align="center" style="border-left-color:#cccccc;border-left-width:1px;"> 1 </td><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">1</td></tr></tbody></table><table><tbody><tr><td bgcolor="#EFEFEF" style="color:#f96302;border-right-color:#cccccc;border-right-width:1px;"><b class="fw-bold">Decimal values</b></td><td align="center" style="border-left-color:#cccccc;border-left-width:1px;"> 128 + 16 + 4 + 1 = 149 </td></tr></tbody></table></blockquote><h3 id="subnet-masks" tabindex="-1"><a class="header-anchor" href="#subnet-masks"><span>Subnet Masks</span></a></h3><p>A subnet mask identifies which portion of the IP address represents the network and, consequently, which portion represents the host address. The structure of a subnet mask is identical to that of an IP address.</p><ul><li>In binary form, the subnet mask is always a series of 1s followed by a series of 0s (1s and 0s are never mixed in sequence in the mask).</li><li>In decimal form, each number that is part of the network has a value of 255. For example, 255.255.255.0 means that the first three numbers (octets) are reserved for the network portion of an IP address. <br> When using complex subnet masks, the last number of the network portion may be any number, as long as that number converted to binary is made of all 1s followed by all 0s. For example, a decimal subnet mask of 255.255.255.240 converted to binary is 11111111.11111111.11111111.11110000. In this address, the first four bits of the last octet are part of the network address.</li></ul><h3 id="classless-inter-domain-routing-cidr" tabindex="-1"><a class="header-anchor" href="#classless-inter-domain-routing-cidr"><span>Classless Inter-Domain Routing (CIDR)</span></a></h3><p>Classless Inter-Domain Routing (CIDR) is a method by which all of the bits used for the subnet mask are written in a single decimal number. For example, when an IP address is written as 10.10.1.16 /16, the /16 is the CIDR. The /16 indicates that the first two octets (8-bits + 8-bits = /16) are used for the network address.</p><p>CIDR notation is most useful when one of the network octets does not comprise the entire octet. For example, when an IP address is written as 10.10.1.16 /18, the /18 indicates that part of the third octet is used as part of the network address (8-bits + 8-bits + 2-bits = /18).</p><p>The following table shows the default address class for each IPv4 address range with its default subnet mask (also represented in CIDR notation).</p><table><thead><tr><th>Class</th><th>Address Range</th><th>First Octet Range</th><th>Default Subnet Mask</th><th>CIDR Notation</th></tr></thead><tbody><tr><td align="center">A</td><td>1.0.0.0 to 126.255.255.255</td><td align="center"> 1-126 <br> (00000001--01111110 binary) </td><td align="center">255.0.0.0</td><td align="center">/8</td></tr><tr><td align="center">B</td><td>128.0.0.0 to 191.255.255.255</td><td align="center"> 128-191 <br> (10000000--10111111 binary) </td><td align="center">255.255.0.0</td><td align="center">/16</td></tr><tr><td align="center">C</td><td>192.0.0.0 to 223.255.255.255</td><td align="center"> 192-223 <br> (11000000--11011111 binary) </td><td align="center">255.255.255.0</td><td align="center">/24</td></tr><tr><td align="center">D</td><td>224.0.0.0 to 239.255.255.255</td><td align="center"> 224-239 <br> (11100000--11101111 binary) </td><td align="center">n/a</td><td align="center">n/a</td></tr><tr><td align="center">E</td><td>240.0.0.0 to 255.255.255.255</td><td align="center"> 240-255 <br> (11110000--11111111 binary) </td><td align="center">n/a</td><td align="center">n/a</td></tr></tbody></table><p>When using CIDR notation, you must know how to find your subnet mask. When you find the subnet mask, you will know which bits are available for the network address. To convert a CIDR to a subnet mask, use the following steps:</p><ol><li>If the CIDR is greater than or equal to 8, write 255 in the first available octet (on the left) and then subtract 8 from the CIDR.</li><li>Repeat step 1 until the number is less than 8. The octets found using these first two steps will be the first part of your subnet mask.</li><li>Convert the remaining number (which will be less than 8) to 1s, and pad the remaining bits (up to 8) with 0. This will be the last octet in your subnet mask. <br> Examples: If the remaining number is: <ul><li>3 - the converted number is written as 11100000</li><li>5 - the converted number is written as 11111000</li><li>7 - the converted number is written as 11111110</li></ul></li><li>Convert the 1s in the last (interesting) octet to a decimal number. This number is the subnet mask for this octet. <br> Examples: <ul><li>11100000 = 224</li><li>11111000 = 248</li><li>11111110 = 254</li></ul></li><li>Any unused octets are represented with a 0.</li></ol><p>CIDR conversion example: IP address /CIDR = 196.200.45.5 /20</p><ol><li> Find simple subnet mask octets: <ol type="a"><li> 20 - 8 = 12. 12 is greater than 8. So, the second octet is 255. So far, our subnet mask is 255.255. </li><li>12 -8 = 4. 4 is less than 8. So, move to the next step.</li></ol></li><li> The number 4 is changed to four 1s with the remaining bits for this octet padded with 0s: 111100000. </li><li> 11110000 converted to decimal equals 240. So, the third octet of the subnet mask is 240. </li><li>As a result, the full subnet mask is 255.255.240.0.</li></ol><h3 id="address-assignment" tabindex="-1"><a class="header-anchor" href="#address-assignment"><span>Address Assignment</span></a></h3><p>The following table describes options for assigning IPv4 addresses and other IPv4 configuration values.</p>',109),e("table",null,[e("thead",null,[e("tr",null,[e("th",null,"Method"),e("th",null,"Uses")])]),e("tbody",null,[e("tr",null,[e("td",null,[t(" Dynamic Host Configuration Protocol "),e("br"),t(" (DHCP) ")]),e("td",null,[t(" DHCP is a method used to automatically assign IPv4 addresses and other TCP/IPv4 configuration parameters to hosts. Client computers contact a DHCP server to receive TCP/IPv4 configuration information. "),e("p",null,"Use DHCP:"),e("ul",null,[e("li",null,"For small, medium, or large networks."),e("li",null,"For automatic host configuration."),e("li",null," To automatically deliver additional configuration parameters such as default gateway and DNS servers. ")]),e("p",null," By default, all Windows computers try to use DHCP for TCP/IPv4 configuration information. ")])]),e("tr",null,[e("td",null,[t(" Automatic Private IPv4 Addressing "),e("br"),t(" (APIPA) ")]),e("td",null,[t(" APIPA is an automatic configuration method where hosts automatically select their own IPv4 address within a specific range. "),e("p",null,"When using APIPA:"),e("ul",null,[e("li",null," Windows computers will use APIPA if a DHCP server cannot be contacted. "),e("li",null," Hosts select an IPv4 address in the 169.254.0.1 to 169.254.255.255 range with a mask of 255.255.0.0. After choosing the address, the host verifies that no other host on the network is using the selected address. "),e("li",null," APIPA sets only the IPv4 address and mask. Because it does not assign a default gateway, APIPA can be used on a single subnet, but cannot be used if communication with other subnets is required. ")]),e("p",null," Use APIPA for small single-subnet networks that do not use DNS servers or do not have internet or connectivity outside of the local subnet. ")])]),e("tr",null,[e("td",null,"Static (manual) assignment"),e("td",null,[t(" Static/manual IPv4 address assignment means that you manually enter in the required IPv4 address and associated IP information for a host. "),e("ul",null,[e("li",null," When you configure a static IPv4 address, you must also configure the subnet mask and default gateway. "),e("li",null," When you configure a static IPv4 address, you disable DHCP and APIPA. "),e("li",null," If you use DHCP, you can also assign DNS server addresses manually. ")]),e("p",null,"Use static addressing:"),e("ul",null,[e("li",null,"For small networks that do not often change or grow."),e("li",null," If your network does not have a DHCP server or if you want to eliminate DHCP traffic from your network. "),e("li",null," For specific hosts that must have the same address each time (such as servers). You can use DHCP on the rest of the network and use static addressing for only a few hosts. However, before you use static addressing, explore the possibility of using a DHCP server to assign the same IPv4 address to specific hosts each time an address is requested. "),e("li",null," For non-DHCP hosts (hosts that cannot accept an IPv4 address from DHCP). ")]),e("div",null,[e("div",null,[e("div",null,[e("div",{class:"to-icon large","aria-hidden":"true",style:{width:"20px"}},[e("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"fal","data-icon":"circle-info",class:"svg-inline--fa fa-circle-info",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"},[e("path",{fill:"currentColor",d:"M256 32a224 224 0 1 1 0 448 224 224 0 1 1 0-448zm0 480A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM208 352c-8.8 0-16 7.2-16 16s7.2 16 16 16l96 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0-112c0-8.8-7.2-16-16-16l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l24 0 0 96-32 0zm48-168a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"})])]),e("div",{class:"to-info-box-body-content"},[e("span",null,"Ensure that duplicate addresses are not assigned to hosts on the same network.")])])])])])]),e("tr",null,[e("td",null,"Alternate IPv4 configuration"),e("td",null,[t(" When an alternate IPv4 configuration is enabled, the host attempts to use DHCP for TCP/IPv4 configuration information. If a DHCP server cannot be contacted, the alternate IPv4 values are used. "),e("p",null,"Use an alternate configuration:"),e("ul",null,[e("li",null," For computers (such as a laptop) that connect to two networks: one with a DHCP server and another without a DHCP server. "),e("li",null," To provide values to properly configure the computer in the event that the DHCP server is unavailable. ")]),e("div",null,[e("div",null,[e("div",null,[e("div",{class:"to-icon large","aria-hidden":"true",style:{width:"20px"}},[e("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"fal","data-icon":"circle-info",class:"svg-inline--fa fa-circle-info",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"},[e("path",{fill:"currentColor",d:"M256 32a224 224 0 1 1 0 448 224 224 0 1 1 0-448zm0 480A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM208 352c-8.8 0-16 7.2-16 16s7.2 16 16 16l96 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0-112c0-8.8-7.2-16-16-16l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l24 0 0 96-32 0zm48-168a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"})])]),e("div",{class:"to-info-box-body-content"},[e("span",null,"When you configure an alternate IPv4 address, APIPA will never be used.")])])])])])])])],-1),e("h3",{id:"network-address-translation-nat-routers",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#network-address-translation-nat-routers"},[e("span",null,"Network Address Translation (NAT) Routers")])],-1),e("p",null,"A Network Address Translation (NAT) router translates multiple private addresses into a single registered IP address.",-1),e("ul",null,[e("li",null," The internet is classified as a public network. All devices on the public network must have a unique registered IP address. This address is assigned by the ISP. No two hosts on a public network can have the same IP address. "),e("li",null," The internal network is classified as a private network. All devices on the private network use private IP addresses internally, but share the public IP address when accessing the internet. "),e("li",null," A NAT router associates a port number with each private IP address. Port assignments are made automatically by the NAT router. Communications from the internet are sent to the public IP address. The NAT router translates the public IP address into the private IP address of the host. "),e("li",null," The Internet Assigned Number Authority (IANA) controls and issues public addressing. "),e("li",null,[t(" A private network can use addresses in the following ranges that have been reserved for private use by IANA: "),e("ul",null,[e("li",null,"10.0.0.0 to 10.255.255.2555"),e("li",null,"172.16.0.0 to 172.31.255.255"),e("li",null,[t(" 192.168.0.0 to 192.168.255.255 "),e("div",null,[e("div",{class:"to-info-box"},[e("div",{class:"to-info-box-body"},[e("div",{class:"to-icon large","aria-hidden":"true",style:{width:"20px"}},[e("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"fal","data-icon":"circle-info",class:"svg-inline--fa fa-circle-info",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"},[e("path",{fill:"currentColor",d:"M256 32a224 224 0 1 1 0 448 224 224 0 1 1 0-448zm0 480A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM208 352c-8.8 0-16 7.2-16 16s7.2 16 16 16l96 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0-112c0-8.8-7.2-16-16-16l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l24 0 0 96-32 0zm48-168a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"})])]),e("div",{class:"to-info-box-body-content"},[e("span",null,[e("p",null,"By default, internet routers are configured not to route private IP addresses.")])])])])])])])])],-1),s('<h2 id="_12-1-7-common-ports" tabindex="-1"><a class="header-anchor" href="#_12-1-7-common-ports"><span>12.1.7 Common Ports</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>Common Ports 00:00-00:32 To effectively manage a network-to-Linux system, you must know and understand IP ports. But what exactly is an IP port? In terms of the IP protocol, it&#39;s a logical connection created by either TCP or UDP for some upper-layer application. Ports allow a single host with a single IP address to provide multiple network services. Each service uses the same IP address but operates using a different TCP or UDP port number.</p><p>Example 00:32-01:36 For example, here we have a network server that&#39;s running with a single IP address assigned to it—10.0.0.1. Let&#39;s just assume that it&#39;s a Linux server. We could configure multiple network services on it, or we could install a web server and an FTP server since both run at the same time on the same hardware and on the same operating system.</p><p>Each of these services listens for network requests coming in on the same network interface, which has the one IP address assigned to it—again, that&#39;s 10.0.0.1. When a request comes in on the network for a particular network resource, how does the Linux OS tell whether that request is supposed to go to the web server or the FTP server?</p><p>Well, the servers run on different ports. The web server runs on port 80, and the FTP server runs on ports 20 and 21. So any network request coming in on the network from a client—say this one right here, addressed to port 80—lets the operating system know that it goes through the web service because that&#39;s the service listening on port 80.</p><p>Port Overview 01:36-02:07 Let&#39;s suppose this other system down here sends a network request to the same IP address, but it&#39;s being sent to port 20 or 21. When that request arrives, the operating system knows that it goes through the FTP service because that&#39;s the service listening for requests on those ports.</p><p>Before we go on, understand that FTP is somewhat unique in using two ports. Most network services use just one. There are only a few that use two and even fewer that use three, which we&#39;ll talk about in just a second.</p><p>Well-Known Ports 02:07-06:01 Considering this, let&#39;s learn the various categories used to organize IP ports. A port number can range from a value of 0 to 65,535. The way these ports are used is regulated by the Internet Corporation for Assigned Names and Numbers, which we affectionately call ICANN. They lump all these available IP ports into three different categories.</p><p>The first one is well-known ports. These are reserved for specific services. Just remember, if you see well-known, it means reserved ports. They begin at 0 and end at 1,023. Some of the more frequently used well-known ports are listed here. As we just talked about, ports 20 and 21 are used by the FTP service. Port 22 is reserved for the Secure Shell protocol, or SSH, to establish remote connections over a network.</p><p>Port 23 is reserved for Telnet, which performs a similar function as SSH, just without any security involved. Port 25 is used by the Simple Mail Transfer protocol. It sends emails from your client to the mail server, and it also sends messages between email servers on the internet.</p><p>Port 53 is used by the DNS protocol to resolve hostnames to IP addresses. As we talked about a second ago, port 80 is used by web servers, which use the HTTP protocol. Port 110 is reserved for the POP3 protocol, which is used to download email messages from an email server to an email client application.</p><p>Port 123 is used by the Network Time Protocol, or NTP. It synchronizes time between multiple systems over a network connection. Ports 137, 138, and 139 are used by Microsoft&#39;s NetBIOS protocol. They&#39;re also used by the SMB protocol, which is implemented on Linux to make it compatible with Microsoft systems. That&#39;s why they&#39;re the same port numbers.</p><p>Port 143 is used by IMAP, which functions in a similar manner to POP3. It downloads and sends email messages. Ports 161 and 162 are used by the Simple Network Management Protocol. It monitors systems on the network to see what their status is and how well they&#39;re functioning.</p><p>Port 389 is used by the Lightweight Directory Access Protocol, or LDAP. It communicates with an LDAP directory service. Port 443 is used by web servers as well, but it&#39;s a special port for secure communications between a web browser and a web server. This is done with HTTPS. Regular HTTP transmits data insecurely as cleartext—in other words, anybody can read it if they catch the packets. HTTPS uses TLS to encrypt that data so that even if you capture it, you can&#39;t read it.</p><p>Port 465 is used by SMTPS, or Simple Mail Transfer Protocol Secure. It&#39;s basically the same thing as SMTP except that it&#39;s encrypted. By default, SMTP sends your emails in a way that anybody can read them. But SMTPS encrypts your data similar to HTTPS.</p><p>Port 514 is used by the syslog daemon to send log messages remotely over the network to a log server. Port 636 is used for the Lightweight Directory Access Protocol. But it&#39;s a secure connection. Port 389 up here transmits data between the LDAP client and the LDAP service unsecurely. All the data is sent cleartext, including passwords and usernames, which isn&#39;t good. It&#39;s better to encrypt that data using port 636 and LDAPS.</p><p>Likewise, port 993 is reserved for the secure version of IMAP. It also downloads email messages from a mail server to your mail client, but it does so with encryption—same thing for port 995. It&#39;s reserved for POP3S, which is the secure version of POP3.</p><p>Registered Ports 06:01-06:32 In addition to well-known ports, there are also registered ports. ICANN has reserved ports 1,024 through 49,151 for special implementations. Basically, an organization can create their own network service and then apply for a registered port number for it. For example, a software company could write a new network application and then apply for a specific port to be reserved for use with their particular network application. This prevents anybody else from using that same port.</p><p>Dynamic Ports 06:32-07:45 Finally, there&#39;s a free-for-all range called dynamic ports—also called private ports. They range from port 49,152 all the way to the end—65,535. They&#39;re available for use by any network service. They&#39;re frequently used by network services that need to establish a temporary connection.</p><p>For example, here we have a client system that needs to communicate with the server system over here. Using dynamic ports, these two systems will negotiate with each other and say, &quot;Hey, we need to set up a port to talk.&quot; They know by default that they can&#39;t use a registered port or a well-known port. So each system will look at which ones are currently available on both sides and negotiate the port they want to use.</p><p>For example, they may determine that, &quot;Hey, neither one of us is using 49,153. Let&#39;s go ahead and use that one.&quot; Then the client and server use that port during the communication session. After that session is over, the port is closed and no longer in use. That&#39;s why we call them dynamic. They&#39;re allocated when the connection is set up, but once the session is done, the connection is broken. The ports become unallocated again, and they can be used by another communication session if needed.</p><p>Summary 07:45-08:08 Okay, that&#39;s it for this lesson. In this lesson, we talked about the three different port categories. We talked about well-known ports, which have specific numbers assigned to them. We also talked about registered ports, and we ended this lesson by going over dynamic ports. Now you should have a better understanding of how ports work on a Linux system.</p><h2 id="_12-1-8-ip-port-facts" tabindex="-1"><a class="header-anchor" href="#_12-1-8-ip-port-facts"><span>12.1.8 IP Port Facts</span></a></h2><p>Network ports are logical connections provided by the TCP or UDP protocols. The IP protocol stack uses port numbers to determine the protocol that incoming traffic should be directed to.</p><p>This lesson covers the following topics:</p><ul><li>Port characteristics</li><li>ICANN ports</li><li>Well-known internet services ports</li></ul><h3 id="port-characteristics" tabindex="-1"><a class="header-anchor" href="#port-characteristics"><span>Port Characteristics</span></a></h3><p>Ports have the following characteristics:</p><ul><li>Ports allow a single host with a single IP address to run network services. Each port number is associated with a particular service.</li><li>Each host can have over 65,000 ports per IP address.</li><li>Port use is regulated by the Internet Corporation for Assigning Names and Numbers (ICANN).</li><li>On Linux systems, <b class="fw-bold">/etc/services</b> lists all network services on the system, including the port assigned to the service. Most applications reference <b class="fw-bold">/etc/services</b> to determine which service is using a specific TCP/UDP port.</li></ul>',30),e("div",{class:"to-info-box-body"},[e("div",{class:"to-icon large","aria-hidden":"true",style:{width:"20px"}},[e("svg",{"aria-hidden":"true",focusable:"false","data-prefix":"fal","data-icon":"circle-info",class:"svg-inline--fa fa-circle-info",role:"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"},[e("path",{fill:"currentColor",d:"M256 32a224 224 0 1 1 0 448 224 224 0 1 1 0-448zm0 480A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM208 352c-8.8 0-16 7.2-16 16s7.2 16 16 16l96 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0-112c0-8.8-7.2-16-16-16l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l24 0 0 96-32 0zm48-168a24 24 0 1 0 0-48 24 24 0 1 0 0 48z"})])]),e("div",{class:"to-info-box-body-content"},[e("span",null,"To protect a server, ensure that only the necessary ports are opened. For example, if a server is being used only for email, you should shut down ports that correspond to FTP, DNS, and HTTP.")])],-1),s('<h3 id="icann-ports" tabindex="-1"><a class="header-anchor" href="#icann-ports"><span>ICANN Ports</span></a></h3><p>ICANN specifies three categories of ports:</p><ul><li>Well-known ports range from 0 to 1023 and are assigned to common protocols and services.</li><li>Registered ports range from 1024 to 49151 and are assigned by ICANN to a specific service.</li><li>Dynamic (also called private or high) ports range from 49,152 to 65,535 and can be used by any service on an ad hoc basis. Ports are assigned when a session is established and released when the session ends.</li></ul><h3 id="well-known-internet-services-ports" tabindex="-1"><a class="header-anchor" href="#well-known-internet-services-ports"><span>Well-Known Internet Services Ports</span></a></h3><p>The following table lists the well-known ports that correspond to common internet services:</p><table><thead><tr><th>Port(s)</th><th>Service</th></tr></thead><tbody><tr><td> 20 TCP <br> 21 TCP </td><td>File Transfer Protocol (FTP)</td></tr><tr><td>22 TCP and UDP</td><td>Secure Shell (SSH)</td></tr><tr><td>23 TCP</td><td>Telnet</td></tr><tr><td>25 TCP</td><td>Simple Mail Transfer Protocol (SMTP)</td></tr><tr><td>53 TCP and UDP</td><td>Domain Name Server (DNS)</td></tr><tr><td> 67 UDP <br> 68 UDP </td><td>Dynamic Host Configuration Protocol (DHCP)</td></tr><tr><td>69 UDP</td><td>Trivial File Transfer Protocol (TFTP)</td></tr><tr><td>80 TCP</td><td>HyperText Transfer Protocol (HTTP)</td></tr><tr><td>110 TCP</td><td>Post Office Protocol (POP3)</td></tr><tr><td>119 TCP</td><td>Network News Transport Protocol (NNTP)</td></tr><tr><td>123 UDP</td><td>Network Time Protocol (NTP)</td></tr><tr><td> 137 UDP <br> 138 UDP <br> 139 TCP </td><td>NetBIOS</td></tr><tr><td>143 TCP and UDP</td><td>Internet Message Access Protocol (IMAP4)</td></tr><tr><td> 161 TCP and UDP <br> 162 TCP and UDP </td><td>Simple Network Management Protocol (SNMP)</td></tr><tr><td>389 TCP and UDP</td><td>Lightweight Directory Access Protocol</td></tr><tr><td>443 TCP and UDP</td><td>HTTP with Secure Sockets Layer (SSL)</td></tr><tr><td>465 TCP</td><td>Simple Mail Transfer Protocol over TLS/SSL (SMTPS)</td></tr><tr><td>514 UDP</td><td>Syslog (used for remote system logging)</td></tr><tr><td>636 TCP and UDP</td><td>Lightweight Directory Access Protocol over TLS/SSL (LDAPS)</td></tr><tr><td>993 TCP</td><td>Internet Message Access Protocol over TLS/SSL (IMAPS)</td></tr><tr><td>995 TCP</td><td>Post Office Protocol 3 over TLS/SSL (POP3S)</td></tr></tbody></table>',6)]))}const c=n(i,[["render",l],["__file","01.html.vue"]]),u=JSON.parse('{"path":"/12/01.html","title":"Section 12.1 IPv4 Overview","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Section 12.1 IPv4 Overview","description":"some description"},"headers":[{"level":2,"title":"12.1.1 IP Protocols","slug":"_12-1-1-ip-protocols","link":"#_12-1-1-ip-protocols","children":[]},{"level":2,"title":"12.1.2 IP Protocol Facts","slug":"_12-1-2-ip-protocol-facts","link":"#_12-1-2-ip-protocol-facts","children":[{"level":3,"title":"Protocols","slug":"protocols","link":"#protocols","children":[]},{"level":3,"title":"Protocols in the IP Protocol Suite","slug":"protocols-in-the-ip-protocol-suite","link":"#protocols-in-the-ip-protocol-suite","children":[]}]},{"level":2,"title":"12.1.3 IPv4 Addressing","slug":"_12-1-3-ipv4-addressing","link":"#_12-1-3-ipv4-addressing","children":[]},{"level":2,"title":"12.1.4 Subnet Masks","slug":"_12-1-4-subnet-masks","link":"#_12-1-4-subnet-masks","children":[]},{"level":2,"title":"12.1.5 Variable Length Subnet Masking (VLSM)","slug":"_12-1-5-variable-length-subnet-masking-vlsm","link":"#_12-1-5-variable-length-subnet-masking-vlsm","children":[]},{"level":2,"title":"12.1.6 IPv4 Addressing Facts","slug":"_12-1-6-ipv4-addressing-facts","link":"#_12-1-6-ipv4-addressing-facts","children":[{"level":3,"title":"IPv4 Rules and Concepts","slug":"ipv4-rules-and-concepts","link":"#ipv4-rules-and-concepts","children":[]},{"level":3,"title":"IP Address Structure","slug":"ip-address-structure","link":"#ip-address-structure","children":[]},{"level":3,"title":"Subnet Masks","slug":"subnet-masks","link":"#subnet-masks","children":[]},{"level":3,"title":"Classless Inter-Domain Routing (CIDR)","slug":"classless-inter-domain-routing-cidr","link":"#classless-inter-domain-routing-cidr","children":[]},{"level":3,"title":"Address Assignment","slug":"address-assignment","link":"#address-assignment","children":[]},{"level":3,"title":"Network Address Translation (NAT) Routers","slug":"network-address-translation-nat-routers","link":"#network-address-translation-nat-routers","children":[]}]},{"level":2,"title":"12.1.7 Common Ports","slug":"_12-1-7-common-ports","link":"#_12-1-7-common-ports","children":[]},{"level":2,"title":"12.1.8 IP Port Facts","slug":"_12-1-8-ip-port-facts","link":"#_12-1-8-ip-port-facts","children":[{"level":3,"title":"Port Characteristics","slug":"port-characteristics","link":"#port-characteristics","children":[]},{"level":3,"title":"ICANN Ports","slug":"icann-ports","link":"#icann-ports","children":[]},{"level":3,"title":"Well-Known Internet Services Ports","slug":"well-known-internet-services-ports","link":"#well-known-internet-services-ports","children":[]}]}],"git":{"updatedTime":1736823478000},"filePathRelative":"12/01.md"}');export{c as comp,u as data};
