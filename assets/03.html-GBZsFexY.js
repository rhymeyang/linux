import{_ as t,c as n,a as i,o}from"./app-1gerZY4a.js";const a="/linux/images/12/nmtui-initial.png",s="/linux/images/12/nmtui-edit.png",r="/linux/images/12/nmtui-activate.png",l={};function c(h,e){return o(),n("div",null,e[0]||(e[0]=[i('<p>As you study this section, answer the following questions:</p><ul><li>What is the main purpose of using NetworkManager?</li><li>Which connection types can NetworkManager work with?</li><li>What are two common tools used to configure Linux systems?</li><li>What is the main difference between the nmcli utility and the nmtui utility?</li></ul><p>In this section, you will learn to:</p><ul><li>Use NetworkManager</li></ul><p>This section helps you prepare for the following certification exam objectives:</p><table class="objectives"><thead><tr><th>Exam</th><th>Objective</th></tr></thead><tbody><tr><td>TestOut Linux Pro</td><td> 3.1 Configure networking <ul><li>Configure IP addresses</li></ul></td></tr><tr><td>CompTIA Linux+ XK0-005</td><td> 1.5 Given a scenario, use the appropriate networking tools or configuration files <ul><li> Interface management <ul><li>NetworkManager</li><li>nmcli</li></ul></li></ul></td></tr></tbody></table><h2 id="_12-3-1-introduction-to-networkmanager" tabindex="-1"><a class="header-anchor" href="#_12-3-1-introduction-to-networkmanager"><span>12.3.1 Introduction to NetworkManager</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>Using Network Manager 00:00-00:21 We are going to look at using the NetworkManager graphical user interface, or GUI, in Ubuntu 20.04. NetworkManager is a system service for managing network devices and connections. Its purpose is to keep network connections active while they are available.</p><p>Connection Types 00:21-00:30 NetworkManager can be used to manage Ethernet, Wi-Fi, and mobile broadband devices, and also provides and manages VPN connections.</p><p>Netplan vs. Network Manager 00:30-01:30 Ubuntu Desktop defaults to using the NetworkManager GUI when installed. Ubuntu Server installations use the systemd-networkd and netplan services when installed. netplan does not provide a GUI and is managed by directly editing configuration files, since typical server installations don&#39;t have a GUI. NetworkManager is installed on top of the systemd-networkd and netplan services. This creates a netplan configuration file that sets NetworkManager as the default network service.</p><p>There are commands to configure NetworkManager from the terminal, however it&#39;s common practice to use the NetworkManager GUI. The GUI is accessed through the settings application in the Network menu. It&#39;s typically configured to use DHCP automatically and won&#39;t need to be configured to work. Here we see the different hardware connections available on our systems and can configure VPNs or proxies.</p><p>Summary 01:30-01:45 In this lesson we identified the different types of connections that can be managed by the NetworkManager service and we looked at the differences between netplan and NetworkManager.</p><h2 id="_12-3-2-using-networkmanager" tabindex="-1"><a class="header-anchor" href="#_12-3-2-using-networkmanager"><span>12.3.2 Using NetworkManager</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>Using Network Manager 00:00-00:20 Network Manager is a utility that aids in c network configuration. Previous Linux administrators used ifcfg-type configuration files, which required manual editing. This method is still supported on most Linux distributions if you prefer manual configuration.</p><p>Graphical Utility 00:20-02:09 All right. First, we&#39;re going to take a look at the graphical utility nmtui. If we type this command and press Enter, we&#39;re presented with three options: edit a connection, activate a connection, and set the system host name.</p><p>Usually, you&#39;ll have at least one network interface enabled upon Linux installation. During installation, there&#39;s an option to statically set some network configuration, or you can do it later, like we&#39;re doing in this utility. When we edit a connection, we&#39;re presented with a list of network adapters installed on your system. We only have one, so let&#39;s select this one. Here, we have our device name and MAC address listed on the top. Right below that, we have our IPV4 and IPV6 configuration. The automatic mode is DHCP. Let&#39;s say we want to give this a static address, since it will be a file server. In order to do that, we need to change the Automatic to Manual. Next, we can add our address, which is 192.168.1.100/24. In this case, we&#39;re adding the bits for the subnet mask instead of manually typing 255.255.255.0. Our gateway is 192.168.1.1, and DNS server is 8.8.8.8.</p><p>Since we&#39;re going to use IPV4, we&#39;re going to change the IPv6 configuration to Disabled. Now that our settings are set, we can select OK. If we quit out of this menu and type ip a, we can see that our address is not what we defined. This is because the network card needs to be cycled. If we go back into nmtui and go to Activate a connection, we can deactivate and activate this connection to update the network configuration. Let&#39;s quite this and type ip a again. Now we can see the IP address we defined.</p><p>Command Line Utility 02:09-04:11 Okay. Let&#39;s say we want to update our network configuration for a new network. We&#39;re going to use the command line utility called nmcli. If we were to just type nmcli, it would show us our network configuration and some examples. The preferred method for viewing your network connections is nmcli con show. You could spell out connection fully, like nmcli connection show, but they&#39;ve allowed abbreviated commands to make it easier.</p><p>In order to modify a connection, we have to incorporate the mod option into nmcli. So, let&#39;s set our IP address by typing sudo nmcli con mod eth0 ipv4.addresses 192.168.2.100/24. Next, we&#39;ll configure our gateway, sudo nmcli con mod eth0 ipv4.gateway 192.168.2.1. And lastly, we&#39;ll set up our dns server, sudo nmcli con mod eth0 ipv4.dns 8.8.8.8. Just to make sure this is set to manual and not automatic, we also need to run sudo nmcli con mod eth0 ipv4.method manual.</p><p>Our settings are ready, so let&#39;s save using sudo nmcli con up eth0. This may seem complicated, but once you understand the convention, it doesn&#39;t take long to get used to it. The command will always use nmcli con followed by a mod or show, depending on whether you&#39;re modifying or showing the current configuration. eth0 is the name of the network adapter. Next, you need to tell it what entry you&#39;re modifying, such as ipv4.addresses or ipv4.dns. The commands are similar for ipv6.</p><p>Finally, if we type ip a, we can see the new network configuration defined. If you wanted to view more options available for nmcli, you can always type man nmcli to view all available options for this command.</p><p>Summary 04:11-04:26 That&#39;s it for this demo. In this demo, we reviewed how to configure network settings with nmtui. Then we modified the same settings using the command line utility nmcli.</p><h2 id="_12-3-3-networkmanager-facts" tabindex="-1"><a class="header-anchor" href="#_12-3-3-networkmanager-facts"><span>12.3.3 NetworkManager Facts</span></a></h2><p>Instead of using the ifcfg-type configuration files like previous Linux versions, most modern Linux distributions have switched to other tools. One of the more common tools is NetworkManager, which is very popular on desktop versions of Linux. In this lesson, we&#39;ll discuss two of the primary tools we can use to configure Linux systems from the command line.</p><p>This lesson covers the following topics:</p><ul><li>The nmtui utility</li><li>The nmcli utility</li></ul><h3 id="the-nmtui-utility" tabindex="-1"><a class="header-anchor" href="#the-nmtui-utility"><span>The nmtui Utility</span></a></h3><p>Although there is a graphical interface for configuring NetworkManager, using it to work with network settings is very similar to other graphical tools found on other operating systems. For that reason, we won&#39;t discuss it in detail in this lesson.</p><p>The NetworkManager Text User Interface, or nmtui, is a pseudo graphical interface. It&#39;s launched in a shell and uses hotkeys and the arrow and Enter keys to manipulate network settings. This includes capabilities to change:</p><ul><li>IPv4 and IPv6 addresses</li><li>IPv4 and IPv6 routes</li><li>DNS settings</li><li>The hostname configuration</li></ul><p><img src="'+a+'" alt="nmtui Initial Screen"></p><p><img src="'+s+'" alt="nmtui Editing Connection"></p><p>After making changes to a setting in the nmtui tool, you&#39;ll frequently need to &quot;reactivate&quot; the connection, which is easily done from within the tool itself. Essentially, this &quot;reactivation&quot; is just cycling the affected devices down and then back up again.</p><p><img src="'+r+'" alt="nmtui Reactivate Connection"></p><h3 id="the-nmcli-utility" tabindex="-1"><a class="header-anchor" href="#the-nmcli-utility"><span>The nmcli Utility</span></a></h3><p>In addition to the nmtui tool for manipulating NetworkManager settings, there&#39;s also a command line-only tool named nmcli that we can use to modify the same settings. By having access to this utility, administrators can make configurations using shell scripts that leverage nmcli.</p><table><thead><tr><th>Utility</th><th>Commands</th><th>Description</th></tr></thead><tbody><tr><td>nmcli</td><td><b>nmcli -t -f RUNNING general</b><h2>nmcli general</h2><b>nmcli status</b><h2>nmcli con show</h2><b>nmcli hostname</b><h2>nmcli general hostname &lt;newhostname&gt;</h2><b>nmcli con add con-name eth2 type ethernet ifname eth2 ipv4.methodauto</b><h2> nmcli con mod eth2 ipv4.method manual ipv4.address 192.168.82.5/24 ipv4.gateway 192.168.82.1 </h2></td><td> Checks whether NetworkManager is running <p>Shows the state of connections</p> Lists devices and their statuses <p>Lists available connections</p> Displays the hostname <p>Updates the hostname</p> Creates a new Ethernet connection that uses DHCP <p>Reconfigures a connection from DHCP to a static IP address</p></td></tr></tbody></table>',39)]))}const u=t(l,[["render",c],["__file","03.html.vue"]]),m=JSON.parse('{"path":"/12/03.html","title":"Section 12.3 NetworkManager","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Section 12.3 NetworkManager","description":"some description"},"headers":[{"level":2,"title":"12.3.1 Introduction to NetworkManager","slug":"_12-3-1-introduction-to-networkmanager","link":"#_12-3-1-introduction-to-networkmanager","children":[]},{"level":2,"title":"12.3.2 Using NetworkManager","slug":"_12-3-2-using-networkmanager","link":"#_12-3-2-using-networkmanager","children":[]},{"level":2,"title":"12.3.3 NetworkManager Facts","slug":"_12-3-3-networkmanager-facts","link":"#_12-3-3-networkmanager-facts","children":[{"level":3,"title":"The nmtui Utility","slug":"the-nmtui-utility","link":"#the-nmtui-utility","children":[]},{"level":3,"title":"The nmcli Utility","slug":"the-nmcli-utility","link":"#the-nmcli-utility","children":[]}]}],"git":{"updatedTime":1736823478000},"filePathRelative":"12/03.md"}');export{u as comp,m as data};
