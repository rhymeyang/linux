import{_ as t,c as s,a as i,o as a}from"./app-CI1TiRY7.js";const n={};function o(r,e){return a(),s("div",null,e[0]||(e[0]=[i('<p>As you study this section, answer the following questions:</p><ul><li> Why is it important to create a detailed plan prior to deploying a Linux installation? </li><li> What elements should you consider while performing a needs assessment? </li><li> What factors should you consider while selecting a Linux distribution? </li><li> How can you ensure that specific hardware is compatible with the Linux distribution you have selected? </li><li> Why must the <b>/etc</b> , <b>/bin</b> , <b>/sbin</b> , <b>/lib</b> , and <b>/dev</b> directories all be on the same partition? </li><li> Which user account is automatically created when Linux is installed? </li><li>What types of installation sources are available for Linux?</li></ul><p>In this section, you will learn to:</p><ul><li>Design and gather information to plan a Linux installation</li></ul><p>Key terms for this section include the following:</p><table class="terms"><thead><tr><th>Term</th><th>Definition</th></tr></thead><tbody><tr><td>Partition</td><td> A partition is an area on a hard disk (or other secondary storage) on which a file system can be installed. </td></tr><tr><td>Physical volume</td><td> A storage area (such as a partition) that has been formatted with a file system. A volume can be limited to one partition, or span multiple partitions. </td></tr></tbody></table><p>This section helps you prepare for the following certification exam objectives:</p><table class="objectives"><thead><tr><th>Exam</th><th>Objective</th></tr></thead><tbody><tr><td>CompTIA Linux+ XK0-005</td><td> 2.1 Summarize the purpose and use of security best practices in a Linux environment <br><ul><li> Linux hardening <ul><li>Secure boot</li></ul></li></ul><p>3.4 Summarize common infrastructure as code technologies</p><ul><li> Utilities <ul><li>Ansible</li><li>Puppet</li><li>Chef</li></ul></li></ul></td></tr></tbody></table><h2 id="_3-1-1-system-design-part-1" tabindex="-1"><a class="header-anchor" href="#_3-1-1-system-design-part-1"><span>3.1.1 System Design Part 1</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>System Design Part 1 00:00-00:30 Before installing any operating system, you need to understand several key design ideas. These ideas include the system&#39;s role, the included hardware, the network environment, and so forth. As a result of these design components, you&#39;ll need to select software and configuration choices that match the needs of the system. Designing a Linux system requires planning for these same design ideas as well.</p><p>System Design Process 00:30-01:18 There are several steps to do this correctly. First, and probably most importantly, is to conduct a needs assessment since this drives the rest of the design process. Second is to define a project plan. Next is selecting a Linux distribution, or distro. Fourth is to verify that the hardware meets the requirements. The fifth step is to plan the file system itself.</p><p>The sixth is to select software packages, and seventh is to define system users. Then there&#39;s gathering connectivity and network information. And finally, you need to select an installation source.</p><p>As you can see, this is a lengthy process. In this lesson, we&#39;ll go over the first four steps one by one.</p><p>Conduct a Needs Assessment 01:18-02:00 As we said, the needs assessment is crucial. This sets the basis for the entire system. This is the &quot;what&quot;, &quot;why&quot;, &quot;how&quot;, and &quot;who&quot;. So, what&#39;s the intended use? It can be a new function or an update to an existing system. Why is this needed? Is there a new business unit or is the hardware currently in use aged out? How will the system be used? Is this a standalone system, on premises, or in the cloud? Who will use it? Is this departmental or company wide? The assessment should define the questions stakeholders might ask, such as cost estimates and required personnel.</p><p>Project Plan 02:00-02:39 This process ensures that the system is built to specifications and keeps you from missing steps later on. The stakeholders are the first in line to define the system. They&#39;re the group that define all of the components about the project. They may include the requestor, the users, the funding authority, management, and other key staff. Also, there&#39;s the team that&#39;ll test and approve the system as well as the maintenance and support staff. The plan may define additional components such as milestones and timelines. All this defines the roadmap that sets expectations for everyone involved.</p><p>Select a Distribution 02:39-04:32 Let&#39;s talk about your distro. Unlike commercial operating systems, there are many &quot;flavors&quot; of Linux available. While most target home users, there are a number of commercially available distros, including Red Hat and SUSE. Linux, for the most part, is built on the idea that software should be free and open for all to use. This is the &quot;open-source&quot; concept. Basically, Linux is Linux. Distros are designed to provide the software and services required for a given purpose. For instance, there are builds specific to workstation use, such as Ubuntu desktop and Fedora. Others, like SUSE Linux Enterprise Server or Ubuntu Server are built to provide network services. More specifically, there are distros that are build specifically for application or website development. This is the reason there are so many of them. The one constant is that they&#39;re all built on top of the Linux kernel.</p><p>When selecting a distribution, there are a number of factors that should influence your decision. First, do you require workstation or server functionality? Keep in mind that any Linux distro can function as either, but you might have to download additional software packages for this to work. Thankfully, most distros can be downloaded from the internet at no cost. Ones that offer support may require some form of payment or subscription, however. Another important factor is the hardware and software compatibility. Many systems are being used for machine learning or artificial intelligence, and these types of systems require very powerful and expensive graphics adapters made specifically for this environment. Take this into consideration, or you may be in for hours of troubleshooting ahead.</p><p>Hardware Support and System Requirements 04:32-06:03 Not that long ago, hardware compatibility was a major problem. Nowadays, operating systems do a great job of working out these issues. But there are still a number of things to look out for. There might be requirements for specialized hardware that Linux will have to recognize and know. These could be external devices, encryption and decryption, or things that are new to the market. Whatever the case, it&#39;s always important to check the system requirements.</p><p>Many hardware vendors provide Linux support for their devices. These add-ons to Linux are called drivers. Drivers become part of the operating system as the interface between the hardware and the OS, and they can be Linux distro-dependent as well. And many new systems utilize the Unified Extensible Firmware Interface, or UEFI. This replaces the older Basic Input/Output Services, or BIOS. UEFI has a feature called Secure Boot that may prevent peripherals from working correctly. This could cause several issues, including the inability to boot a system, so watch out for that.</p><p>Beyond these common issues, there are far too many scenarios to list all in one lesson. Where possible, you should verify hardware combability with selected vendors to ensure that the system you&#39;re putting together won&#39;t suffer from compatibility issues.</p><p>Summary 06:03-06:32 And that&#39;s all for now. In this lesson, we defined the high-level topics for systems design. We reviewed the first four steps in the system design process. We went over the requirements for a needs assessment, project plan, selecting a distribution, and verifying system requirements and hardware compatibility. We&#39;ll finish up the rest of the steps in part 2.</p><h2 id="_3-1-2-system-design-part-2" tabindex="-1"><a class="header-anchor" href="#_3-1-2-system-design-part-2"><span>3.1.2 System Design Part 2</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>System Design Part 2 00:00-01:08 Planning is part of any new software installation. You must specify installation directories, optional components, and much more. The same is true when installing an operating system like Linux. Granted, if you&#39;re installing in a home or lab environment, it&#39;s generally a pretty straightforward task. However, if you&#39;re installing for production, this doesn&#39;t work. Depending on the intended system use such as an email server, database server, file storage server, web server, or some other use, the Linux system may require targeted software and change the disk partitioning. In this lesson we&#39;ll begin looking at how to design and plan a Linux system.</p><p>The major steps required to design a system include a needs assessment, planning the project, selecting a distribution, hardware requirements, planning the file system, selecting software packages, defining users and groups, gathering network information, and selecting an installation source. We&#39;ll discuss the last 5 topics in this lesson.</p><p>Planning the File System 01:08-01:51 Configuring the storage system is a key task that defines how the system will utilize both internal and remote storage. Unlike other operating systems, Linux provides many choices for partitioning and formatting disks. The first step is partitioning the disk. While using advanced disk features such as mirroring and RAID are beyond the scope of this course, it&#39;s important to understand when planning the file system. Partitioning divides a single physical disk into logical disks that can be used for various purposes. Formatting adds to the file system and makes the partition usable. In this section, we&#39;ll discuss standard disk partitions and file system formats.</p><p>Disk Partitions 01:51-04:21 Assume you&#39;re building a generic file-and-print server, and you need to partition a single-disk system. Let&#39;s start with an 8TB disk. A single partition of 8TB doesn&#39;t make sense, so we need to divide the single physical disk into independent pieces. Partitions are mounted to the specified directory in the Linux file system. First, we need a piece that works with the hardware to create a bootable section to load Linux. This is called the /boot partition. This partition rarely changes and doesn&#39;t require much space, so let&#39;s allocate 10GB to /boot. Next, we need to create a SWAP partition. The SWAP partition is used when your system runs out of RAM. While this is not ideal, it&#39;s necessary to allow your system to continue running if there&#39;s no additional RAM to allocate. A good rule of thumb is to create a SWAP partition the same size as the RAM in your system. So, if you have 32GB RAM in your system, create a SWAP partition of 32GB. The rest of the space can be given to the / or root directory—about 7 1/2TB.</p><p>Depending on how your system is used, you may need additional partitions. For instance, if you create a web server, you may want to partition the /var directory since that&#39;s where all the logs are stored. For a storage server where users store their personal files, you may want a partition for the /home directory. The idea is not to fill up the root directory, as that can adversely affect the system as a whole.</p><p>This is where you can be creative. It&#39;s very important to understand what system will use to allocate and divide storage appropriately. Start with /boot, root, and SWAP. Then, add additional partitions as needed. For a database server or web server, you typically want a partition for the database data and /var. For a webserver, an application server may require an /opt partition.</p><p>There are many possibilities here, including specific vendor requirements. There are many directories standard on a Linux system. If you believe any of those directories could grow and fill up all possible disk space, you may consider creating a partition to limit the damage to your system. Also, vendors may specify certain directories with partitions, so you need to do your due diligence to ensure proper operation and maintenance of the system.</p><p>File Systems 04:21-05:59 Once the partitions have been defined, a file system must be selected for each partition. There are many different file systems available in Linux for various purposes. One may be better for many small files, while another is better suited for large, multi-GB files. The ext filesystems are the oldest and still used. They&#39;re resilient and a good choice for basic Linux installations. XFS was developed by Silicon Graphics and has many advanced features and supports extremely large filesystems with file support of up to 8 exabytes. Oracle created btrfs with names like butter-FS and better-FS. It also supports a large file system size and is based on fault tolerance, self-healing, and easy administration. Its most notable feature is Copy-on-Write. It writes updated data to a different space on the disk so as not to overwrite the original data until the write is committed to the disk. This helps to avoid data corruption. The ZFS file system was built by Oracle to support a filesystem of zettabytes of data or one billion terabytes.</p><p>So, as you can see, there&#39;s a wide diversity among filesystems. Choosing the correct one depends on your situation and your system&#39;s intended use. This is more of an art as opposed to science. As you gain more experience, you&#39;ll have an easier time making the correct decisions. As new filesystems are introduced, becoming acquainted with their features and drawbacks will help you to make decisions.</p><p>Select Software Packages 05:59-06:56 When you initially install a new Linux system, you&#39;ll be prompted to answer questions about how the system will be used. You can choose a web server, database server, development, etc. These selections have predefined software package installation choices to ensure the correct software is installed on the system. In addition, you can install individual software packages such as different desktops, programming tools, and system administration tools, to name just a few. The rule of thumb here is to install only what&#39;s needed. Apply the rule that less is more. When unneeded software is installed on the system, the potential of creating a security hole is increased. Keep in mind that it&#39;s much easier to install new software than to remove existing software. Further, considering most of the software is open source, there&#39;s no need to be concerned with purchasing new software or licensing.</p><p>Define Users and Groups 06:56-07:34 When the initial system is created, the user root is also created. The root user is the primary administrative user on a Linux system. Keep in mind that Linux is a true multi-user system. A user account can be created for every user on the system. Users can be created during system installation or after. Often, Linux is combined with other systems to import user accounts from different directories, such as Microsoft&#39;s Active Directory. The same applies to groups. Groups can be created and populated when the Linux system is created or can be imported.</p><p>Gather Connectivity and Network Information 07:34-08:53 Most often, Linux systems are connected to an internal or external network. Workstations are often connected to more extensive networks such as a server network or the internet. A server generally provides services and requires different network settings. Network configurations are necessary to ensure your machine can communicate with other devices on the network. Depending on the services a server may provide, additional configuration is often required for the DHCP server, DNS server, and Firewall. The DNS server must be configured with the new server name, and the firewall may require opening ports for its services or remote connectivity</p><p>The first piece of information required is the IP information. You need to know the IP address, subnet address, and gateway address. These can be obtained via DHCP or can be configured manually. Workstations are often configured using DHCP, and servers or service providers are manually configured. Both system types also require DNS information. Lastly, the system name should be configured using naming standards if they exist. If no standards exist, assign the system a unique name on the local network.</p><p>Select an Installation Source 08:53-09:55 There are several methods you can use to install Linux. Some Linux developers have automation tools. For system administrators who use and manage several Linux systems, taking the time to learn these automations make sense. For the small networks with a couple of systems or the home enthusiast, a straightforward approach makes the most sense.</p><p>Automation tools include Puppet, Chef, and Red Hat&#39;s Ansible. When performing a manual installation, you can use an optical drive, USB stick, or an HTTP to stream the installation.</p><p>At this point, your Linux deployment plan is now complete, and you should have all the information you need to complete the Linux installation efficiently. It&#39;s important to document all the information you collect and store. You may be asked to provide the documentation for inventory or change control. Further, you may need to perform a similar install later. Having the document available may help with another system installation.</p><p>Summary 09:55-10:17 This completes the system design process. In this lesson, we reviewed the last five steps... planning the file system, selecting software packages, defining users and groups, gathering connectivity and network information, and selecting an installation source.</p><h2 id="_3-1-3-system-design-facts" tabindex="-1"><a class="header-anchor" href="#_3-1-3-system-design-facts"><span>3.1.3 System Design Facts</span></a></h2><p>This lesson covers the following topics:</p><ul><li>Planning and designing advantages</li><li>Effective installation design</li></ul><h3 id="planning-and-designing-advantages" tabindex="-1"><a class="header-anchor" href="#planning-and-designing-advantages"><span>Planning and Designing Advantages</span></a></h3><p>Planning and designing a Linux installation has the following advantages:</p><ul><li>A plan ensures that the installer knows exactly what should happen during the installation. The plan places all the information in the installer&#39;s hands before installation begins.</li><li>There are fewer variables involved when diagnosing and resolving problems.</li><li>The plan gives the IT team a point of reference when changes are requested that will require the project scope, resources, or schedule to be modified.</li></ul><h3 id="effective-installation-design" tabindex="-1"><a class="header-anchor" href="#effective-installation-design"><span>Effective Installation Design</span></a></h3><p>There are several steps that should be completed before the installation of a Linux system.</p><table><thead><tr><th>Steps</th><th>Description</th></tr></thead><tbody><tr><td>Perform a needs assessment</td><td> An effective needs assessment determines the goals of the installation, creates a plan to meet those needs, and measures the results of the plan. This involves: <ul><li> Interviewing managers to determine the goals they want to achieve, the problems they need to solve, and the results they expect. </li><li> Writing clear, measurable statements that specifically address the goals. </li><li>Identifying the stakeholders.</li><li>Confirming correct authorization.</li><li> Aligning the installation with current organizational strategy and technology. </li><li>Verifying funding.</li><li>Creating a support strategy.</li><li> Determining the scope by: <ul><li>Identifying deadlines</li><li>Determining the tasks that must be completed</li><li>Planning for human resource allocation</li></ul></li></ul></td></tr><tr><td>Pick a distribution</td><td> Picking a distribution involves: <ul><li> Determining whether the computer should be a server or workstation. Most distributions can be either, but some are better designed for specific functions and even specific types of servers. </li><li> Determining whether end users will be comfortable with the distribution or configuration changes might be necessary. </li><li> Determining if required software is available for the distribution. Make a list of applications and ensure that they are provided on the distribution. </li><li>Ensuring that the distribution has the necessary support.</li></ul></td></tr><tr><td>Determine the hardware requirements</td><td> Some computer hardware is incompatible with some distributions. Ensure that: <ul><li> The computers&#39; hardware is on the distribution&#39;s hardware compatibility list. </li><li> The computers have sufficient CPU speed, memory, and other system requirements to run the distribution and installed software. </li><li> The distribution&#39;s architecture matches the computer&#39;s CPU architecture. These include: <ul><li>x86 for 32-bit CPUs</li><li>x64 for 64-bit CPUs</li><li>IA-64 for Itanium CPUs</li><li>ALPHA for Alpha CPUs</li><li>PPC for Power PC (Apple) CPUs</li></ul></li></ul></td></tr><tr><td>Plan the file system</td><td> The file system determines how a computer&#39;s files are organized on a hard drive. Linux supports several file system types that have different characteristics, including the following: <ul><li> ext2 has volume integrity features that may take several minutes to run after a system crash. </li><li> ext3 uses journaling to ensure that only incomplete transactions are checked after a system crash. </li><li> ext4 is similar to ext3, but includes newer features that reduce file fragmentation. It also allows for larger volumes and files and uses delayed allocation to improve flash memory life. </li><li> btrfs allows for drive pooling, on-the-fly snapshots, transparent compression, and online defragmentation. </li><li> XFS is similar to ext4. It uses delayed allocation to help with file fragmentation and does not allow for mounted snapshots. It can be enlarged on the fly, but not shrunk. </li></ul><p> Pick the file system that best meets your organization&#39;s needs. Considerations include: </p><ul><li>Maximum volume size</li><li>Maximum file size</li><li>File name size</li><li>Permissions and file security</li><li>Encryption support</li><li>Recovery support and speed</li><li>Backup support</li><li>Journal support</li></ul></td></tr><tr><td>Plan the partitions</td><td> Partition planning is another element of file system planning. An efficient strategy is to create multiple partitions based on the types of files held on the partition and the user access needs. Consider creating separate partitions for the following directories and set mount options based on the type of files in the directory: <ul><li> / (root) must to be at least 8 GB, but really should be much larger. The partition holding the root directory should not be on an extended MBR partition and must be formatted with a Linux file system. </li><li> /home should be as large as needed to store the user files. </li><li> /boot should be 100–200MB and needs to be in the first 1024 cylinders of the disk for older BIOS versions. </li><li> /opt should be large enough to support the applications that will be installed. </li><li> /tmp should be large enough to store the temporary files created by the system. Be aware that these temporary files are periodically cleaned out by the operating system. </li><li> /usr should be large enough to support the packages to be installed on the system. </li><li> /var should be large enough to support the user mail boxes, print queues, and log files that will be created on the system. </li><li> swap should be two times larger than the amount of installed RAM on desktop systems and one times the amount of installed RAM on server systems. Linux can use either a swap file or a swap partition for the swap area. Whenever possible, use a separate swap partition. To increase performance, consider creating multiple swap partitions on multiple storage devices. </li></ul><p> /etc, /bin, /sbin, /lib, /dev, and /proc must all be on the same partition (/). These directories have system configuration files that are necessary for Linux to function properly. </p></td></tr><tr><td>Identify software</td><td> Determine which software packages need to be installed and install only those packages. This ensures that system resources are conserved and vulnerabilities are limited. </td></tr><tr><td>Identify the users</td><td> Determine the users who will use the computer. Consider the following: <ul><li>Ensure correct name spelling for the users.</li><li> Determine whether users log in locally or over the network. </li><li>Define a list of groups to which the users will belong.</li></ul><p> The root user is always installed. Use this account only when necessary to ensure security. </p></td></tr><tr><td>Gather network information</td><td> Gather the following types of network information: <ul><li>Protocol (IPv4 or IPv6)</li><li>IP address</li><li>Default gateway</li><li>Subnet mask</li><li> Server information for DNS servers, mail servers, and other network servers </li><li>Network topology information, such as domain names</li><li>Naming conventions for servers and workstations</li><li>Domain names</li></ul></td></tr><tr><td>Select an installation source</td><td> Installation sources include: <ul><li>CD</li><li>DVD</li><li>ISO file</li><li>Network share</li><li>Online installation repository</li></ul></td></tr></tbody></table>',50)]))}const d=t(n,[["render",o],["__file","01.html.vue"]]),h=JSON.parse('{"path":"/03/01.html","title":"Section 3.1 Linux System Design","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Section 3.1 Linux System Design","description":"some description"},"headers":[{"level":2,"title":"3.1.1 System Design Part 1","slug":"_3-1-1-system-design-part-1","link":"#_3-1-1-system-design-part-1","children":[]},{"level":2,"title":"3.1.2 System Design Part 2","slug":"_3-1-2-system-design-part-2","link":"#_3-1-2-system-design-part-2","children":[]},{"level":2,"title":"3.1.3 System Design Facts","slug":"_3-1-3-system-design-facts","link":"#_3-1-3-system-design-facts","children":[{"level":3,"title":"Planning and Designing Advantages","slug":"planning-and-designing-advantages","link":"#planning-and-designing-advantages","children":[]},{"level":3,"title":"Effective Installation Design","slug":"effective-installation-design","link":"#effective-installation-design","children":[]}]}],"git":{"updatedTime":1736407950000},"filePathRelative":"03/01.md"}');export{d as comp,h as data};
