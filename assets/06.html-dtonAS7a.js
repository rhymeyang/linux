import{_ as t,c as i,a as s,o}from"./app-CsWvKd9L.js";const n={};function a(l,e){return o(),i("div",null,e[0]||(e[0]=[s('<p>As you study this section, answer the following questions:</p><ul><li>Which directory contains mount points specifically for external storage devices?</li><li>What do you need to do to make a USB drive accessible?</li><li>What happens if you mount a volume to a directory that already contains data?</li><li>How can you verify that a volume is mounted correctly?</li><li>Which commands can you use to view the devices that are currently mounted?</li><li>How can you prevent users from mounting an optical media drive?</li></ul><p>In this section, you will learn to:</p><ul><li>Mount a volume</li><li>Unmount a volume</li></ul><p>Key terms for this section include the following:</p><table class="terms"><thead><tr><th> Term</th><th> Definition</th></tr></thead><tbody><tr><td><b class="fw-bold">mount</b></td><td>View the currently mounted volumes on the system.</td></tr><tr><td><b class="fw-bold">df</b></td><td>View which file systems are mounted to specific mount points.</td></tr></tbody></table><p>This section helps you prepare for the following certification exam objectives:</p><table class="objectives"><thead><tr><th>Exam</th><th>Objective</th></tr></thead><tbody><tr><td>TestOut Linux Pro</td><td>2.1 Manage storage devices <br><ul><li>Mount and unmount devices in the file system</li></ul></td></tr><tr><td>CompTIA Linux+ XK0-005</td><td>1.3 Given a scenario, configure and manage storage using the appropriate tools <br><ul><li>Mounting local and remote devices</li><li style="list-style:none;display:inline;"><ul><li>systemd.mount</li><li>/etc/fstab</li><li>mount</li><li>Linux Unified Key Setup (LUKS)</li><li>External devices</li></ul></li><li>Monitoring storage space and disk usage</li><li style="list-style:none;display:inline;"><ul><li>df</li></ul></li></ul><p>4.1 Given a scenario, analyze and troubleshoot storage issues</p><ul><li>Mount option problems</li></ul><br></td></tr></tbody></table><h2 id="_8-6-1-file-system-mounting-facts" tabindex="-1"><a class="header-anchor" href="#_8-6-1-file-system-mounting-facts"><span>8.6.1 File System Mounting Facts</span></a></h2><p>Hard disk partitions, optical drives, USB drives, and other similar devices in a Linux system must be mounted before they can be used.</p><p>This lesson covers the following topics:</p><ul><li>Mounting process</li><li>Manage and monitor mountings</li><li>Manage file system mountings</li><li>Troubleshoot storage issues</li></ul><h3 id="mounting-process" tabindex="-1"><a class="header-anchor" href="#mounting-process"><span>Mounting Process</span></a></h3><p><strong>Mounting</strong> is the process of making a storage device accessible to users through the directory tree. The file system directory that&#39;s used to access the files on the device is called the <strong>mount point</strong> .</p><ul><li> Partitions and LVM logical volumes are represented by device files located in the <b>/dev</b> directory. However, these storage devices must be mounted before the data on them can be accessed. </li><li> A storage device can be mounted on a directory in the file system. When accessing the directory in the file system, you&#39;re actually accessing the device that&#39;s mounted in that directory. </li><li> You should mount storage devices in empty directories. Mounting a volume to a directory that contains data makes the data inaccessible. </li><li> The <b>/mnt</b> and <b>/media</b> directories (depending on the system configuration) are directories that contain mount points specifically for external storage devices (e.g., CD-ROM drives, floppy drives, and magnetic tape drives). </li><li> If LUKS (Linux Unified Key Setup) is used to encrypt a device, the passphrase for the key used for encryption must be entered when mounted. Although you can can automate this process, it is not recommended for laptops. </li></ul><h3 id="manage-and-monitor-mountings" tabindex="-1"><a class="header-anchor" href="#manage-and-monitor-mountings"><span>Manage and Monitor Mountings</span></a></h3><p>The following files manage and monitor the file system mounting:</p><table><thead><tr><th>File</th><th>Description</th></tr></thead><tbody><tr><td>/etc/fstab</td><td> The /etc/fstab file identifies devices to mount each time the system boots. When the system boots, it automatically mounts the volumes identified in the file. The file contains entries with six fields that control how a device is mounted. The following is a typical fstab entry: <blockquote class="code"> /dev/sda3 /mnt/disk1 ext3 auto,ro,nosuid,users 0 1 </blockquote><p> An entry consists of the following variables, which are described below: </p><blockquote class="code"> [ <i>device_to_mount</i> ] [ <i>mount_point</i> ] [ <i>file_system_type</i> ] [ <i>options</i> ] [ <i>dump</i> ] [ <i>fsck</i> ] </blockquote><ul><li><i>Device_to_mount</i> is the path to the device file or the label that describes the storage device to be mounted. </li><li><i>Mount_point</i> specifies where to mount the device. This is the directory where the data on the device can be accessed. </li><li><i>File_system_type</i> specifies the type of file system that has been created on the storage device. </li><li><i>Options</i> specify the additional options to be used when mounting the device. Multiple options are separated by commas. <ul><li><b>sync</b> enables synchronous I/O. Changes are written to disk immediately. This option is normally used for removable storage devices ( <b>async</b> disables this function). </li><li><b>async</b> enables asynchronous I/O. Changes are cached and then written when the device isn&#39;t busy. This option is normally used for non-removable devices such as hard drives ( <b>sync</b> disables this function). </li><li><b>atime</b> updates the timestamp on each file&#39;s inode ( <b>noatime</b> disables this function). </li><li><b>auto</b> allows the device to be mounted automatically when the system boots. </li><li><b>noauto</b> prevents the device from being mounted automatically when the system boots. </li><li><b>dev</b> allows block files to be read from the device ( <b>nodev</b> disables this function). </li><li><b>exec</b> allows programs and script files in the file system to be run ( <b>noexec</b> disables this function). </li><li><b>owner</b> identifies that only the device owner can mount the file system. </li><li><b>ro</b> mounts the storage device as read-only.</li><li><b>rw</b> mounts the storage device as read/write.</li><li><b>suid</b> allows the SUID bit to be set on files in the file system ( <b>nosuid</b> disables this function). </li><li><b>nouser</b> allows only the root user to mount the file system. </li><li><b>users</b> allows any user to mount the file system. </li><li><b>defaults</b> uses the following default settings: <b>rw</b> , <b>suid</b> , <b>dev</b> , <b>exec</b> , <b>auto</b> , <b>nouser</b> , and <b>async</b> . </li></ul></li><li><i>Dump</i> determines whether the file system needs to be dumped. If set to a value of <b>0</b> , it is assumed that the file system does not need to be dumped. If set to a value of <b>1</b> , the file system will be dumped. </li><li><i>fsck</i> determines the order to run <b>fsck</b> (file system check) during system boot. This field should always be set to a value of <b>1</b> for the device containing the root file system (/). All other file systems should be set to a value of <b>2</b> . </li></ul></td></tr><tr><td>/etc/mtab</td><td> The /etc/mtab file tracks the currently mounted volumes on the system. </td></tr><tr><td>/procs/mounts</td><td> The /procs/mounts file contains entries for all currently mounted volumes on the system. </td></tr><tr><td>systemd.mount</td><td> A unit file that encodes information about a file system mount point controlled and supervised by systemd. </td></tr></tbody></table><h3 id="manage-file-system-mountings" tabindex="-1"><a class="header-anchor" href="#manage-file-system-mountings"><span>Manage File System Mountings</span></a></h3><p>Use the following commands to manage the file system mounting:</p><table><thead><tr><th>Command</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td><h2>mount /dev/[device]</h2></td><td><p>Mount a volume or device. Common mount options:</p><ul><li><b>-a</b> mounts all file systems listed in the /etc/fstab file. </li><li><b>-r, ro</b> mounts the volume as read-only.</li><li><b>-w, rw</b> mounts the volume as read/write.</li><li><b>-t</b> specifies the volume type. (If you mount an ext3 file system without the <b>-t</b> , the system recognizes it as an ext2 file system.) </li><li><b>-o loop</b> mounts an ISO file.</li></ul></td><td><ul><li><b>mount -a</b> reads the <b>/etc/fstab</b> file and mounts all volumes listed (except those with the <b>noauto</b> option). </li><li><b>mount -rt reiserfs /dev/sdc1 /mnt/reis</b> mounts the sdc1 device using the read-only Reiser file system to the /mnt/reis mount point. </li><li><b>mount -t iso9660 /dev/sr0 /media/cdrom</b> mounts an optical disc device to the /media/cdrom mount point. </li><li><b>mount -wt vfat /dev/fd0 /mnt/floppy</b> mounts the fd0 device with the VFAT file system as read/write to the floppy mount point. </li></ul></td></tr><tr><td><b>mount</b></td><td><p>View the currently mounted volumes on the system.</p></td><td><ul><li><b>mount</b> <b>/etc/mtab</b> displays the contents of the /etc/mtab file. </li></ul></td></tr><tr><td><b>df</b></td><td><p> View which file systems are mounted to specific mount points. </p></td><td></td></tr><tr><td><h2>umount</h2></td><td><p> Unmount a volume or device from the system. If a &quot;disk is busy&quot; error message is displayed when unmounting a device: </p><ul><li> Make sure that the current working directory is not in that file system. </li><li>Close any open files located on that file system.</li></ul></td><td><ul><li><b>umount /dev/sdc1</b> unmounts the sdc1 device.</li><li><b>umount /mnt/reis</b> unmounts the device on the /mnt/reis mount point. </li><li><b>umount /dev/sr0</b> unmounts the optical disc device. </li><li><b>umount /mnt/cdrom</b> unmounts the device on the /mnt/cdrom mount point (most likely an optical disc drive). </li></ul></td></tr></tbody></table><h3 id="troubleshoot-storage-issues" tabindex="-1"><a class="header-anchor" href="#troubleshoot-storage-issues"><span>Troubleshoot Storage Issues</span></a></h3><p>Many storage issues center around the physical aspects of the storage device. Other issues involve operating system configurations. A good strategy for troubleshooting storage issues is to start checking the simplest system features and then move to the more complex features. Many problems are resolved outside of Linux. Here are a few general items to check before moving to the Linux operating system.</p><ul><li>Determine whether the storage device has power. If the device is external to the computer, ensure that it&#39;s plugged in and turned on. A power light is also a good indicator.</li><li>If the drive has platters (it&#39;s not a solid-state device), determine that the drive is spinning. You should be able to hear the head moving across the platters.</li><li>Determine if the drive is recognized by the BIOS/UEFI. If not, the problem could be a hardware issue.</li></ul><p>The following table list some issues that are detected and resolved with Linux.</p><table><thead><tr><th>Storage Issue</th><th>Description</th><th>Resolution Techniques</th></tr></thead><tbody><tr><td>Degraded storage</td><td> Disk volumes, especially RAID sets, may show a status of <i>Degraded</i> . This means that I/O errors have been detected on a region of the disk. This can occur when one disk in a RAID set is offline or is unable to provide the proper RAID redundancy. </td><td>Repair or replace the disk volume.</td></tr><tr><td> Missing devices <br> or volumes </td><td> A storage device with hardware problems may not show in the /dev directory, or the partitions on a storage device might be missing. </td><td> The <b>fdisk -lu</b> and <b>parted -l</b> commands may give some clues to the problem. </td></tr><tr><td>Missing mount point</td><td> Missing mount points indicate that a partition is not mounted. Often, this happens after a reboot. </td><td> Ensure that the proper entry has been added to the /etc/fstab file. </td></tr><tr><td>Disk performance</td><td> A slow disk can dramatically affect the total performance of a Linux system, especially if the system partition is on the slow disk. </td><td> The <b>atop</b> command can be used to monitor disk I/O stats. This may give an indication of a slow disk. </td></tr><tr><td>Resource exhaustion</td><td> A full volume, especially if it&#39;s the system volume, can cause Linux to freeze or crash. </td><td>Use the <b>df</b> command to monitor disk space.</td></tr><tr><td>Adapters</td><td> Physical storage devices are attached to storage adapters. Example are SCSI, RAID, and SATA host bus adapters (HBAs). Other HBAs, like a fiber channel adapter, can connect to storage area networks. </td><td> Use <b>/sys/class/scsi_host#/scan</b> to scan for storage devices connected to the SCSI adapter. </td></tr><tr><td>Storage integrity</td><td> Bad sectors and bad blocks on a storage devices can corrupt data. </td><td> Use the <b>badblocks</b> command to scan for bad sectors and blocks. </td></tr></tbody></table><h2 id="_8-6-2-mounting-a-file-system" tabindex="-1"><a class="header-anchor" href="#_8-6-2-mounting-a-file-system"><span>8.6.2 Mounting a File System</span></a></h2><p>Click one of the buttons to take you to that part of the video.</p><p>Mount a File System 00:00-00:26 In this demonstration, we&#39;re going to review how to mount a file system. Specifically, we&#39;re going to talk about how to mount a file system from the command-line. We&#39;ll talk about how to unmount a file system from the command-line. We&#39;ll talk about adding entries to the fstab file. Then we&#39;ll end this demonstration by discussing how to mount and unmount LVM logical volumes.</p><p>Mount File Systems from the Command-Line 00:26-02:44 To begin with, let&#39;s switch to the root account. Now let&#39;s run the fdisk command with the -l to view all partitions defined by Linux. As we scroll through all the drives, notice that only this one has enough file space to be our new drive.</p><p>We&#39;re not going to play with any hard disks at all. Instead, we&#39;re going to focus on the partitions stored on the external hard disk drive in my system—sda. You can determine the correct drive by remembering the size of the drive. In this case, the other drives are small, and sda2 is the file size matching the external drive.</p><p>In this case, the external drive has the full path /dev/sda2 shown here. The file systems have been created on the partitions, but we still can&#39;t save data because they&#39;re not currently mounted in the Linux file system. Let&#39;s fix that.</p><p>Understand that Linux file systems are mounted within directories in the file system. They aren&#39;t assigned drive letters, as you&#39;d see in Windows. In Windows, if you added a hard disk with two partitions on it to the system, by default, you&#39;d see two drive letters added to Windows Explorer, maybe drive D and drive E.</p><p>Before mounting drives, we want to go into the /mnt directory, which is used for mounting file systems. As a good rule, never mount partitions directly into the /mnt directory, as it will only allow one partition to be mounted. Create a subdirectory called shared inside the /mnt directory. Once you create it, check to ensure it&#39;s there as it should be with ls.</p><p>Now that we have the shared folder created, it&#39;s time to mount the drive to that folder. In this case, mount /dev/sda2 /mnt/shared. When mounting is complete, we switch to the shared directory at the command prompt, such as this. I&#39;ve just switched over to a completely different hard disk drive. By switching to the shared folder, we&#39;re accessing the files on the newly mounted drive. In order to verify that the drive has been mounted correctly, type mount. At the bottom of the list, you&#39;ll see the status of the mounted file system.</p><p>Unmount File Systems from the Command-Line 02:44-03:30 If you have a file system mounted in a directory somewhere and you no longer need it mounted, you can easily unmount it. Let&#39;s first unmount the file system on device /dev/sda2. This&#39;ll unmount it from the directory, making any data on that partition inaccessible.</p><p>Let&#39;s enter umount and then enter the name of the device file for the partition, /dev/sda2, and press Enter. If I type mount, we see that sda is no longer mounted in the /shared directory. Once that umount command has been executed, the /mnt/shared directory just becomes a regular directory on the default partition where it&#39;s located.</p><p>Add an Entry Using the fstab File. 03:30-05:15 Be aware that if we use the mount command to mount a file system, that mounting will only be persistent as long as the system stays running. As soon as you reboot, the mounting will be gone, and you&#39;ll have to redo it manually. Therefore, if you want the file system to be mounted persistently across system reboots, you&#39;ll have to add an entry to the /etc/fstab file.</p><p>To do this, we enter vi to open the vi editor and then specify /etc/fstab. There&#39;s already some default file mounting specified here in the file. Once the file&#39;s open, move to the bottom right and press the o key to add a new line. The new line will be where we add the shared mount. We enter the filename /dev/sda2, then add the directory where we want to map /mnt/shared.</p><p>There are a few more settings we need to add to that line. Tab after the mount folder, and specify the file system we&#39;ll use—in my case, it&#39;s ext4. Press Tab again and type defaults. This means using the default options for mounting, which include reading and writing to the mount.</p><p>After another tab, we enter a 1, then a space, and then a 2. This one specifies that the file system can be dumped. If you have a zero, the file system isn&#39;t allowed to be dumped. The 2 specifies the order in which the file systems should be checked whenever the system boots up. We&#39;ll then save changes to the file. Because of the entries we&#39;ve added to the fstab file, that partition will automatically be mounted in the directories whenever the system boots.</p><p>Summary 05:15-05:41 That&#39;s it for this demonstration. In this demo, we talked about how to mount a Linux file system. We talked about mounting file systems from the command-line. We talked about unmounting file systems from the command-line. Then we ended the demonstration by talking about how to add an entry to the fstab file to make the mounting persistent across reboots.</p>',42)]))}const r=t(n,[["render",a],["__file","06.html.vue"]]),h=JSON.parse('{"path":"/08/06.html","title":"Section 8.6 Mounting File Systems","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"Section 8.6 Mounting File Systems","description":"some description"},"headers":[{"level":2,"title":"8.6.1 File System Mounting Facts","slug":"_8-6-1-file-system-mounting-facts","link":"#_8-6-1-file-system-mounting-facts","children":[{"level":3,"title":"Mounting Process","slug":"mounting-process","link":"#mounting-process","children":[]},{"level":3,"title":"Manage and Monitor Mountings","slug":"manage-and-monitor-mountings","link":"#manage-and-monitor-mountings","children":[]},{"level":3,"title":"Manage File System Mountings","slug":"manage-file-system-mountings","link":"#manage-file-system-mountings","children":[]},{"level":3,"title":"Troubleshoot Storage Issues","slug":"troubleshoot-storage-issues","link":"#troubleshoot-storage-issues","children":[]}]},{"level":2,"title":"8.6.2 Mounting a File System","slug":"_8-6-2-mounting-a-file-system","link":"#_8-6-2-mounting-a-file-system","children":[]}],"git":{"updatedTime":1736669805000},"filePathRelative":"08/06.md"}');export{r as comp,h as data};
